import Component from "@egjs/component";
import CameraControl from "./CameraControl";
import Camera from "../core/Camera";
import { ControlEvents } from "../type/internal";
export interface ZoomControlOptions {
    scale: number;
    duration: number;
    easing: (x: number) => number;
}
type ZoomControlEvents = ControlEvents<number>;
declare class ZoomControl extends Component<ZoomControlEvents> implements CameraControl {
    private _scale;
    private _controlEl;
    private _enableBlocked;
    private _wheelInput;
    private _pinchInput;
    private _motion;
    private _enabled;
    get enabled(): boolean;
    get enableBlocked(): boolean;
    get animating(): boolean;
    get zoom(): number;
    get scrollable(): boolean;
    set scrollable(val: boolean);
    get range(): import("../type/utils").Range;
    get scale(): ZoomControlOptions["scale"];
    set scale(val: ZoomControlOptions["scale"]);
    get duration(): number;
    get easing(): (x: number) => number;
    constructor(controlEl: HTMLElement, enableBlocked: boolean, { scale, duration, easing }?: Partial<ZoomControlOptions>);
    destroy(): void;
    update(delta: number): void;
    enable(): void;
    disable(): void;
    sync(camera: Camera): void;
    private _bindInputs;
    private _onInputStart;
    private _onChange;
    private _onInputEnd;
}
export default ZoomControl;
