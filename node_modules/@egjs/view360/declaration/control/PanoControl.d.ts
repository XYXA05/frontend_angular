import RotateControl, { RotateControlOptions } from "./RotateControl";
import ZoomControl, { ZoomControlOptions } from "./ZoomControl";
import GyroControl, { GyroControlOptions } from "./GyroControl";
import Camera from "../core/Camera";
export interface PanoControlOptions {
    useGrabCursor: boolean;
    scrollable: boolean;
    wheelScrollable: boolean;
    disableContextMenu: boolean;
    rotate: boolean | Partial<RotateControlOptions>;
    zoom: boolean | Partial<ZoomControlOptions>;
    gyro: boolean | Partial<GyroControlOptions>;
}
declare class PanoControl {
    private _useGrabCursor;
    private _disableContextMenu;
    private _camera;
    private _controlEl;
    private _rotateControl;
    private _zoomControl;
    private _gyroControl;
    private _ignoreZoomScale;
    private _enabled;
    get useGrabCursor(): PanoControlOptions["useGrabCursor"];
    set useGrabCursor(val: PanoControlOptions["useGrabCursor"]);
    get disableContextMenu(): PanoControlOptions["disableContextMenu"];
    set disableContextMenu(val: PanoControlOptions["disableContextMenu"]);
    get scrollable(): PanoControlOptions["scrollable"];
    set scrollable(val: PanoControlOptions["scrollable"]);
    get wheelScrollable(): PanoControlOptions["wheelScrollable"];
    set wheelScrollable(val: PanoControlOptions["wheelScrollable"]);
    get ignoreZoomScale(): boolean;
    set ignoreZoomScale(val: boolean);
    get enabled(): boolean;
    get rotate(): RotateControl;
    get zoom(): ZoomControl;
    get gyro(): GyroControl;
    get animating(): boolean;
    constructor(element: HTMLElement, camera: Camera, { useGrabCursor, scrollable, wheelScrollable, disableContextMenu, rotate, zoom, gyro }: PanoControlOptions);
    destroy(): void;
    resize(width: number, height: number): void;
    enable(): Promise<void>;
    disable(): void;
    update(delta: number): void;
    sync(): void;
    private _blockContextMenu;
    private _restoreContextMenu;
    private _preventContextMenu;
    private _setCursor;
    private _bindEvents;
    private _onInputStart;
    private _onInputEnd;
    private _onEnable;
    private _onDisable;
    private _onCameraAnimationEnd;
}
export default PanoControl;
