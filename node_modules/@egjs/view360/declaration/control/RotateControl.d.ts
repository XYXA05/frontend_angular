import Component from "@egjs/component";
import CameraControl from "./CameraControl";
import Camera from "../core/Camera";
import Motion from "../core/Motion";
import { ControlEvents } from "../type/internal";
export interface RotateControlOptions {
    pointerScale: [number, number];
    keyboardScale: [number, number];
    duration: number;
    easing: (x: number) => number;
    disablePitch: boolean;
    disableYaw: boolean;
    disableKeyboard: boolean;
}
type RotateDeltaType = {
    x: number;
    y: number;
};
export type RotateControlEvents = ControlEvents<RotateDeltaType>;
declare class RotateControl extends Component<RotateControlEvents> implements CameraControl {
    private _pointerScale;
    private _keyboardScale;
    private _duration;
    private _easing;
    private _disablePitch;
    private _disableYaw;
    private _disableKeyboard;
    private _controlEl;
    private _enableBlocked;
    private _mouseInput;
    private _touchInput;
    private _keyboardInput;
    private _xMotion;
    private _yMotion;
    private _screenScale;
    private _zoomScale;
    private _enabled;
    private _changedWhileDragging;
    get enabled(): boolean;
    get enableBlocked(): boolean;
    get animating(): boolean;
    get yaw(): Motion;
    get pitch(): Motion;
    get scrollable(): boolean;
    set scrollable(val: boolean);
    get pointerScale(): RotateControlOptions["pointerScale"];
    set pointerScale(val: RotateControlOptions["pointerScale"]);
    get keyboardScale(): RotateControlOptions["keyboardScale"];
    set keyboardScale(val: RotateControlOptions["keyboardScale"]);
    get duration(): RotateControlOptions["duration"];
    set duration(val: RotateControlOptions["duration"]);
    get easing(): RotateControlOptions["easing"];
    set easing(val: RotateControlOptions["easing"]);
    get disablePitch(): RotateControlOptions["disablePitch"];
    set disablePitch(val: RotateControlOptions["disablePitch"]);
    get disableYaw(): RotateControlOptions["disableYaw"];
    set disableYaw(val: RotateControlOptions["disableYaw"]);
    get disableKeyboard(): RotateControlOptions["disableKeyboard"];
    set disableKeyboard(val: RotateControlOptions["disableKeyboard"]);
    constructor(controlEl: HTMLElement, enableBlocked: boolean, { duration, easing, pointerScale, keyboardScale, disablePitch, disableYaw, disableKeyboard }?: Partial<RotateControlOptions>);
    destroy(): void;
    update(delta: number): void;
    updateRange(camera: Camera, zoom: number): void;
    setZoomScale(val: number): void;
    resize(hfov: number, aspect: number, width: number, height: number): void;
    enable(): void;
    disable(): void;
    sync(camera: Camera): void;
    private _bindInputs;
    private _onInputStart;
    private _onChange;
    private _onInputEnd;
}
export default RotateControl;
