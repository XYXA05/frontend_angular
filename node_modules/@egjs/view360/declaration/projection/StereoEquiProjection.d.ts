import Projection, { ProjectionOptions } from "./Projection";
import UniformTexture2D from "../uniform/UniformTexture2D";
import WebGLContext from "../core/WebGLContext";
import Texture2D from "../texture/Texture2D";
import TriangleMesh from "../core/TriangleMesh";
import UniformVector4Array from "../uniform/UniformVector4Array";
import UniformFloat from "../uniform/UniformFloat";
export interface StereoEquiProjectionOptions extends ProjectionOptions {
    src: string | HTMLElement;
    mode: typeof StereoEquiProjection.MODE[keyof typeof StereoEquiProjection.MODE];
}
declare class StereoEquiProjection extends Projection {
    static MODE: {
        readonly LEFT_RIGHT: "left_right";
        readonly TOP_BOTTOM: "top_bottom";
    };
    private _mode;
    constructor(options: StereoEquiProjectionOptions);
    createMesh(ctx: WebGLContext, texture: Texture2D): TriangleMesh<{
        uTexture: UniformTexture2D;
        uEye: UniformFloat;
        uTexScaleOffset: UniformVector4Array;
    }>;
}
export default StereoEquiProjection;
