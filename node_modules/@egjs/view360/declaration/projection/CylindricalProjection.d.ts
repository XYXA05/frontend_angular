import Projection, { ProjectionOptions } from "./Projection";
import UniformTexture2D from "../uniform/UniformTexture2D";
import WebGLContext from "../core/WebGLContext";
import Texture2D from "../texture/Texture2D";
import Camera from "../core/Camera";
import TriangleMesh from "../core/TriangleMesh";
export interface CylindricalProjectionOptions extends ProjectionOptions {
    src: string | HTMLElement;
    partial?: boolean;
}
declare class CylindricalProjection extends Projection {
    private _partial;
    private _aspect;
    private _halfHeight;
    private _mesh;
    constructor(options: CylindricalProjectionOptions);
    createMesh(ctx: WebGLContext, texture: Texture2D): TriangleMesh<{
        uTexture: import("../uniform/UniformCanvasCube").default | UniformTexture2D | import("../uniform/UniformTextureCube").default;
    }>;
    updateCamera(camera: Camera): void;
}
export default CylindricalProjection;
