import Camera from "../core/Camera";
import PanoControl from "../control/PanoControl";
import TriangleMesh from "../core/TriangleMesh";
import Texture from "../texture/Texture";
import WebGLContext from "../core/WebGLContext";
import { VideoConfig } from "../type/external";
export interface ProjectionOptions {
    src: string | HTMLElement | Array<string | HTMLElement>;
    video?: boolean | Partial<VideoConfig>;
}
declare abstract class Projection {
    readonly src: ProjectionOptions["src"];
    readonly video: ProjectionOptions["video"];
    constructor({ src, video }: ProjectionOptions);
    abstract createMesh(ctx: WebGLContext, texture: Texture): TriangleMesh;
    updateCamera(camera: Camera): void;
    updateControl(control: PanoControl): void;
}
export default Projection;
