import Object3D from "./Object3D";
import ShaderProgram from "./ShaderProgram";
import VertexArrayObject from "./VertexArrayObject";
import WebGLContext from "./WebGLContext";
import UniformCanvasCube from "../uniform/UniformCanvasCube";
import UniformTexture2D from "../uniform/UniformTexture2D";
import UniformTextureCube from "../uniform/UniformTextureCube";
type CommonProjectionUniforms = {
    uTexture: UniformTexture2D | UniformTextureCube | UniformCanvasCube;
};
declare class TriangleMesh<T extends CommonProjectionUniforms = CommonProjectionUniforms> extends Object3D {
    readonly vao: VertexArrayObject;
    readonly program: ShaderProgram<T>;
    constructor(vao: VertexArrayObject, program: ShaderProgram<T>);
    destroy(ctx: WebGLContext): void;
    getTexture(): import("../texture/Texture2D").default | import("../texture/TextureCube").default;
}
export default TriangleMesh;
