/// <reference types="webxr" />
import { mat4 } from "gl-matrix";
import Component from "@egjs/component";
import WebGLContext from "./WebGLContext";
import { EVENTS } from "../const/external";
interface XRSessionOptions extends XRSessionInit {
    [key: string]: any;
}
declare class XRManager extends Component<{
    [EVENTS.VR_START]: {
        session: XRSession;
    };
    [EVENTS.VR_END]: void;
}> {
    private _ctx;
    private _xrSession;
    private _xrRefSpace;
    private _options;
    constructor(ctx: WebGLContext, options?: XRSessionOptions);
    destroy: () => void;
    isAvailable(): Promise<boolean>;
    enter(): Promise<void>;
    exit(): void;
    canRender(frame: XRFrame): boolean;
    getEyeParams(frame: XRFrame): Array<{
        viewport: XRViewport;
        vMatrix: mat4;
        pMatrix: mat4;
    }> | null;
    private _setSession;
    private _onSessionEnd;
}
export default XRManager;
