{"version":3,"file":"egjs-ngx-view360.mjs","sources":["../../../projects/ngx-view360/src/lib/View360Interface.ts","../../../projects/ngx-view360/src/lib/const.ts","../../../projects/ngx-view360/src/lib/ngx-view360.component.ts","../../../projects/ngx-view360/src/lib/ngx-view360.module.ts","../../../projects/ngx-view360/src/public-api.ts","../../../projects/ngx-view360/src/egjs-ngx-view360.ts"],"sourcesContent":["import View360, { withMethods } from \"@egjs/view360\";\n\nexport default class View360Interface {\n  @withMethods protected _view360!: View360 | null;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport default interface View360Interface extends View360 { }\n","import View360 from \"@egjs/view360\";\n\nexport const optionNames = Object.getOwnPropertyNames(View360.prototype)\n  .filter(name => {\n    const descriptor = Object.getOwnPropertyDescriptor(View360.prototype, name);\n\n    if (name.startsWith(\"_\")) return false;\n    if (name === \"constructor\") return false;\n    if (descriptor?.value) return false;\n\n    return true;\n  });\n\nexport const setterNames = optionNames\n  .filter(name => {\n    const descriptor = Object.getOwnPropertyDescriptor(View360.prototype, name);\n\n    return !!descriptor!.set;\n  });\n","/**\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport {\n  Component,\n  Input,\n  AfterViewInit,\n  ElementRef,\n  OnChanges,\n  Output,\n  EventEmitter,\n  OnDestroy,\n  NgZone,\n  Inject,\n  PLATFORM_ID,\n  SimpleChanges,\n  ViewChild,\n} from \"@angular/core\";\nimport { isPlatformServer } from \"@angular/common\";\nimport { fromEvent, Subject } from \"rxjs\";\nimport { takeUntil } from \"rxjs/operators\";\nimport VanillaView360, {\n  EVENTS,\n  DEFAULT_CLASS,\n  ReadyEvent,\n  LoadStartEvent,\n  LoadEvent,\n  ProjectionChangeEvent,\n  ResizeEvent,\n  BeforeRenderEvent,\n  RenderEvent,\n  InputStartEvent,\n  InputEndEvent,\n  ViewChangeEvent,\n  StaticClickEvent,\n  VRStartEvent,\n  VREndEvent,\n  View360Options\n} from \"@egjs/view360\";\nimport View360Interface from \"./View360Interface\";\nimport { setterNames } from \"./const\";\n\n@Component({\n  selector: \"ngx-view360, [NgxView360]\",\n  template: `\n    <canvas #canvas [ngClass]=\"_canvasElClass\"></canvas>\n    <ng-content></ng-content>\n  `,\n  host: {\n    style: \"display: block;\",\n    class: \"view360-container\"\n  }\n})\nexport class NgxView360Component extends View360Interface\n  implements AfterViewInit, OnDestroy, OnChanges {\n  @Input() public options!: Partial<View360Options>;\n  @Input() public canvasClass!: string;\n\n  @Output(\"ready\") public readyEmitter = new EventEmitter<ReadyEvent>();\n  @Output(\"loadStart\") public loadStartEmitter = new EventEmitter<LoadStartEvent>();\n  @Output(\"load\") public loadEmitter = new EventEmitter<LoadEvent>();\n  @Output(\"projectionChange\") public projectionChangeEmitter = new EventEmitter<ProjectionChangeEvent>();\n  @Output(\"resize\") public resizeEmitter = new EventEmitter<ResizeEvent>();\n  @Output(\"beforeRender\") public beforeRenderEmitter = new EventEmitter<BeforeRenderEvent>();\n  @Output(\"render\") public renderEmitter = new EventEmitter<RenderEvent>();\n  @Output(\"inputStart\") public inputStartEmitter = new EventEmitter<InputStartEvent>();\n  @Output(\"inputEnd\") public inputEndEmitter = new EventEmitter<InputEndEvent>();\n  @Output(\"viewChange\") public viewChangeEmitter = new EventEmitter<ViewChangeEvent>();\n  @Output(\"staticClick\") public staticClickEmitter = new EventEmitter<StaticClickEvent>();\n  @Output(\"vrStart\") public vrStartEmitter = new EventEmitter<VRStartEvent>();\n  @Output(\"vrEnd\") public vrEndEmitter = new EventEmitter<VREndEvent>();\n\n  @ViewChild(\"canvas\") public canvas!: ElementRef<HTMLCanvasElement>;\n\n  public get element() { return this._elRef.nativeElement; }\n  public get _canvasElClass() { return `${DEFAULT_CLASS.CANVAS} ${this.canvasClass ?? \"\"}`.trim(); }\n  private _destroy$ = new Subject<void>();\n\n  public constructor(\n    private _elRef: ElementRef<HTMLElement>,\n    @Inject(PLATFORM_ID) private _platformId: any,\n    private _ngZone: NgZone\n  ) {\n    super();\n    this._view360 = null;\n  }\n\n  public ngAfterViewInit() {\n    if (isPlatformServer(this._platformId)) return;\n\n    const container = this._elRef.nativeElement;\n    const options = this.options ?? {};\n\n    this._view360 = this._ngZone.runOutsideAngular(\n      () => new VanillaView360(container, options)\n    );\n\n    this._bindEvents();\n  }\n\n  public ngOnDestroy() {\n    this._destroy$.next();\n    this._view360?.destroy();\n  }\n\n  public ngOnChanges(changes: SimpleChanges) {\n    const view360 = this._view360;\n    if (!view360) return;\n\n    const changed = changes.options;\n    if (!changed) return;\n\n    const prev = changed.previousValue;\n    const current = changed.currentValue;\n\n    setterNames.forEach(name => {\n      const oldProp = prev[name];\n      const newProp = current[name];\n\n      if (newProp !== oldProp) {\n        (view360 as any)[name] = newProp;\n      }\n    });\n  }\n\n  private _bindEvents() {\n    const view360 = this._view360!;\n\n    Object.keys(EVENTS).forEach(evtKey => {\n      const evtName = (EVENTS as any)[evtKey];\n\n      fromEvent(view360, evtName)\n        .pipe(takeUntil(this._destroy$))\n        .subscribe(event => {\n          const emitter = (this as any)[`${evtName}Emitter`];\n          if (emitter && emitter.observers.length > 0) {\n            this._ngZone.run(() => emitter.emit(event));\n          }\n        });\n    });\n  }\n}\n","/**\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { NgxView360Component } from \"./ngx-view360.component\";\n\n@NgModule({\n  declarations: [NgxView360Component],\n  imports: [\n    CommonModule\n  ],\n  exports: [NgxView360Component]\n})\nexport class NgxView360Module { }\n","/*\n * Public API Surface of ngx-view360\n */\nexport * from \"@egjs/view360\";\nexport * from \"./lib/ngx-view360.component\";\nexport * from \"./lib/ngx-view360.module\";\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["View360","VanillaView360"],"mappings":"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"}