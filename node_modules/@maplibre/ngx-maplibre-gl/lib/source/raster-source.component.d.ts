import { OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';
import { RasterSourceSpecification } from 'maplibre-gl';
import { MapService } from '../map/map.service';
import * as i0 from "@angular/core";
/**
 * `mgl-raster-source` - a raster source component
 * @see [raster](https://maplibre.org/maplibre-style-spec/sources/#raster)
 *
 * @category Source Components
 */
export declare class RasterSourceComponent implements OnInit, OnDestroy, OnChanges, RasterSourceSpecification {
    private mapService;
    /** Init input */
    id: string;
    /** Dynamic input */
    url?: RasterSourceSpecification['url'];
    /** Dynamic input */
    tiles?: RasterSourceSpecification['tiles'];
    /** Dynamic input */
    bounds?: RasterSourceSpecification['bounds'];
    /** Dynamic input */
    minzoom?: RasterSourceSpecification['minzoom'];
    /** Dynamic input */
    maxzoom?: RasterSourceSpecification['maxzoom'];
    /** Dynamic input */
    tileSize?: RasterSourceSpecification['tileSize'];
    /** Dynamic input */
    scheme?: RasterSourceSpecification['scheme'];
    /** Dynamic input */
    attribution?: RasterSourceSpecification['attribution'];
    /** @hidden */
    type: RasterSourceSpecification['type'];
    private sourceAdded;
    private sub;
    constructor(mapService: MapService);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    private init;
    static ɵfac: i0.ɵɵFactoryDeclaration<RasterSourceComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<RasterSourceComponent, "mgl-raster-source", never, { "id": { "alias": "id"; "required": false; }; "url": { "alias": "url"; "required": false; }; "tiles": { "alias": "tiles"; "required": false; }; "bounds": { "alias": "bounds"; "required": false; }; "minzoom": { "alias": "minzoom"; "required": false; }; "maxzoom": { "alias": "maxzoom"; "required": false; }; "tileSize": { "alias": "tileSize"; "required": false; }; "scheme": { "alias": "scheme"; "required": false; }; "attribution": { "alias": "attribution"; "required": false; }; }, {}, never, never, true, never>;
}
