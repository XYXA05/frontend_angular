{
  "version": 3,
  "sources": ["../../../../../node_modules/@egjs/component/dist/component.esm.js", "../../../../../node_modules/gl-matrix/esm/common.js", "../../../../../node_modules/gl-matrix/esm/mat3.js", "../../../../../node_modules/gl-matrix/esm/mat4.js", "../../../../../node_modules/gl-matrix/esm/quat.js", "../../../../../node_modules/gl-matrix/esm/vec3.js", "../../../../../node_modules/gl-matrix/esm/vec4.js", "../../../../../node_modules/gl-matrix/esm/vec2.js", "../../../../../node_modules/@cfcs/core/dist/cfcs.esm.js", "../../../../../node_modules/@egjs/imready/dist/imready.esm.js", "../../../../../node_modules/@egjs/view360/dist/view360.esm.js", "../../../../../node_modules/@egjs/ngx-view360/fesm2020/egjs-ngx-view360.mjs"],
  "sourcesContent": ["/*\nCopyright (c) NAVER Corp.\nname: @egjs/component\nlicense: MIT\nauthor: NAVER Corp.\nrepository: https://github.com/naver/egjs-component\nversion: 3.0.5\n*/\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\nfunction __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n    m = s && o[s],\n    i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\nfunction __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n}\nfunction __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/*\n * Copyright (c) 2015 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nvar isUndefined = function (value) {\n  return typeof value === \"undefined\";\n};\n\n// This class name is not matched to file name intentionally\n/**\n * Event class to provide additional properties\n * @ko Component에서 추가적인 프로퍼티를 제공하는 이벤트 클래스\n */\nvar ComponentEvent = /*#__PURE__*/function () {\n  /**\n   * Create a new instance of ComponentEvent.\n   * @ko ComponentEvent의 새로운 인스턴스를 생성한다.\n   * @param eventType The name of the event.<ko>이벤트 이름.</ko>\n   * @param props An object that contains additional event properties.<ko>추가적인 이벤트 프로퍼티 오브젝트.</ko>\n   */\n  function ComponentEvent(eventType, props) {\n    var e_1, _a;\n    this._canceled = false;\n    if (props) {\n      try {\n        for (var _b = __values(Object.keys(props)), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var key = _c.value;\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n          this[key] = props[key];\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    }\n    this.eventType = eventType;\n  }\n  /**\n   * Stop the event. {@link ComponentEvent#isCanceled} will return `true` after.\n   * @ko 이벤트를 중단한다. 이후 {@link ComponentEvent#isCanceled}가 `true`를 반환한다.\n   */\n  var __proto = ComponentEvent.prototype;\n  __proto.stop = function () {\n    this._canceled = true;\n  };\n  /**\n   * Returns a boolean value that indicates whether {@link ComponentEvent#stop} is called before.\n   * @ko {@link ComponentEvent#stop}이 호출되었는지 여부를 반환한다.\n   * @return {boolean} A boolean value that indicates whether {@link ComponentEvent#stop} is called before.<ko>이전에 {@link ComponentEvent#stop}이 불려졌는지 여부를 반환한다.</ko>\n   */\n  __proto.isCanceled = function () {\n    return this._canceled;\n  };\n  return ComponentEvent;\n}();\n\n/**\n * A class used to manage events in a component\n * @ko 컴포넌트의 이벤트을 관리할 수 있게 하는 클래스\n */\nvar Component = /*#__PURE__*/function () {\n  /**\n   * @support {\"ie\": \"7+\", \"ch\" : \"latest\", \"ff\" : \"latest\",  \"sf\" : \"latest\", \"edge\" : \"latest\", \"ios\" : \"7+\", \"an\" : \"2.1+ (except 3.x)\"}\n   */\n  function Component() {\n    this._eventHandler = {};\n  }\n  /**\n   * Trigger a custom event.\n   * @ko 커스텀 이벤트를 발생시킨다\n   * @param {string | ComponentEvent} event The name of the custom event to be triggered or an instance of the ComponentEvent<ko>발생할 커스텀 이벤트의 이름 또는 ComponentEvent의 인스턴스</ko>\n   * @param {any[]} params Event data to be sent when triggering a custom event <ko>커스텀 이벤트가 발생할 때 전달할 데이터</ko>\n   * @return An instance of the component itself<ko>컴포넌트 자신의 인스턴스</ko>\n   * @example\n   * ```ts\n   * import Component, { ComponentEvent } from \"@egjs/component\";\n   *\n   * class Some extends Component<{\n   *   beforeHi: ComponentEvent<{ foo: number; bar: string }>;\n   *   hi: { foo: { a: number; b: boolean } };\n   *   someEvent: (foo: number, bar: string) => void;\n   *   someOtherEvent: void; // When there's no event argument\n   * }> {\n   *   some(){\n   *     if(this.trigger(\"beforeHi\")){ // When event call to stop return false.\n   *       this.trigger(\"hi\");// fire hi event.\n   *     }\n   *   }\n   * }\n   *\n   * const some = new Some();\n   * some.on(\"beforeHi\", e => {\n   *   if(condition){\n   *     e.stop(); // When event call to stop, `hi` event not call.\n   *   }\n   *   // `currentTarget` is component instance.\n   *   console.log(some === e.currentTarget); // true\n   *\n   *   typeof e.foo; // number\n   *   typeof e.bar; // string\n   * });\n   * some.on(\"hi\", e => {\n   *   typeof e.foo.b; // boolean\n   * });\n   * // If you want to more know event design. You can see article.\n   * // https://github.com/naver/egjs-component/wiki/How-to-make-Component-event-design%3F\n   * ```\n   */\n  var __proto = Component.prototype;\n  __proto.trigger = function (event) {\n    var params = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n      params[_i - 1] = arguments[_i];\n    }\n    var eventName = event instanceof ComponentEvent ? event.eventType : event;\n    var handlers = __spread(this._eventHandler[eventName] || []);\n    if (handlers.length <= 0) {\n      return this;\n    }\n    if (event instanceof ComponentEvent) {\n      event.currentTarget = this;\n      handlers.forEach(function (handler) {\n        handler(event);\n      });\n    } else {\n      handlers.forEach(function (handler) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n        handler.apply(void 0, __spread(params));\n      });\n    }\n    return this;\n  };\n  /**\n   * Executed event just one time.\n   * @ko 이벤트가 한번만 실행된다.\n   * @param {string} eventName The name of the event to be attached or an event name - event handler mapped object.<ko>등록할 이벤트의 이름 또는 이벤트 이름-핸들러 오브젝트</ko>\n   * @param {function} handlerToAttach The handler function of the event to be attached <ko>등록할 이벤트의 핸들러 함수</ko>\n   * @return An instance of the component itself<ko>컴포넌트 자신의 인스턴스</ko>\n   * @example\n   * ```ts\n   * import Component, { ComponentEvent } from \"@egjs/component\";\n   *\n   * class Some extends Component<{\n   *   hi: ComponentEvent;\n   * }> {\n   *   hi() {\n   *     alert(\"hi\");\n   *   }\n   *   thing() {\n   *     this.once(\"hi\", this.hi);\n   *   }\n   * }\n   *\n   * var some = new Some();\n   * some.thing();\n   * some.trigger(new ComponentEvent(\"hi\"));\n   * // fire alert(\"hi\");\n   * some.trigger(new ComponentEvent(\"hi\"));\n   * // Nothing happens\n   * ```\n   */\n  __proto.once = function (eventName, handlerToAttach) {\n    var _this = this;\n    if (typeof eventName === \"object\" && isUndefined(handlerToAttach)) {\n      var eventHash = eventName;\n      for (var key in eventHash) {\n        this.once(key, eventHash[key]);\n      }\n      return this;\n    } else if (typeof eventName === \"string\" && typeof handlerToAttach === \"function\") {\n      var listener_1 = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n        handlerToAttach.apply(void 0, __spread(args));\n        _this.off(eventName, listener_1);\n      };\n      this.on(eventName, listener_1);\n    }\n    return this;\n  };\n  /**\n   * Checks whether an event has been attached to a component.\n   * @ko 컴포넌트에 이벤트가 등록됐는지 확인한다.\n   * @param {string} eventName The name of the event to be attached <ko>등록 여부를 확인할 이벤트의 이름</ko>\n   * @return {boolean} Indicates whether the event is attached. <ko>이벤트 등록 여부</ko>\n   * @example\n   * ```ts\n   * import Component from \"@egjs/component\";\n   *\n   * class Some extends Component<{\n   *   hi: void;\n   * }> {\n   *   some() {\n   *     this.hasOn(\"hi\");// check hi event.\n   *   }\n   * }\n   * ```\n   */\n  __proto.hasOn = function (eventName) {\n    return !!this._eventHandler[eventName];\n  };\n  /**\n   * Attaches an event to a component.\n   * @ko 컴포넌트에 이벤트를 등록한다.\n   * @param {string} eventName The name of the event to be attached or an event name - event handler mapped object.<ko>등록할 이벤트의 이름 또는 이벤트 이름-핸들러 오브젝트</ko>\n   * @param {function} handlerToAttach The handler function of the event to be attached <ko>등록할 이벤트의 핸들러 함수</ko>\n   * @return An instance of a component itself<ko>컴포넌트 자신의 인스턴스</ko>\n   * @example\n   * ```ts\n   * import Component, { ComponentEvent } from \"@egjs/component\";\n   *\n   * class Some extends Component<{\n   *   hi: void;\n   * }> {\n   *   hi() {\n   *     console.log(\"hi\");\n   *   }\n   *   some() {\n   *     this.on(\"hi\",this.hi); //attach event\n   *   }\n   * }\n   * ```\n   */\n  __proto.on = function (eventName, handlerToAttach) {\n    if (typeof eventName === \"object\" && isUndefined(handlerToAttach)) {\n      var eventHash = eventName;\n      for (var name in eventHash) {\n        this.on(name, eventHash[name]);\n      }\n      return this;\n    } else if (typeof eventName === \"string\" && typeof handlerToAttach === \"function\") {\n      var handlerList = this._eventHandler[eventName];\n      if (isUndefined(handlerList)) {\n        this._eventHandler[eventName] = [];\n        handlerList = this._eventHandler[eventName];\n      }\n      handlerList.push(handlerToAttach);\n    }\n    return this;\n  };\n  /**\n   * Detaches an event from the component.<br/>If the `eventName` is not given this will detach all event handlers attached.<br/>If the `handlerToDetach` is not given, this will detach all event handlers for `eventName`.\n   * @ko 컴포넌트에 등록된 이벤트를 해제한다.<br/>`eventName`이 주어지지 않았을 경우 모든 이벤트 핸들러를 제거한다.<br/>`handlerToAttach`가 주어지지 않았을 경우 `eventName`에 해당하는 모든 이벤트 핸들러를 제거한다.\n   * @param {string?} eventName The name of the event to be detached <ko>해제할 이벤트의 이름</ko>\n   * @param {function?} handlerToDetach The handler function of the event to be detached <ko>해제할 이벤트의 핸들러 함수</ko>\n   * @return An instance of a component itself <ko>컴포넌트 자신의 인스턴스</ko>\n   * @example\n   * ```ts\n   * import Component, { ComponentEvent } from \"@egjs/component\";\n   *\n   * class Some extends Component<{\n   *   hi: void;\n   * }> {\n   *   hi() {\n   *     console.log(\"hi\");\n   *   }\n   *   some() {\n   *     this.off(\"hi\",this.hi); //detach event\n   *   }\n   * }\n   * ```\n   */\n  __proto.off = function (eventName, handlerToDetach) {\n    // Detach all event handlers.\n    if (isUndefined(eventName)) {\n      this._eventHandler = {};\n      return this;\n    }\n    // Detach all handlers for eventname or detach event handlers by object.\n    if (isUndefined(handlerToDetach)) {\n      if (typeof eventName === \"string\") {\n        delete this._eventHandler[eventName];\n        return this;\n      } else {\n        var eventHash = eventName;\n        for (var name in eventHash) {\n          this.off(name, eventHash[name]);\n        }\n        return this;\n      }\n    }\n    // Detach single event handler\n    var handlerList = this._eventHandler[eventName];\n    if (handlerList) {\n      var length = handlerList.length;\n      for (var i = 0; i < length; ++i) {\n        if (handlerList[i] === handlerToDetach) {\n          handlerList.splice(i, 1);\n          if (length <= 1) {\n            delete this._eventHandler[eventName];\n          }\n          break;\n        }\n      }\n    }\n    return this;\n  };\n  /**\n   * Version info string\n   * @ko 버전정보 문자열\n   * @name VERSION\n   * @static\n   * @example\n   * Component.VERSION;  // ex) 3.0.0\n   * @memberof Component\n   */\n  Component.VERSION = \"3.0.5\";\n  return Component;\n}();\n\n/*\n * Copyright (c) 2015 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention, @typescript-eslint/no-unsafe-assignment\nvar ComponentEvent$1 = ComponentEvent;\n\n/*\n * Copyright (c) 2015 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\nexport default Component;\nexport { ComponentEvent$1 as ComponentEvent };\n\n", "/**\n * Common utilities\n * @module glMatrix\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};", "import * as glMatrix from \"./common.js\";\n/**\n * 3x3 Matrix\n * @module mat3\n */\n\n/**\n * Creates a new identity mat3\n *\n * @returns {mat3} a new 3x3 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(9);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {ReadonlyMat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\n\nexport function fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n/**\n * Creates a new mat3 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat3} a matrix to clone\n * @returns {mat3} a new 3x3 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Create a new mat3 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} A new mat3\n */\n\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} out\n */\n\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n/**\n * Calculates the determinant of a mat3\n *\n * @param {ReadonlyMat3} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to translate\n * @param {ReadonlyVec2} v vector to translate by\n * @returns {mat3} out\n */\n\nexport function translate(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\n\nexport function rotate(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to rotate\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.translate(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Translation vector\n * @returns {mat3} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.rotate(dest, dest, rad);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.scale(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Scaling vector\n * @returns {mat3} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Copies the values from a mat2d into a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to copy\n * @returns {mat3} out\n **/\n\nexport function fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n/**\n * Calculates a 3x3 matrix from the given quaternion\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat3} out\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n/**\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyMat4} a Mat4 to derive the normal matrix from\n *\n * @returns {mat3} out\n */\n\nexport function normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n/**\n * Generates a 2D projection matrix with the given bounds\n *\n * @param {mat3} out mat3 frustum matrix will be written into\n * @param {number} width Width of your gl context\n * @param {number} height Height of gl context\n * @returns {mat3} out\n */\n\nexport function projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat3\n *\n * @param {ReadonlyMat3} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat3\n *\n * @param {ReadonlyMat3} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);\n}\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n/**\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat3} out the receiving vector\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat3} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n/**\n * Alias for {@link mat3.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat3.subtract}\n * @function\n */\n\nexport var sub = subtract;", "import * as glMatrix from \"./common.js\";\n/**\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\n * Calculates the determinant of a mat4\n *\n * @param {ReadonlyMat4} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {mat4} out\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 from a dual quat.\n *\n * @param {mat4} out Matrix\n * @param {ReadonlyQuat2} a Dual Quaternion\n * @returns {mat4} mat4 receiving operation result\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveNO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\n * Alias for {@link mat4.perspectiveNO}\n * @function\n */\n\nexport var perspective = perspectiveNO;\n/**\n * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveZO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = far * nf;\n    out[14] = far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -near;\n  }\n\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoNO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Alias for {@link mat4.orthoNO}\n * @function\n */\n\nexport var ortho = orthoNO;\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoZO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = near * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat4\n *\n * @param {ReadonlyMat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\n\nexport var sub = subtract;", "import * as glMatrix from \"./common.js\";\nimport * as mat3 from \"./mat3.js\";\nimport * as vec3 from \"./vec3.js\";\nimport * as vec4 from \"./vec4.js\";\n/**\n * Quaternion\n * @module quat\n */\n\n/**\n * Creates a new identity quat\n *\n * @returns {quat} a new quaternion\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[3] = 1;\n  return out;\n}\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\n\nexport function identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyVec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\n\nexport function setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n/**\n * Gets the rotation axis and angle for a given\n *  quaternion. If a quaternion is created with\n *  setAxisAngle, this method will return the same\n *  values as providied in the original parameter list\n *  OR functionally equivalent values.\n * Example: The quaternion formed by axis [0, 0, 1] and\n *  angle -90 is the same as the quaternion formed by\n *  [0, 0, 1] and 270. This method favors the latter.\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\n * @param  {ReadonlyQuat} q     Quaternion to be decomposed\n * @return {Number}     Angle, in radians, of the rotation\n */\n\nexport function getAxisAngle(out_axis, q) {\n  var rad = Math.acos(q[3]) * 2.0;\n  var s = Math.sin(rad / 2.0);\n\n  if (s > glMatrix.EPSILON) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n\n  return rad;\n}\n/**\n * Gets the angular distance between two unit quaternions\n *\n * @param  {ReadonlyQuat} a     Origin unit quaternion\n * @param  {ReadonlyQuat} b     Destination unit quaternion\n * @return {Number}     Angle, in radians, between the two quaternions\n */\n\nexport function getAngle(a, b) {\n  var dotproduct = dot(a, b);\n  return Math.acos(2 * dotproduct * dotproduct - 1);\n}\n/**\n * Multiplies two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {quat} out\n */\n\nexport function multiply(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\nexport function rotateX(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\nexport function rotateY(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var by = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {ReadonlyQuat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\n\nexport function rotateZ(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bz = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n/**\n * Calculates the W component of a quat from the X, Y, and Z components.\n * Assumes that quaternion is 1 unit in length.\n * Any existing W component will be ignored.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate W component of\n * @returns {quat} out\n */\n\nexport function calculateW(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n/**\n * Calculate the exponential of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @returns {quat} out\n */\n\nexport function exp(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var et = Math.exp(w);\n  var s = r > 0 ? et * Math.sin(r) / r : 0;\n  out[0] = x * s;\n  out[1] = y * s;\n  out[2] = z * s;\n  out[3] = et * Math.cos(r);\n  return out;\n}\n/**\n * Calculate the natural logarithm of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @returns {quat} out\n */\n\nexport function ln(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var t = r > 0 ? Math.atan2(r, w) / r : 0;\n  out[0] = x * t;\n  out[1] = y * t;\n  out[2] = z * t;\n  out[3] = 0.5 * Math.log(x * x + y * y + z * z + w * w);\n  return out;\n}\n/**\n * Calculate the scalar power of a unit quaternion.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate the exponential of\n * @param {Number} b amount to scale the quaternion by\n * @returns {quat} out\n */\n\nexport function pow(out, a, b) {\n  ln(out, a);\n  scale(out, out, b);\n  exp(out, out);\n  return out;\n}\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\n\nexport function slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  var omega, cosom, sinom, scale0, scale1; // calc cosine\n\n  cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)\n\n  if (cosom < 0.0) {\n    cosom = -cosom;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  } // calculate coefficients\n\n\n  if (1.0 - cosom > glMatrix.EPSILON) {\n    // standard case (slerp)\n    omega = Math.acos(cosom);\n    sinom = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  } // calculate final values\n\n\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n  return out;\n}\n/**\n * Generates a random unit quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\n\nexport function random(out) {\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\n  // TODO: Calling random 3 times is probably not the fastest solution\n  var u1 = glMatrix.RANDOM();\n  var u2 = glMatrix.RANDOM();\n  var u3 = glMatrix.RANDOM();\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\n  var sqrtU1 = Math.sqrt(u1);\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n  return out;\n}\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate inverse of\n * @returns {quat} out\n */\n\nexport function invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  var invDot = dot ? 1.0 / dot : 0; // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot;\n  out[1] = -a1 * invDot;\n  out[2] = -a2 * invDot;\n  out[3] = a3 * invDot;\n  return out;\n}\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quat to calculate conjugate of\n * @returns {quat} out\n */\n\nexport function conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyMat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\n\nexport function fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  var fTrace = m[0] + m[4] + m[8];\n  var fRoot;\n\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot; // 1/(4w)\n\n    out[0] = (m[5] - m[7]) * fRoot;\n    out[1] = (m[6] - m[2]) * fRoot;\n    out[2] = (m[1] - m[3]) * fRoot;\n  } else {\n    // |w| <= 1/2\n    var i = 0;\n    if (m[4] > m[0]) i = 1;\n    if (m[8] > m[i * 3 + i]) i = 2;\n    var j = (i + 1) % 3;\n    var k = (i + 2) % 3;\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n  }\n\n  return out;\n}\n/**\n * Creates a quaternion from the given euler angle x, y, z.\n *\n * @param {quat} out the receiving quaternion\n * @param {x} Angle to rotate around X axis in degrees.\n * @param {y} Angle to rotate around Y axis in degrees.\n * @param {z} Angle to rotate around Z axis in degrees.\n * @returns {quat} out\n * @function\n */\n\nexport function fromEuler(out, x, y, z) {\n  var halfToRad = 0.5 * Math.PI / 180.0;\n  x *= halfToRad;\n  y *= halfToRad;\n  z *= halfToRad;\n  var sx = Math.sin(x);\n  var cx = Math.cos(x);\n  var sy = Math.sin(y);\n  var cy = Math.cos(y);\n  var sz = Math.sin(z);\n  var cz = Math.cos(z);\n  out[0] = sx * cy * cz - cx * sy * sz;\n  out[1] = cx * sy * cz + sx * cy * sz;\n  out[2] = cx * cy * sz - sx * sy * cz;\n  out[3] = cx * cy * cz + sx * sy * sz;\n  return out;\n}\n/**\n * Returns a string representation of a quatenion\n *\n * @param {ReadonlyQuat} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"quat(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\n * Creates a new quat initialized with values from an existing quaternion\n *\n * @param {ReadonlyQuat} a quaternion to clone\n * @returns {quat} a new quaternion\n * @function\n */\n\nexport var clone = vec4.clone;\n/**\n * Creates a new quat initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} a new quaternion\n * @function\n */\n\nexport var fromValues = vec4.fromValues;\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the source quaternion\n * @returns {quat} out\n * @function\n */\n\nexport var copy = vec4.copy;\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\n\nexport var set = vec4.set;\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {quat} out\n * @function\n */\n\nexport var add = vec4.add;\n/**\n * Alias for {@link quat.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {ReadonlyQuat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\n\nexport var scale = vec4.scale;\n/**\n * Calculates the dot product of two quat's\n *\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\n\nexport var dot = vec4.dot;\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n * @function\n */\n\nexport var lerp = vec4.lerp;\n/**\n * Calculates the length of a quat\n *\n * @param {ReadonlyQuat} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport var length = vec4.length;\n/**\n * Alias for {@link quat.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Calculates the squared length of a quat\n *\n * @param {ReadonlyQuat} a vector to calculate squared length of\n * @returns {Number} squared length of a\n * @function\n */\n\nexport var squaredLength = vec4.squaredLength;\n/**\n * Alias for {@link quat.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\n\nexport var normalize = vec4.normalize;\n/**\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyQuat} a The first quaternion.\n * @param {ReadonlyQuat} b The second quaternion.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport var exactEquals = vec4.exactEquals;\n/**\n * Returns whether or not the quaternions have approximately the same elements in the same position.\n *\n * @param {ReadonlyQuat} a The first vector.\n * @param {ReadonlyQuat} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport var equals = vec4.equals;\n/**\n * Sets a quaternion to represent the shortest rotation from one\n * vector to another.\n *\n * Both vectors are assumed to be unit length.\n *\n * @param {quat} out the receiving quaternion.\n * @param {ReadonlyVec3} a the initial vector\n * @param {ReadonlyVec3} b the destination vector\n * @returns {quat} out\n */\n\nexport var rotationTo = function () {\n  var tmpvec3 = vec3.create();\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\n  return function (out, a, b) {\n    var dot = vec3.dot(a, b);\n\n    if (dot < -0.999999) {\n      vec3.cross(tmpvec3, xUnitVec3, a);\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\n      vec3.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      vec3.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n}();\n/**\n * Performs a spherical linear interpolation with two control points\n *\n * @param {quat} out the receiving quaternion\n * @param {ReadonlyQuat} a the first operand\n * @param {ReadonlyQuat} b the second operand\n * @param {ReadonlyQuat} c the third operand\n * @param {ReadonlyQuat} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {quat} out\n */\n\nexport var sqlerp = function () {\n  var temp1 = create();\n  var temp2 = create();\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n    return out;\n  };\n}();\n/**\n * Sets the specified quaternion with values corresponding to the given\n * axes. Each axis is a vec3 and is expected to be unit length and\n * perpendicular to all other specified axes.\n *\n * @param {ReadonlyVec3} view  the vector representing the viewing direction\n * @param {ReadonlyVec3} right the vector representing the local \"right\" direction\n * @param {ReadonlyVec3} up    the vector representing the local \"up\" direction\n * @returns {quat} out\n */\n\nexport var setAxes = function () {\n  var matr = mat3.create();\n  return function (out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n    return normalize(out, fromMat3(out, matr));\n  };\n}();", "import * as glMatrix from \"./common.js\";\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {ReadonlyVec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Calculates the length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the source vector\n * @returns {vec3} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to ceil\n * @returns {vec3} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to floor\n * @returns {vec3} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to round\n * @returns {vec3} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Calculates the squared length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to negate\n * @returns {vec3} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to invert\n * @returns {vec3} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to normalize\n * @returns {vec3} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\n * Transforms the vec3 with a quat\n * Can also be used for dual quaternions. (Multiply it with the real part)\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec3} out\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Get the angle between two 3D vectors\n * @param {ReadonlyVec3} a The first operand\n * @param {ReadonlyVec3} b The second operand\n * @returns {Number} The angle in radians\n */\n\nexport function angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec3 to zero\n *\n * @param {vec3} out the receiving vector\n * @returns {vec3} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec3.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();", "import * as glMatrix from \"./common.js\";\n/**\n * 4 Dimensional Vector\n * @module vec4\n */\n\n/**\n * Creates a new, empty vec4\n *\n * @returns {vec4} a new 4D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec4 initialized with values from an existing vector\n *\n * @param {ReadonlyVec4} a vector to clone\n * @returns {vec4} a new 4D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Creates a new vec4 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} a new 4D vector\n */\n\nexport function fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the source vector\n * @returns {vec4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\n\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\n * Multiplies two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\n * Divides two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\n * Math.ceil the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to ceil\n * @returns {vec4} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\n * Math.floor the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to floor\n * @returns {vec4} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\n * Returns the minimum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\n * Returns the maximum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\n * Math.round the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to round\n * @returns {vec4} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\n * Adds two vec4's after scaling the second operand by a scalar value\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec4} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\n * Calculates the squared euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\n * Calculates the length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\n * Calculates the squared length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\n * Negates the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to negate\n * @returns {vec4} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to invert\n * @returns {vec4} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to normalize\n * @returns {vec4} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\n * Returns the cross-product of three vectors in a 4-dimensional space\n *\n * @param {ReadonlyVec4} result the receiving vector\n * @param {ReadonlyVec4} U the first vector\n * @param {ReadonlyVec4} V the second vector\n * @param {ReadonlyVec4} W the third vector\n * @returns {vec4} result\n */\n\nexport function cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec4} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec4} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec4} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\n * Transforms the vec4 with a quat\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec4} out\n */\n\nexport function transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set the components of a vec4 to zero\n *\n * @param {vec4} out the receiving vector\n * @returns {vec4} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec4} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\n * Alias for {@link vec4.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec4.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec4.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec4.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec4.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec4.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec4s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();", "import * as glMatrix from \"./common.js\";\n/**\n * 2 Dimensional Vector\n * @module vec2\n */\n\n/**\n * Creates a new, empty vec2\n *\n * @returns {vec2} a new 2D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(2);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec2 initialized with values from an existing vector\n *\n * @param {ReadonlyVec2} a vector to clone\n * @returns {vec2} a new 2D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} a new 2D vector\n */\n\nexport function fromValues(x, y) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the source vector\n * @returns {vec2} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\n\nexport function set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n/**\n * Math.ceil the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to ceil\n * @returns {vec2} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n/**\n * Math.floor the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to floor\n * @returns {vec2} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n/**\n * Returns the minimum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n/**\n * Returns the maximum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n/**\n * Math.round the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to round\n * @returns {vec2} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n/**\n * Adds two vec2's after scaling the second operand by a scalar value\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec2} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return Math.hypot(x, y);\n}\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return x * x + y * y;\n}\n/**\n * Calculates the length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0],\n      y = a[1];\n  return Math.hypot(x, y);\n}\n/**\n * Calculates the squared length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0],\n      y = a[1];\n  return x * x + y * y;\n}\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to negate\n * @returns {vec2} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to invert\n * @returns {vec2} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to normalize\n * @returns {vec2} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0],\n      y = a[1];\n  var len = x * x + y * y;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec3} out\n */\n\nexport function cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec2} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0],\n      ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec2} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec2} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat2(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2d} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat2d(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat3} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n/**\n * Rotate a 2D vector\n * @param {vec2} out The receiving vec2\n * @param {ReadonlyVec2} a The vec2 point to rotate\n * @param {ReadonlyVec2} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec2} out\n */\n\nexport function rotate(out, a, b, rad) {\n  //Translate point to the origin\n  var p0 = a[0] - b[0],\n      p1 = a[1] - b[1],\n      sinC = Math.sin(rad),\n      cosC = Math.cos(rad); //perform rotation and translate to correct position\n\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n  return out;\n}\n/**\n * Get the angle between two 2D vectors\n * @param {ReadonlyVec2} a The first operand\n * @param {ReadonlyVec2} b The second operand\n * @returns {Number} The angle in radians\n */\n\nexport function angle(a, b) {\n  var x1 = a[0],\n      y1 = a[1],\n      x2 = b[0],\n      y2 = b[1],\n      // mag is the product of the magnitudes of a and b\n  mag = Math.sqrt(x1 * x1 + y1 * y1) * Math.sqrt(x2 * x2 + y2 * y2),\n      // mag &&.. short circuits if mag == 0\n  cosine = mag && (x1 * x2 + y1 * y2) / mag; // Math.min(Math.max(cosine, -1), 1) clamps the cosine between -1 and 1\n\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec2 to zero\n *\n * @param {vec2} out the receiving vector\n * @returns {vec2} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec2} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec2(\" + a[0] + \", \" + a[1] + \")\";\n}\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1];\n  var b0 = b[0],\n      b1 = b[1];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n/**\n * Alias for {@link vec2.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec2.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec2.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec2.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec2.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec2.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec2.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n}();", "/*\nCopyright (c) NAVER Crop.\nname: @cfcs/core\nlicense: MIT\nauthor: NAVER Crop.\nrepository: https://github.com/naver/cfcs\nversion: 0.0.24\n*/\nimport Component from '@egjs/component';\n\n/**\n * cfcs\n * Copyright (c) 2022-present NAVER Corp.\n * MIT license\n */\n\n/**\n * @hidden\n */\nfunction keys(obj) {\n  return Object.keys(obj);\n}\n/**\n * @hidden\n */\n\nfunction camelize(str) {\n  return str.replace(/[\\s-_]([a-z])/g, function (all, letter) {\n    return letter.toUpperCase();\n  });\n}\n/**\n * @hidden\n */\n\nfunction isString(val) {\n  return typeof val === \"string\";\n}\n/**\n * @hidden\n */\n\nfunction isObject(val) {\n  return typeof val === \"object\";\n}\n/**\n * @hidden\n */\n\nfunction isFunction(val) {\n  return typeof val === \"function\";\n}\n\n/**\n * @hidden\n */\n\nfunction findTarget(target) {\n  var el;\n\n  if (!target) {\n    return null;\n  }\n\n  if (isString(target)) {\n    el = document.querySelector(target);\n  } else if (target instanceof Element) {\n    el = target;\n  } else if (\"value\" in target || \"current\" in target) {\n    el = target.value || target.current;\n  }\n\n  return el;\n}\n/**\n * @description Sets the name of the class method to be exposed to the outside.\n * @category DOM\n * @return Property Decorator\n * @example\n * ```ts\n * import { withClassMethods } from \"@cfcs/core\";\n *\n * class YourFrameworkComponent {\n *   @withClassMethod(METHOD_NAMES)\n *   inst = new YourComponent();\n * }\n * ```\n */\n\nfunction withClassMethods(methods) {\n  return function (prototype, memberName) {\n    methods.forEach(function (name) {\n      if (name in prototype) {\n        return;\n      }\n\n      prototype[name] = function () {\n        var _a;\n\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        var result = (_a = this[memberName])[name].apply(_a, args); // fix `this` type to return your own `class` instance to the instance using the decorator.\n\n\n        if (result === this[memberName]) {\n          return this;\n        } else {\n          return result;\n        }\n      };\n    });\n  };\n}\n\nvar OBSERVERS_PATH = \"__observers__\";\nvar COMPUTED_PATH = \"__computed__\";\nvar CFCS_DETECTED_DEPENDENCIES_VERSION = 1;\nvar CFCS_DETECTED_DEPENDENCIES = \"__CFCS_DETECTED_DEPENDENCIES__\";\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\n\n/* global Reflect, Promise */\nvar extendStatics = function (d, b) {\n  extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n  };\n\n  return extendStatics(d, b);\n};\n\nfunction __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\nfunction __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nfunction getDetectedStack() {\n  // Version issues do not occur when you access the native object in the global.\n  Object[CFCS_DETECTED_DEPENDENCIES] = Object[CFCS_DETECTED_DEPENDENCIES] || {};\n  var versionList = Object[CFCS_DETECTED_DEPENDENCIES];\n  versionList[CFCS_DETECTED_DEPENDENCIES_VERSION] = versionList[CFCS_DETECTED_DEPENDENCIES_VERSION] || [];\n  return versionList[CFCS_DETECTED_DEPENDENCIES_VERSION];\n}\nfunction getCurrentDetected() {\n  var stack = getDetectedStack();\n  return stack[stack.length - 1];\n}\nfunction detectDependencies(host) {\n  var stack = getDetectedStack();\n  var observers = [];\n  var detected = {\n    host: host,\n    observers: observers,\n    push: function (observer) {\n      if (host !== observer && observers.indexOf(observer) === -1) {\n        observers.push(observer);\n      }\n    }\n  };\n  stack.push(detected);\n  return detected;\n}\nfunction endDetectDependencies() {\n  var stack = getDetectedStack();\n  return stack.pop();\n}\n\n/**\n * Creates a mutable ref object. You can access the `.current` value and detect the value change through `.subscribe`.\n * @category Reactive\n * @see observe\n */\n\nvar Observer =\n/*#__PURE__*/\nfunction () {\n  /**\n   *\n   */\n  function Observer(value) {\n    this._emitter = new Component();\n    this._current = value;\n  }\n\n  var __proto = Observer.prototype;\n  Object.defineProperty(__proto, \"current\", {\n    /**\n     * return the current value.\n     */\n    get: function () {\n      var currentDetected = getCurrentDetected();\n      currentDetected === null || currentDetected === void 0 ? void 0 : currentDetected.push(this);\n      return this._current;\n    },\n    set: function (value) {\n      this._setCurrent(value);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * When the current value changes, the callback function is called.\n   */\n\n  __proto.subscribe = function (callback) {\n    this.current;\n\n    this._emitter.on(\"update\", callback);\n\n    return this;\n  };\n  /**\n   * Cancel the registered subscription through callback.\n   */\n\n\n  __proto.unsubscribe = function (callback) {\n    this._emitter.off(\"update\", callback);\n\n    return this;\n  };\n\n  __proto._setCurrent = function (value) {\n    var prevValue = this._current;\n    var isUpdate = value !== prevValue;\n    this._current = value;\n\n    if (isUpdate) {\n      this._emitter.trigger(\"update\", value, prevValue);\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  __proto.toString = function () {\n    return \"\".concat(this.current);\n  };\n  /**\n   * @hidden\n   */\n\n\n  __proto.valueOf = function () {\n    return this.current;\n  };\n\n  return Observer;\n}();\n\n/**\n * @category Reactive\n * @hidden\n */\n\nvar ComputedObserver =\n/*#__PURE__*/\nfunction (_super) {\n  __extends(ComputedObserver, _super);\n  /**\n   * @description Creates a new computed observer from the values of other observers.\n   * It is read-only and if you change the value of the observer used inside the callback, its value will be automatically updated.\n   * @param _computedCallback A function for observers to be computed.\n   */\n\n\n  function ComputedObserver(_computedCallback) {\n    var _this = _super.call(this) || this;\n\n    _this._computedCallback = _computedCallback;\n    _this._registered = [];\n\n    _this._onCheckUpdate = function () {\n      _this._setCurrent(_this.current);\n    };\n\n    _this._current = _this.current;\n    return _this;\n  }\n\n  var __proto = ComputedObserver.prototype;\n  Object.defineProperty(__proto, \"current\", {\n    get: function () {\n      var _this = this;\n\n      detectDependencies(this);\n\n      var value = this._computedCallback();\n\n      var results = endDetectDependencies();\n\n      this._registered.forEach(function (observer) {\n        observer.unsubscribe(_this._onCheckUpdate);\n      });\n\n      results.observers.forEach(function (observer) {\n        observer.subscribe(_this._onCheckUpdate);\n      });\n      this._registered = results.observers;\n      return value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return ComputedObserver;\n}(Observer);\n\nfunction injectObserve(prototype, memberName, publicName) {\n  if (publicName === void 0) {\n    publicName = memberName;\n  }\n\n  var nextAttributes = {\n    configurable: true,\n    get: function () {\n      return getObserver(this, publicName).current;\n    },\n    set: function (value) {\n      getObserver(this, publicName, value).current = value;\n    }\n  };\n  Object.defineProperty(prototype, memberName, nextAttributes);\n\n  if (publicName !== memberName) {\n    Object.defineProperty(prototype, publicName, {\n      configurable: true,\n      get: function () {\n        return getObserver(this, publicName).current;\n      }\n    });\n  }\n}\n/**\n * @description `Observe` is a property decorator and converts the property into a `reactive state`. You can detect its status through `.subscribe`.\n * @category Reactive-Decorator\n * @see ReactiveSubscribe\n * @example\n* ```ts\nimport { ReactiveSubscribe, Observe } from \"@cfcs/core\";\n\n@ReactiveSubscribe\nclass Component {\n  // The public name and state name are the same.\n  @Observe value1 = 1;\n  // If you want to set public name and private properties separately\n  @Observe(\"value2\") _value2 = 1;\n\n  constructor() {\n    requestAnimationFrame(() => {\n      this.value1 = 2;\n    });\n  }\n}\ninterface C\n```\n */\n\n\nfunction Observe() {\n  var args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n\n  if (args.length > 1) {\n    return injectObserve(args[0], args[1]);\n  }\n\n  return function (prototype, memberName) {\n    return injectObserve(prototype, memberName, args[0]);\n  };\n}\n/**\n * @hidden\n */\n\nfunction Reactive() {\n  var args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n\n  return Observe.apply(void 0, args);\n}\n\n/**\n * @hidden\n */\n\nfunction injectReactiveSubscribe(object) {\n  object[\"subscribe\"] = function (name, callback) {\n    this[name];\n    getObserver(this, name).subscribe(callback);\n  };\n\n  object[\"unsubscribe\"] = function (name, callback) {\n    var _this = this;\n\n    if (!name) {\n      keys(getObservers(this)).forEach(function (observerName) {\n        _this.unsubscribe(observerName);\n      });\n      return;\n    }\n\n    if (!(name in this)) {\n      return;\n    }\n\n    getObserver(this, name).unsubscribe(callback);\n  };\n}\n/**\n * @description `ReactiveSubscribe` is a class decorator and adds `.subscribe` and `.unsubscribe` methods.\n * @category Reactive-Decorator\n * @see Observe\n * @example\n * ```ts\nimport { ReactiveSubscribe, Observe } from \"@cfcs/core\";\n\n@ReactiveSubscribe\nclass Component {\n  @Observe value1 = 1;\n\n  constructor() {\n    requestAnimationFrame(() => {\n      this.value1 = 2;\n    });\n  }\n}\n\ninterface Component extends ReactiveSubscribe<{\n  value1: number;\n  value2: number;\n}> {}\n\nconst component = new Component();\n\n// 1\nconsole.log(component.value1);\n\ncomponent.subscribe(\"value1\", nextValue => {\n  // When the change event occurs => (2, 2)\n  console.log(nextValue, component.value2);\n});\n```\n */\n\nfunction ReactiveSubscribe(Constructor) {\n  var prototype = Constructor.prototype;\n  injectReactiveSubscribe(prototype);\n}\n\nfunction makeReactiveObject(setup, all) {\n  var result = isFunction(setup) ? setup() : setup;\n  var reactiveObject = {};\n  defineObservers(reactiveObject);\n  keys(result).forEach(function (name) {\n    var value = result[name];\n\n    if (isObserver(value)) {\n      setObserver(reactiveObject, name, value);\n    } else {\n      setObserver(reactiveObject, name, observe(value));\n    }\n\n    Observe(name)(reactiveObject, name);\n  });\n  injectReactiveSubscribe(reactiveObject);\n  return reactiveObject;\n}\n/**\n * @description Make the return value of the corresponding object or function a reactive object.\n * @category Reactive\n * @param setup - The target object or function to which reactive is applied\n * @returns Makes all values into reactive objects.\n * @example\n * ```ts\n * import { reactive } from \"@cfcs/core\";\n *\n * const obj = reactive({\n *  value1: 1,\n *  value2: 2,\n * });\n *\n * obj.subscribe(\"value1\", value1 => {\n *   console.log(value1);\n * });\n * obj.value1 = 2;\n * ```\n */\n\n\nfunction reactive(setup) {\n  return makeReactiveObject(setup);\n}\n/**\n * @description Make the return value of the corresponding object or function a reactive object.\n * @category Reactive\n * @param setup - The target object or function to which reactive is applied\n * @returns Only the values to which observer is applied are objects to which reactive is applied.\n * @example\n * ```ts\n * import { partialReactive, observe } from \"@cfcs/core\";\n *\n * const value1 = observe(1);\n * const value2 = observe(2);\n * const obj = partialReactive({\n *  value1,\n *  value2,\n * });\n *\n * obj.subscribe(\"value1\", value1 => {\n *   console.log(value1);\n * });\n * value1.current = 2;\n * ```\n */\n\nfunction partialReactive(setup) {\n  return makeReactiveObject(setup);\n}\n/**\n * @description Creates a mutable ref object. You can access the `.current` value and detect the value change through `.subscribe`.\n * @category Reactive\n * @example\n * ```ts\n * import { observe } from \"@cfcs/core\";\n *\n * const ob1 = observe(1);\n *\n * ob1.subscribe(nextValue => {\n *   console.log(nextValue);\n * });\n *\n * ob1.current = 2;\n * ```\n */\n\nfunction observe(defaultValue) {\n  return new Observer(defaultValue);\n}\n/**\n * @hidden\n */\n\nfunction computed(computedCallback) {\n  return new ComputedObserver(computedCallback);\n}\n\n/**\n * @hidden\n */\n\nfunction withReactiveMethods(ref, methods) {\n  var obj = {};\n\n  if (!methods) {\n    return obj;\n  }\n\n  methods.forEach(function (name) {\n    obj[name] = function () {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      var current = ref.current || ref.value;\n      return current[name].apply(current, args);\n    };\n  });\n  return obj;\n}\n/**\n * @hidden\n */\n\nfunction defineObservers(instance) {\n  var observers = {};\n  Object.defineProperty(instance, OBSERVERS_PATH, {\n    get: function () {\n      return observers;\n    }\n  });\n  return observers;\n}\n/**\n * @hidden\n */\n\nfunction getObservers(instance) {\n  var _a, _b;\n\n  if (!instance[OBSERVERS_PATH]) {\n    defineObservers(instance);\n  }\n\n  var observers = instance[OBSERVERS_PATH];\n  var computedList = (_b = (_a = instance === null || instance === void 0 ? void 0 : instance.constructor) === null || _a === void 0 ? void 0 : _a.prototype) === null || _b === void 0 ? void 0 : _b[COMPUTED_PATH];\n\n  if (computedList) {\n    computedList.forEach(function (name) {\n      if (!(name in observers) && name in instance) {\n        instance[name];\n      }\n    });\n  }\n\n  return observers;\n}\n/**\n * @hidden\n */\n\nfunction getObserver(instance, name, defaultValue) {\n  var observers = getObservers(instance);\n\n  if (!observers[name]) {\n    observers[name] = observe(defaultValue);\n  }\n\n  return observers[name];\n}\n/**\n * @hidden\n */\n\nfunction setObserver(instance, name, observer) {\n  var observers = getObservers(instance);\n  observers[name] = observer;\n}\n/**\n * @description Whether that object is an observer instance\n * @category Reactive\n */\n\nfunction isObserver(val) {\n  return val && isObject(val) && \"current\" in val && \"subscribe\" in val && \"unsubscribe\" in val;\n}\n/**\n * @description Whether the object is reactive\n * @category Reactive\n */\n\nfunction isReactive(val) {\n  return val && !isObserver(val) && \"subscribe\" in val && \"unsubscribe\" in val;\n}\n\n/**\n * @category Reactive\n * @hidden\n */\n\nfunction adaptReactive(adapter, props) {\n  var objectAdapter = isFunction(adapter) ? {\n    setup: adapter\n  } : adapter;\n\n  function getProps() {\n    var _a, _b, _c, _d, _e;\n\n    return (_e = (_c = (_a = props === null || props === void 0 ? void 0 : props()) !== null && _a !== void 0 ? _a : (_b = objectAdapter.props) === null || _b === void 0 ? void 0 : _b.call(objectAdapter)) !== null && _c !== void 0 ? _c : (_d = objectAdapter.data) === null || _d === void 0 ? void 0 : _d.call(objectAdapter)) !== null && _e !== void 0 ? _e : {};\n  }\n\n  var eventEmitter = new Component();\n  var mountedHooks = [];\n  var initHooks = [];\n  var destroyHooks = [];\n  var onHooks = [];\n  var instanceRef = {\n    current: null\n  };\n  var offHooksList = [];\n  var initialState = null;\n  var eventNames = [];\n  var methodNames = [];\n\n  var onMounted = function (callback) {\n    mountedHooks.push(callback);\n  };\n\n  var onInit = function (callback) {\n    initHooks.push(callback);\n  };\n\n  var onDestroy = function (callback) {\n    destroyHooks.push(callback);\n  };\n\n  var on = function (callback) {\n    onHooks.push(callback);\n  };\n\n  var emit = function (eventName) {\n    var params = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      params[_i - 1] = arguments[_i];\n    }\n\n    eventEmitter.trigger.apply(eventEmitter, __spreadArray([eventName], params, false));\n  };\n\n  var setInitialState = function (state) {\n    initialState = state;\n  };\n\n  var setEvents = function (events) {\n    eventNames = events;\n  };\n\n  var setMethods = function (methods) {\n    methodNames = methods;\n  };\n\n  if (objectAdapter.setup) {\n    instanceRef.current = objectAdapter.setup({\n      getProps: getProps,\n      setInitialState: setInitialState,\n      setEvents: setEvents,\n      setMethods: setMethods,\n      onMounted: onMounted,\n      onDestroy: onDestroy,\n      onInit: onInit,\n      emit: emit,\n      on: on\n    }) || null;\n  }\n\n  if (objectAdapter.created) {\n    instanceRef.current = objectAdapter.created(getProps()) || null;\n  }\n\n  if (objectAdapter.events) {\n    setEvents(objectAdapter.events);\n  }\n\n  if (objectAdapter.state) {\n    setInitialState(objectAdapter.state);\n  }\n\n  if (objectAdapter.methods) {\n    setMethods(objectAdapter.methods);\n  }\n\n  if (objectAdapter.mounted) {\n    onMounted(objectAdapter.mounted);\n  }\n\n  if (objectAdapter.destroy) {\n    destroyHooks.push(objectAdapter.destroy);\n  }\n\n  if (objectAdapter.init) {\n    initHooks.push(objectAdapter.init);\n  }\n\n  if (objectAdapter.on) {\n    onHooks.push(function (instance, eventName, listener) {\n      var off = objectAdapter.on(instance, eventName, listener);\n      return function () {\n        var _a;\n\n        off && off();\n        (_a = objectAdapter.off) === null || _a === void 0 ? void 0 : _a.call(objectAdapter, instance, eventName, listener);\n      };\n    });\n  }\n\n  return {\n    events: function () {\n      return eventNames;\n    },\n    state: function () {\n      var inst = instanceRef.current;\n\n      if (initialState) {\n        return initialState;\n      }\n\n      if (inst) {\n        var observers_1 = getObservers(inst);\n        setInitialState(keys(observers_1).reduce(function (prev, cur) {\n          prev[cur] = observers_1[cur].current;\n          return prev;\n        }, {}));\n      }\n\n      return initialState || {};\n    },\n    instance: function () {\n      return instanceRef.current;\n    },\n    mounted: function () {\n      var props = getProps();\n      mountedHooks.forEach(function (hook) {\n        instanceRef.current = hook(props, instanceRef.current) || instanceRef.current;\n      });\n    },\n    init: function () {\n      // on events\n      var instance = instanceRef.current;\n      var props = getProps();\n      offHooksList = eventNames.map(function (eventName) {\n        var listener = function () {\n          var _a;\n\n          var params = [];\n\n          for (var _i = 0; _i < arguments.length; _i++) {\n            params[_i] = arguments[_i];\n          }\n\n          (_a = eventEmitter).trigger.apply(_a, __spreadArray([eventName], params, false));\n        };\n\n        var instance = instanceRef.current;\n        return onHooks.map(function (hook) {\n          return hook(instance, eventName, listener);\n        }).filter(Boolean);\n      }); // init\n\n      initHooks.forEach(function (hook) {\n        hook(instance, props);\n      });\n    },\n    destroy: function () {\n      // off events\n      offHooksList.forEach(function (offHooks) {\n        offHooks.forEach(function (hook) {\n          hook();\n        });\n      }); // destroy\n\n      eventEmitter.off();\n      var instance = instanceRef.current;\n      var props = getProps();\n      destroyHooks.forEach(function (hook) {\n        hook(instance, props);\n      });\n    },\n    methods: function () {\n      return withReactiveMethods(instanceRef, methodNames);\n    },\n    on: function (eventName, listener) {\n      eventEmitter.on(eventName, listener);\n    },\n    off: function (eventName, listener) {\n      eventEmitter.off(eventName, listener);\n    }\n  };\n}\n\n/**\n * @description `Computed` is a property decorator.\n * Changes in computed state values are also recognized according to changes in observers used within the getter function.\n * You can detect its status through `.subscribe`.\n * @hidden\n * @category Reactive-Decorator\n * @see ReactiveSubscribe\n * @example\n * ```ts\nconst ob1 = observe(0);\nconst ob2 = observe(1);\n\n// When\n@ReactiveSubscribe\nclass TestComputed {\n    @Computed\n    get ob3() {\n        return ob1.current + ob2.current;\n    }\n}\nconst inst = new TestComputed();\n\ninst.subscribe(\"ob3\", ob3 => {\n  console.log(ob3);\n});\n\nob1.current = 1;\n```\n */\n\nfunction Computed(prototype, memberName, attributes) {\n  var get = attributes.get;\n\n  function getComputed() {\n    var observers = getObservers(this);\n\n    if (!(memberName in observers)) {\n      observers[memberName] = computed(get.bind(this));\n    }\n\n    return getObserver(this, memberName).current;\n  }\n\n  var nextAttributes = {\n    configurable: true,\n    get: getComputed\n  };\n\n  if (COMPUTED_PATH in prototype) {\n    prototype[COMPUTED_PATH] || (prototype[COMPUTED_PATH] = []);\n    var computedList = prototype[COMPUTED_PATH];\n\n    if (computedList.indexOf(memberName) === -1) {\n      computedList.push(memberName);\n    }\n  }\n\n  Object.defineProperty(prototype, memberName, nextAttributes);\n  return nextAttributes;\n}\n\nexport { Computed, ComputedObserver, Observe, Observer, Reactive, ReactiveSubscribe, adaptReactive, camelize, computed, defineObservers, findTarget, getObserver, getObservers, injectReactiveSubscribe, isFunction, isObject, isObserver, isReactive, isString, keys, observe, partialReactive, reactive, setObserver, withClassMethods, withReactiveMethods };\n\n", "/*\nCopyright (c) NAVER Corp.\nname: @egjs/imready\nlicense: MIT\nauthor: NAVER Corp.\nrepository: https://github.com/naver/egjs-imready\nversion: 1.4.1\n*/\nimport Component, { ComponentEvent } from '@egjs/component';\nimport { reactive, isString } from '@cfcs/core';\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\n/* global Reflect, Promise */\n\nvar extendStatics = function (d, b) {\n  extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n  };\n  return extendStatics(d, b);\n};\nfunction __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() {\n    this.constructor = d;\n  }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\nvar __assign = function () {\n  __assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\n\n/** @deprecated */\nfunction __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n  return r;\n}\n\n/*\negjs-imready\nCopyright (c) 2020-present NAVER Corp.\nMIT license\n*/\nvar isWindow = typeof window !== \"undefined\";\nvar ua = isWindow ? window.navigator.userAgent : \"\";\nvar SUPPORT_COMPUTEDSTYLE = isWindow ? !!(\"getComputedStyle\" in window) : false;\nvar IS_IE = /MSIE|Trident|Windows Phone|Edge/.test(ua);\nvar SUPPORT_ADDEVENTLISTENER = isWindow ? !!(\"addEventListener\" in document) : false;\nvar WIDTH = \"width\";\nvar HEIGHT = \"height\";\nvar PROPS = [\"prefix\", \"loaders\"];\nvar EVENTS = [\"preReadyElement\", \"readyElement\", \"error\", \"preReady\", \"ready\"];\n\nfunction getAttribute(el, name) {\n  return el.getAttribute(name) || \"\";\n}\nfunction toArray(arr) {\n  return [].slice.call(arr);\n}\nfunction hasSizeAttribute(target, prefix) {\n  if (prefix === void 0) {\n    prefix = \"data-\";\n  }\n  return !!target.getAttribute(prefix + \"width\");\n}\nfunction hasLoadingAttribute(target, prefix) {\n  if (prefix === void 0) {\n    prefix = \"data-\";\n  }\n  return \"loading\" in target && target.getAttribute(\"loading\") === \"lazy\" || !!target.getAttribute(prefix + \"lazy\");\n}\nfunction hasSkipAttribute(target, prefix) {\n  if (prefix === void 0) {\n    prefix = \"data-\";\n  }\n  return !!target.getAttribute(prefix + \"skip\");\n}\nfunction addEvent(element, type, handler) {\n  if (SUPPORT_ADDEVENTLISTENER) {\n    element.addEventListener(type, handler, false);\n  } else if (element.attachEvent) {\n    element.attachEvent(\"on\" + type, handler);\n  } else {\n    element[\"on\" + type] = handler;\n  }\n}\nfunction removeEvent(element, type, handler) {\n  if (element.removeEventListener) {\n    element.removeEventListener(type, handler, false);\n  } else if (element.detachEvent) {\n    element.detachEvent(\"on\" + type, handler);\n  } else {\n    element[\"on\" + type] = null;\n  }\n}\nfunction innerWidth(el) {\n  return getSize(el, \"Width\");\n}\nfunction innerHeight(el) {\n  return getSize(el, \"Height\");\n}\nfunction getStyles(el) {\n  return (SUPPORT_COMPUTEDSTYLE ? window.getComputedStyle(el) : el.currentStyle) || {};\n}\nfunction getSize(el, name) {\n  var size = el[\"client\" + name] || el[\"offset\" + name];\n  return parseFloat(size || getStyles(el)[name.toLowerCase()]) || 0;\n}\nfunction getContentElements(element, tags, prefix) {\n  var skipElements = toArray(element.querySelectorAll(__spreadArrays([\"[\" + prefix + \"skip] [\" + prefix + \"width]\"], tags.map(function (tag) {\n    return [\"[\" + prefix + \"skip] \" + tag, tag + \"[\" + prefix + \"skip]\", \"[\" + prefix + \"width] \" + tag].join(\", \");\n  })).join(\", \")));\n  return toArray(element.querySelectorAll(\"[\" + prefix + \"width], \" + tags.join(\", \"))).filter(function (el) {\n    return skipElements.indexOf(el) === -1;\n  });\n}\n\n/*\negjs-imready\nCopyright (c) 2020-present NAVER Corp.\nMIT license\n*/\nvar elements = [];\nfunction addAutoSizer(element, prefix) {\n  !elements.length && addEvent(window, \"resize\", resizeAllAutoSizers);\n  element.__PREFIX__ = prefix;\n  elements.push(element);\n  resize(element);\n}\nfunction removeAutoSizer(element, prefix) {\n  var index = elements.indexOf(element);\n  if (index < 0) {\n    return;\n  }\n  var fixed = getAttribute(element, prefix + \"fixed\");\n  delete element.__PREFIX__;\n  element.style[fixed === HEIGHT ? WIDTH : HEIGHT] = \"\";\n  elements.splice(index, 1);\n  !elements.length && removeEvent(window, \"resize\", resizeAllAutoSizers);\n}\nfunction resize(element, prefix) {\n  if (prefix === void 0) {\n    prefix = \"data-\";\n  }\n  var elementPrefix = element.__PREFIX__ || prefix;\n  var dataWidth = parseInt(getAttribute(element, \"\" + elementPrefix + WIDTH), 10) || 0;\n  var dataHeight = parseInt(getAttribute(element, \"\" + elementPrefix + HEIGHT), 10) || 0;\n  var fixed = getAttribute(element, elementPrefix + \"fixed\");\n  if (fixed === HEIGHT) {\n    var size = innerHeight(element) || dataHeight;\n    element.style[WIDTH] = dataWidth / dataHeight * size + \"px\";\n  } else {\n    var size = innerWidth(element) || dataWidth;\n    element.style[HEIGHT] = dataHeight / dataWidth * size + \"px\";\n  }\n}\nfunction resizeAllAutoSizers() {\n  elements.forEach(function (element) {\n    resize(element);\n  });\n}\n\nvar Loader = /*#__PURE__*/function (_super) {\n  __extends(Loader, _super);\n  function Loader(element, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    var _this = _super.call(this) || this;\n    _this.isReady = false;\n    _this.isPreReady = false;\n    _this.hasDataSize = false;\n    _this.hasLoading = false;\n    _this.isSkip = false;\n    _this.onCheck = function (e) {\n      _this.clear();\n      if (e && e.type === \"error\") {\n        _this.onError(_this.element);\n      }\n      if (_this.hasLoading && _this.checkElement()) {\n        // I'm not ready\n        return;\n      }\n      // I'm pre-ready and ready!\n      var withPreReady = !_this.hasDataSize && !_this.hasLoading;\n      _this.onReady(withPreReady);\n    };\n    _this.options = __assign({\n      prefix: \"data-\"\n    }, options);\n    _this.element = element;\n    var prefix = _this.options.prefix;\n    _this.hasDataSize = hasSizeAttribute(element, prefix);\n    _this.isSkip = hasSkipAttribute(element, prefix);\n    _this.hasLoading = hasLoadingAttribute(element, prefix);\n    return _this;\n  }\n  var __proto = Loader.prototype;\n  __proto.check = function () {\n    if (this.isSkip || !this.checkElement()) {\n      // I'm Ready\n      this.onAlreadyReady(true);\n      return false;\n    }\n    if (this.hasDataSize) {\n      addAutoSizer(this.element, this.options.prefix);\n    }\n    if (this.hasDataSize || this.hasLoading) {\n      // I'm Pre Ready\n      this.onAlreadyPreReady();\n    }\n    // Wati Pre Ready, Ready\n    return true;\n  };\n  __proto.addEvents = function () {\n    var _this = this;\n    var element = this.element;\n    this.constructor.EVENTS.forEach(function (name) {\n      addEvent(element, name, _this.onCheck);\n    });\n  };\n  __proto.clear = function () {\n    var _this = this;\n    var element = this.element;\n    this.constructor.EVENTS.forEach(function (name) {\n      removeEvent(element, name, _this.onCheck);\n    });\n    this.removeAutoSizer();\n  };\n  __proto.destroy = function () {\n    this.clear();\n    this.off();\n  };\n  __proto.removeAutoSizer = function () {\n    if (this.hasDataSize) {\n      // I'm already ready.\n      var prefix = this.options.prefix;\n      removeAutoSizer(this.element, prefix);\n    }\n  };\n  __proto.onError = function (target) {\n    this.trigger(\"error\", {\n      element: this.element,\n      target: target\n    });\n  };\n  __proto.onPreReady = function () {\n    if (this.isPreReady) {\n      return;\n    }\n    this.isPreReady = true;\n    this.trigger(\"preReady\", {\n      element: this.element,\n      hasLoading: this.hasLoading,\n      isSkip: this.isSkip\n    });\n  };\n  __proto.onReady = function (withPreReady) {\n    if (this.isReady) {\n      return;\n    }\n    withPreReady = !this.isPreReady && withPreReady;\n    if (withPreReady) {\n      this.isPreReady = true;\n    }\n    this.removeAutoSizer();\n    this.isReady = true;\n    this.trigger(\"ready\", {\n      element: this.element,\n      withPreReady: withPreReady,\n      hasLoading: this.hasLoading,\n      isSkip: this.isSkip\n    });\n  };\n  __proto.onAlreadyError = function (target) {\n    var _this = this;\n    setTimeout(function () {\n      _this.onError(target);\n    });\n  };\n  __proto.onAlreadyPreReady = function () {\n    var _this = this;\n    setTimeout(function () {\n      _this.onPreReady();\n    });\n  };\n  __proto.onAlreadyReady = function (withPreReady) {\n    var _this = this;\n    setTimeout(function () {\n      _this.onReady(withPreReady);\n    });\n  };\n  Loader.EVENTS = [];\n  return Loader;\n}(Component);\n\nvar ElementLoader = /*#__PURE__*/function (_super) {\n  __extends(ElementLoader, _super);\n  function ElementLoader() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  var __proto = ElementLoader.prototype;\n  __proto.setHasLoading = function (hasLoading) {\n    this.hasLoading = hasLoading;\n  };\n  __proto.check = function () {\n    if (this.isSkip) {\n      // I'm Ready\n      this.onAlreadyReady(true);\n      return false;\n    }\n    if (this.hasDataSize) {\n      addAutoSizer(this.element, this.options.prefix);\n      this.onAlreadyPreReady();\n    } else {\n      // has not data size\n      this.trigger(\"requestChildren\");\n    }\n    return true;\n  };\n  __proto.checkElement = function () {\n    return true;\n  };\n  __proto.destroy = function () {\n    this.clear();\n    this.trigger(\"requestDestroy\");\n    this.off();\n  };\n  __proto.onAlreadyPreReady = function () {\n    // has data size\n    _super.prototype.onAlreadyPreReady.call(this);\n    this.trigger(\"reqeustReadyChildren\");\n  };\n  ElementLoader.EVENTS = [];\n  return ElementLoader;\n}(Loader);\n\n/**\n * @alias eg.ImReady\n * @extends eg.Component\n */\nvar ImReadyManager = /*#__PURE__*/function (_super) {\n  __extends(ImReadyManager, _super);\n  /**\n   * @param - ImReady's options\n   */\n  function ImReadyManager(options) {\n    if (options === void 0) {\n      options = {};\n    }\n    var _this = _super.call(this) || this;\n    _this.readyCount = 0;\n    _this.preReadyCount = 0;\n    _this.totalCount = 0;\n    _this.totalErrorCount = 0;\n    _this.isPreReadyOver = true;\n    _this.elementInfos = [];\n    _this.options = __assign({\n      loaders: {},\n      prefix: \"data-\"\n    }, options);\n    return _this;\n  }\n  /**\n   * Checks whether elements are in the ready state.\n   * @ko 엘리먼트가 준비 상태인지 체크한다.\n   * @elements - Elements to check ready status. <ko> 준비 상태를 체크할 엘리먼트들.</ko>\n   * @example\n     * ```html\n     * <div>\n     *    <img src=\"./1.jpg\" data-width=\"1280\" data-height=\"853\" style=\"width:100%\"/>\n     *    <img src=\"./2.jpg\" data-width=\"1280\" data-height=\"853\"/>\n     *    <img src=\"ERR\" data-width=\"1280\" data-height=\"853\"/>\n     * </div>\n     * ```\n     * ## Javascript\n     * ```js\n     * import ImReady from \"@egjs/imready\";\n     *\n     * const im = new ImReady(); // umd: eg.ImReady\n     * im.check(document.querySelectorAll(\"img\")).on({\n     *   preReadyElement: e => {\n     *     // 1, 3\n     *     // 2, 3\n     *     // 3, 3\n     *     console.log(e.preReadyCount, e.totalCount),\n     *   },\n     * });\n     * ```\n   */\n  var __proto = ImReadyManager.prototype;\n  __proto.check = function (elements) {\n    var _this = this;\n    var prefix = this.options.prefix;\n    this.clear();\n    this.elementInfos = toArray(elements).map(function (element, index) {\n      var loader = _this.getLoader(element, {\n        prefix: prefix\n      });\n      loader.check();\n      loader.on(\"error\", function (e) {\n        _this.onError(index, e.target);\n      }).on(\"preReady\", function (e) {\n        var info = _this.elementInfos[index];\n        info.hasLoading = e.hasLoading;\n        info.isSkip = e.isSkip;\n        var isPreReady = _this.checkPreReady(index);\n        _this.onPreReadyElement(index);\n        isPreReady && _this.onPreReady();\n      }).on(\"ready\", function (_a) {\n        var withPreReady = _a.withPreReady,\n          hasLoading = _a.hasLoading,\n          isSkip = _a.isSkip;\n        var info = _this.elementInfos[index];\n        info.hasLoading = hasLoading;\n        info.isSkip = isSkip;\n        var isPreReady = withPreReady && _this.checkPreReady(index);\n        var isReady = _this.checkReady(index);\n        // Pre-ready and ready occur simultaneously\n        withPreReady && _this.onPreReadyElement(index);\n        _this.onReadyElement(index);\n        isPreReady && _this.onPreReady();\n        isReady && _this.onReady();\n      });\n      return {\n        loader: loader,\n        element: element,\n        hasLoading: false,\n        hasError: false,\n        isPreReady: false,\n        isReady: false,\n        isSkip: false\n      };\n    });\n    var length = this.elementInfos.length;\n    this.totalCount = length;\n    if (!length) {\n      setTimeout(function () {\n        _this.onPreReady();\n        _this.onReady();\n      });\n    }\n    return this;\n  };\n  /**\n   * Gets the total count of elements to be checked.\n   * @ko 체크하는 element의 총 개수를 가져온다.\n   */\n  __proto.getTotalCount = function () {\n    return this.totalCount;\n  };\n  /**\n   * Whether the elements are all pre-ready. (all sizes are known)\n   * @ko 엘리먼트들이 모두 사전 준비가 됐는지 (사이즈를 전부 알 수 있는지) 여부.\n   */\n  __proto.isPreReady = function () {\n    return this.elementInfos.every(function (info) {\n      return info.isPreReady;\n    });\n  };\n  /**\n   * Whether the elements are all ready.\n   * @ko 엘리먼트들이 모두 준비가 됐는지 여부.\n   */\n  __proto.isReady = function () {\n    return this.elementInfos.every(function (info) {\n      return info.isReady;\n    });\n  };\n  /**\n   * Whether an error has occurred in the elements in the current state.\n   * @ko 현재 상태에서 엘리먼트들이 에러가 발생했는지 여부.\n   */\n  __proto.hasError = function () {\n    return this.totalErrorCount > 0;\n  };\n  /**\n   * Clears events of elements being checked.\n   * @ko 체크 중인 엘리먼트들의 이벤트를 해제 한다.\n   */\n  __proto.clear = function () {\n    this.isPreReadyOver = false;\n    this.totalCount = 0;\n    this.preReadyCount = 0;\n    this.readyCount = 0;\n    this.totalErrorCount = 0;\n    this.elementInfos.forEach(function (info) {\n      if (info.loader) {\n        info.loader.destroy();\n      }\n    });\n    this.elementInfos = [];\n  };\n  /**\n   * Destory all events.\n   * @ko 모든 이벤트를 해제 한다.\n   */\n  __proto.destroy = function () {\n    this.clear();\n    this.off();\n  };\n  __proto.getLoader = function (element, options) {\n    var _this = this;\n    var tagName = element.tagName.toLowerCase();\n    var loaders = this.options.loaders;\n    var prefix = options.prefix;\n    var tags = Object.keys(loaders);\n    if (loaders[tagName]) {\n      return new loaders[tagName](element, options);\n    }\n    var loader = new ElementLoader(element, options);\n    var children = toArray(element.querySelectorAll(tags.join(\", \")));\n    loader.setHasLoading(children.some(function (el) {\n      return hasLoadingAttribute(el, prefix);\n    }));\n    var withPreReady = false;\n    var childrenImReady = this.clone().on(\"error\", function (e) {\n      loader.onError(e.target);\n    }).on(\"ready\", function () {\n      loader.onReady(withPreReady);\n    });\n    loader.on(\"requestChildren\", function () {\n      // has not data size\n      var contentElements = getContentElements(element, tags, _this.options.prefix);\n      childrenImReady.check(contentElements).on(\"preReady\", function (e) {\n        withPreReady = e.isReady;\n        if (!withPreReady) {\n          loader.onPreReady();\n        }\n      });\n    }).on(\"reqeustReadyChildren\", function () {\n      // has data size\n      // loader call preReady\n      // check only video, image elements\n      childrenImReady.check(children);\n    }).on(\"requestDestroy\", function () {\n      childrenImReady.destroy();\n    });\n    return loader;\n  };\n  __proto.clone = function () {\n    return new ImReadyManager(__assign({}, this.options));\n  };\n  __proto.checkPreReady = function (index) {\n    this.elementInfos[index].isPreReady = true;\n    ++this.preReadyCount;\n    if (this.preReadyCount < this.totalCount) {\n      return false;\n    }\n    return true;\n  };\n  __proto.checkReady = function (index) {\n    this.elementInfos[index].isReady = true;\n    ++this.readyCount;\n    if (this.readyCount < this.totalCount) {\n      return false;\n    }\n    return true;\n  };\n  __proto.onError = function (index, target) {\n    var info = this.elementInfos[index];\n    info.hasError = true;\n    /**\n     * An event occurs if the image, video fails to load.\n     * @ko 이미지, 비디오가 로딩에 실패하면 이벤트가 발생한다.\n     * @event eg.ImReady#error\n     * @param {eg.ImReady.OnError} e - The object of data to be sent to an event <ko>이벤트에 전달되는 데이터 객체</ko>\n     * @example\n     * ```html\n     * <div>\n     *    <img src=\"./1.jpg\" data-width=\"1280\" data-height=\"853\" style=\"width:100%\"/>\n     *    <img src=\"./2.jpg\"/>\n     *    <img src=\"ERR\"/>\n     * </div>\n     * ```\n     * ## Javascript\n     * ```js\n     * import ImReady from \"@egjs/imready\";\n     *\n     * const im = new ImReady(); // umd: eg.ImReady\n     * im.check([document.querySelector(\"div\")]).on({\n     *   error: e => {\n     *     // <div>...</div>, 0, <img src=\"ERR\"/>\n     *     console.log(e.element, e.index, e.target),\n     *   },\n     * });\n     * ```\n     */\n    this.trigger(new ComponentEvent(\"error\", {\n      element: info.element,\n      index: index,\n      target: target,\n      errorCount: this.getErrorCount(),\n      totalErrorCount: ++this.totalErrorCount\n    }));\n  };\n  __proto.onPreReadyElement = function (index) {\n    var info = this.elementInfos[index];\n    /**\n     * An event occurs when the element is pre-ready (when the loading attribute is applied or the size is known)\n     * @ko 해당 엘리먼트가 사전 준비되었을 때(loading 속성이 적용되었거나 사이즈를 알 수 있을 때) 이벤트가 발생한다.\n     * @event eg.ImReady#preReadyElement\n     * @param {eg.ImReady.OnPreReadyElement} e - The object of data to be sent to an event <ko>이벤트에 전달되는 데이터 객체</ko>\n     * @example\n     * ```html\n     * <div>\n     *    <img src=\"./1.jpg\" data-width=\"1280\" data-height=\"853\" style=\"width:100%\"/>\n     *    <img src=\"./2.jpg\" data-width=\"1280\" data-height=\"853\"/>\n     *    <img src=\"ERR\" data-width=\"1280\" data-height=\"853\"/>\n     * </div>\n     * ```\n     * ## Javascript\n     * ```js\n     * import ImReady from \"@egjs/imready\";\n     *\n     * const im = new ImReady(); // umd: eg.ImReady\n     * im.check(document.querySelectorAll(\"img\")).on({\n     *   preReadyElement: e => {\n     *     // 1, 3\n     *     // 2, 3\n     *     // 3, 3\n     *     console.log(e.preReadyCount, e.totalCount),\n     *   },\n     * });\n     * ```\n     */\n    this.trigger(new ComponentEvent(\"preReadyElement\", {\n      element: info.element,\n      index: index,\n      preReadyCount: this.preReadyCount,\n      readyCount: this.readyCount,\n      totalCount: this.totalCount,\n      isPreReady: this.isPreReady(),\n      isReady: this.isReady(),\n      hasLoading: info.hasLoading,\n      isSkip: info.isSkip\n    }));\n  };\n  __proto.onPreReady = function () {\n    this.isPreReadyOver = true;\n    /**\n     * An event occurs when all element are pre-ready (When all elements have the loading attribute applied or the size is known)\n     * @ko 모든 엘리먼트들이 사전 준비된 경우 (모든 엘리먼트들이 loading 속성이 적용되었거나 사이즈를 알 수 있는 경우) 이벤트가 발생한다.\n     * @event eg.ImReady#preReady\n     * @param {eg.ImReady.OnPreReady} e - The object of data to be sent to an event <ko>이벤트에 전달되는 데이터 객체</ko>\n     * @example\n     * ```html\n     * <div>\n     *    <img src=\"./1.jpg\" data-width=\"1280\" data-height=\"853\" style=\"width:100%\"/>\n     *    <img src=\"./2.jpg\" data-width=\"1280\" data-height=\"853\"/>\n     *    <img src=\"ERR\" data-width=\"1280\" data-height=\"853\"/>\n     * </div>\n     * ```\n     * ## Javascript\n     * ```js\n     * import ImReady from \"@egjs/imready\";\n     *\n     * const im = new ImReady(); // umd: eg.ImReady\n     * im.check(document.querySelectorAll(\"img\")).on({\n     *   preReady: e => {\n     *     // 0, 3\n     *     console.log(e.readyCount, e.totalCount),\n     *   },\n     * });\n     * ```\n     */\n    this.trigger(new ComponentEvent(\"preReady\", {\n      readyCount: this.readyCount,\n      totalCount: this.totalCount,\n      isReady: this.isReady(),\n      hasLoading: this.hasLoading()\n    }));\n  };\n  __proto.onReadyElement = function (index) {\n    var info = this.elementInfos[index];\n    /**\n     * An event occurs when the element is ready\n     * @ko 해당 엘리먼트가 준비가 되었을 때 이벤트가 발생한다.\n     * @event eg.ImReady#readyElement\n     * @param {eg.ImReady.OnReadyElement} e - The object of data to be sent to an event <ko>이벤트에 전달되는 데이터 객체</ko>\n     * @example\n     * ```html\n     * <div>\n     *    <img src=\"./1.jpg\" data-width=\"1280\" data-height=\"853\" style=\"width:100%\"/>\n     *    <img src=\"./2.jpg\" data-width=\"1280\" data-height=\"853\"/>\n     *    <img src=\"ERR\" data-width=\"1280\" data-height=\"853\"/>\n     * </div>\n     * ```\n     * ## Javascript\n     * ```js\n     * import ImReady from \"@egjs/imready\";\n     *\n     * const im = new ImReady(); // umd: eg.ImReady\n     * im.check(document.querySelectorAll(\"img\")).on({\n     *   readyElement: e => {\n     *     // 1, 0, false, 3\n     *     // 2, 1, false, 3\n     *     // 3, 2, true, 3\n     *     console.log(e.readyCount, e.index, e.hasError, e.totalCount),\n     *   },\n     * });\n     * ```\n     */\n    this.trigger(new ComponentEvent(\"readyElement\", {\n      index: index,\n      element: info.element,\n      hasError: info.hasError,\n      errorCount: this.getErrorCount(),\n      totalErrorCount: this.totalErrorCount,\n      preReadyCount: this.preReadyCount,\n      readyCount: this.readyCount,\n      totalCount: this.totalCount,\n      isPreReady: this.isPreReady(),\n      isReady: this.isReady(),\n      hasLoading: info.hasLoading,\n      isPreReadyOver: this.isPreReadyOver,\n      isSkip: info.isSkip\n    }));\n  };\n  __proto.onReady = function () {\n    /**\n     * An event occurs when all element are ready\n     * @ko 모든 엘리먼트들이 준비된 경우 이벤트가 발생한다.\n     * @event eg.ImReady#ready\n     * @param {eg.ImReady.OnReady} e - The object of data to be sent to an event <ko>이벤트에 전달되는 데이터 객체</ko>\n     * @example\n     * ```html\n     * <div>\n     *    <img src=\"./1.jpg\" data-width=\"1280\" data-height=\"853\" style=\"width:100%\"/>\n     *    <img src=\"./2.jpg\" data-width=\"1280\" data-height=\"853\"/>\n     *    <img src=\"ERR\" data-width=\"1280\" data-height=\"853\"/>\n     * </div>\n     * ```\n     * ## Javascript\n     * ```js\n     * import ImReady from \"@egjs/imready\";\n     *\n     * const im = new ImReady(); // umd: eg.ImReady\n     * im.check(document.querySelectorAll(\"img\")).on({\n     *   preReady: e => {\n     *     // 0, 3\n     *     console.log(e.readyCount, e.totalCount),\n     *   },\n     *   ready: e => {\n     *     // 1, 3\n     *     console.log(e.errorCount, e.totalCount),\n     *   },\n     * });\n     * ```\n     */\n    this.trigger(new ComponentEvent(\"ready\", {\n      errorCount: this.getErrorCount(),\n      totalErrorCount: this.totalErrorCount,\n      totalCount: this.totalCount\n    }));\n  };\n  __proto.getErrorCount = function () {\n    return this.elementInfos.filter(function (info) {\n      return info.hasError;\n    }).length;\n  };\n  __proto.hasLoading = function () {\n    return this.elementInfos.some(function (info) {\n      return info.hasLoading;\n    });\n  };\n  return ImReadyManager;\n}(Component);\n\nvar ImageLoader = /*#__PURE__*/function (_super) {\n  __extends(ImageLoader, _super);\n  function ImageLoader() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  var __proto = ImageLoader.prototype;\n  __proto.checkElement = function () {\n    var element = this.element;\n    var src = element.getAttribute(\"src\");\n    if (element.complete) {\n      if (src) {\n        // complete\n        if (!element.naturalWidth) {\n          this.onAlreadyError(element);\n        }\n        return false;\n      } else {\n        // Using an external lazy loading module\n        this.onAlreadyPreReady();\n      }\n    }\n    this.addEvents();\n    IS_IE && element.setAttribute(\"src\", src);\n    return true;\n  };\n  ImageLoader.EVENTS = [\"load\", \"error\"];\n  return ImageLoader;\n}(Loader);\n\nvar VideoLoader = /*#__PURE__*/function (_super) {\n  __extends(VideoLoader, _super);\n  function VideoLoader() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  var __proto = VideoLoader.prototype;\n  __proto.checkElement = function () {\n    var element = this.element;\n    // HAVE_NOTHING: 0, no information whether or not the audio/video is ready\n    // HAVE_METADATA: 1, HAVE_METADATA - metadata for the audio/video is ready\n    // HAVE_CURRENT_DATA: 2, data for the current playback position is available, but not enough data to play next frame/millisecond\n    // HAVE_FUTURE_DATA: 3, data for the current and at least the next frame is available\n    // HAVE_ENOUGH_DATA: 4, enough data available to start playing\n    if (element.readyState >= 1) {\n      return false;\n    }\n    if (element.error) {\n      this.onAlreadyError(element);\n      return false;\n    }\n    this.addEvents();\n    return true;\n  };\n  VideoLoader.EVENTS = [\"loadedmetadata\", \"error\"];\n  return VideoLoader;\n}(Loader);\n\nvar ImReady = /*#__PURE__*/function (_super) {\n  __extends(ImReady, _super);\n  function ImReady(options) {\n    if (options === void 0) {\n      options = {};\n    }\n    return _super.call(this, __assign({\n      loaders: {\n        img: ImageLoader,\n        video: VideoLoader\n      }\n    }, options)) || this;\n  }\n  return ImReady;\n}(ImReadyManager);\n\nvar REACTIVE_IMREADY = function (_a) {\n  var setEvents = _a.setEvents,\n    setMethods = _a.setMethods,\n    on = _a.on,\n    onInit = _a.onInit,\n    onDestroy = _a.onDestroy,\n    getProps = _a.getProps;\n  setEvents(EVENTS);\n  setMethods([\"add\"]);\n  var children = [];\n  var reactiveImReady = reactive({\n    preReadyCount: 0,\n    readyCount: 0,\n    errorCount: 0,\n    totalErrorCount: 0,\n    totalCount: 0,\n    isPreReady: false,\n    isReady: false,\n    hasError: false,\n    isPreReadyOver: false,\n    add: function (element) {\n      children.push(element);\n    }\n  });\n  var props = getProps() || {};\n  var imReady = new ImReady(props);\n  imReady.on(\"error\", function (e) {\n    reactiveImReady.hasError = true;\n    reactiveImReady.errorCount = e.errorCount;\n    reactiveImReady.totalErrorCount = e.totalErrorCount;\n  }).on(\"preReadyElement\", function (e) {\n    reactiveImReady.preReadyCount = e.preReadyCount;\n  }).on(\"readyElement\", function (e) {\n    reactiveImReady.readyCount = e.readyCount;\n    reactiveImReady.isPreReadyOver = e.isPreReadyOver;\n  }).on(\"preReady\", function () {\n    reactiveImReady.isPreReady = true;\n  }).on(\"ready\", function () {\n    reactiveImReady.isReady = true;\n  });\n  on(function (_, name, callback) {\n    imReady.on(name, callback);\n    return function () {\n      imReady.off(name, callback);\n    };\n  });\n  onInit(function () {\n    var selector = props === null || props === void 0 ? void 0 : props.selector;\n    var checkedElements = [];\n    children.forEach(function (child) {\n      if (!child) {\n        return;\n      }\n      if (isString(child)) {\n        checkedElements = __spreadArrays(checkedElements, toArray(document.querySelectorAll(child)));\n      } else if (child instanceof Element) {\n        checkedElements.push(child);\n      } else if (\"value\" in child || \"current\" in child) {\n        var element = child.value || child.current;\n        if (element) {\n          checkedElements.push(element);\n        }\n      }\n    });\n    if (selector) {\n      checkedElements = checkedElements.reduce(function (prev, cur) {\n        return __spreadArrays(prev, [].slice.call(cur.querySelectorAll(selector)));\n      }, []);\n    }\n    reactiveImReady.totalCount = checkedElements.length;\n    imReady.check(checkedElements);\n  });\n  onDestroy(function () {\n    imReady.destroy();\n  });\n  return reactiveImReady;\n};\n\n/*\negjs-imready\nCopyright (c) 2020-present NAVER Corp.\nMIT license\n*/\n\nexport default ImReady;\nexport { EVENTS, ImageLoader, Loader, ImReadyManager as Manager, PROPS, REACTIVE_IMREADY, VideoLoader };\n\n", "/*\nCopyright (c) 2023-present NAVER Corp.\nname: @egjs/view360\nlicense: MIT\nauthor: NAVER Corp.\nrepository: https://github.com/naver/egjs-view360\nversion: 4.0.0-beta.7\n*/\nimport Component from '@egjs/component';\nimport { quat, vec3, mat4, vec2 } from 'gl-matrix';\nimport ImReady from '@egjs/imready';\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\nfunction __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\n/*\r\n * Copyright (c) 2023-present NAVER Corp.\r\n * egjs projects are licensed under the MIT license\r\n */\n/**\r\n * Error thrown by {@link View360}\r\n * @ko {@link View360}이 발생시킨 에러\r\n * @since 4.0.0\r\n */\nclass View360Error extends Error {\n  /**\r\n   * Create new instance of View360Error\r\n   * @ko View360Error의 인스턴스를 생성합니다.\r\n   * @param message - Error message {@ko 에러 메시지}\r\n   * @param code - Error code {@ko 에러 코드}\r\n   */\n  constructor(message, code) {\n    super(message);\n    Object.setPrototypeOf(this, View360Error.prototype);\n    this.name = \"View360Error\";\n    this.code = code;\n  }\n}\n\n/*\r\n * Copyright (c) 2023-present NAVER Corp.\r\n * egjs projects are licensed under the MIT license\r\n */\n/**\r\n * Error codes of {@link View360Error}\r\n * @ko {@link View360Error}가 가질 수 있는 에러 코드 값들\r\n * @since 4.0.0\r\n */\nconst ERROR_CODES = {\n  /**\r\n   * The given value's type is not expected\r\n   * @ko 주어진 값의 타입이 잘못되었을 경우\r\n   * @since 4.0.0\r\n   */\n  WRONG_TYPE: 0,\n  /**\r\n   * The given value is not a supported option\r\n   * @ko 잘못된 옵션을 받았을 경우\r\n   * @since 4.0.0\r\n   */\n  WRONG_OPTION: 1,\n  /**\r\n   * The element with given CSS selector does not exist\r\n   * @ko 주어진 CSS 셀렉터로 엘리먼트를 찾지 못했을 경우\r\n   * @since 4.0.0\r\n   */\n  ELEMENT_NOT_FOUND: 2,\n  /**\r\n   * Couldn't find canvas element inside the given container element.\r\n   * @ko 컨테이너 엘리먼트 내부에서 캔버스 엘리먼트를 찾지 못했을 경우\r\n   * @since 4.0.0\r\n   */\n  CANVAS_NOT_FOUND: 3,\n  /**\r\n   * The browser does not support WebGL\r\n   * @ko 브라우저가 WebGL을 지원하지 않는 경우\r\n   * @since 4.0.0\r\n   */\n  WEBGL_NOT_SUPPORTED: 4,\n  /**\r\n   * Failed creating canvas 2D context\r\n   * @ko 캔버스 2D 컨텍스트를 생성하지 못한 경우\r\n   * @since 4.0.0\r\n   */\n  FAILED_CREATE_CONTEXT_2D: 5,\n  /**\r\n   * `init()` is called before setting {@link View360Options#projection}\r\n   * @ko {@link View360Options#projection}을 설정하기 전에 `init()`이 호출된 경우\r\n   * @since 4.0.0\r\n   */\n  PROVIDE_PROJECTION_FIRST: 6,\n  /**\r\n   * Failed linking WebGL program. Only can be thrown when {@link View360Options#debug} is `true`.\r\n   * @ko WebGL 프로그램 링크에 실패한 경우. {@link View360Options#debug}를 `true`로 설정한 경우에만 발생할 수 있습니다.\r\n   * @since 4.0.0\r\n   */\n  FAILED_LINKING_PROGRAM: 7,\n  /**\r\n   * Arguments are not sufficient for the given property.\r\n   * @ko 프로퍼티에 값이 충분히 주어지지 않았을 때\r\n   * @since 4.0.0\r\n   */\n  INSUFFICIENT_ARGS: 8\n};\nconst MESSAGES = {\n  WRONG_TYPE: (val, types) => `${typeof val} is not a ${types.map(type => `\"${type}\"`).join(\" or \")}.`,\n  WRONG_OPTION: (val, optionName) => `Bad option: given \"${val}\" for option \"${optionName}\".`,\n  ELEMENT_NOT_FOUND: query => `Element with selector \"${query}\" not found.`,\n  CANVAS_NOT_FOUND: \"The canvas element was not found inside the given root element.\",\n  WEBGL_NOT_SUPPORTED: \"WebGL is not supported on this browser.\",\n  FAILED_CREATE_CONTEXT_2D: \"Failed to create canvas 2D context\",\n  PROVIDE_PROJECTION_FIRST: \"\\\"projection\\\" should be provided before initialization.\",\n  FAILED_LINKING_PROGRAM: (msg, shaderLog) => `Failed linking WebGL program - \"${msg}\\nShader compile Log: ${shaderLog}`,\n  INSUFFICIENT_ARGS: (val, name) => `Insufficient arguments: given \"${val}\" for \"${name}\".`\n};\nvar ERROR = {\n  CODES: ERROR_CODES,\n  MESSAGES\n};\n\n/*\r\n * Copyright (c) 2023-present NAVER Corp.\r\n * egjs projects are licensed under the MIT license\r\n */\nconst EVENTS$1 = {\n  MOUSE_DOWN: \"mousedown\",\n  MOUSE_MOVE: \"mousemove\",\n  MOUSE_UP: \"mouseup\",\n  TOUCH_START: \"touchstart\",\n  TOUCH_MOVE: \"touchmove\",\n  TOUCH_END: \"touchend\",\n  WHEEL: \"wheel\",\n  RESIZE: \"resize\",\n  CONTEXT_MENU: \"contextmenu\",\n  MOUSE_ENTER: \"mouseenter\",\n  MOUSE_LEAVE: \"mouseleave\",\n  POINTER_DOWN: \"pointerdown\",\n  POINTER_MOVE: \"pointermove\",\n  POINTER_UP: \"pointerup\",\n  POINTER_CANCEL: \"pointercancel\",\n  POINTER_ENTER: \"pointerenter\",\n  POINTER_LEAVE: \"pointerleave\",\n  KEY_DOWN: \"keydown\",\n  KEY_UP: \"keyup\",\n  LOAD: \"load\",\n  ERROR: \"error\",\n  CLICK: \"click\",\n  DOUBLE_CLICK: \"dblclick\",\n  CONTEXT_CREATE_ERROR: \"webglcontextcreationerror\",\n  CONTEXT_LOST: \"webglcontextlost\",\n  CONTEXT_RESTORED: \"webglcontextrestored\",\n  DEVICE_ORIENTATION: \"deviceorientation\",\n  DEVICE_MOTION: \"devicemotion\",\n  ORIENTATION_CHANGE: \"orientationchange\",\n  VIDEO_PLAY: \"play\",\n  VIDEO_PAUSE: \"pause\",\n  VIDEO_LOADED_DATA: \"loadeddata\",\n  VIDEO_VOLUME_CHANGE: \"volumechange\",\n  VIDEO_TIME_UPDATE: \"timeupdate\",\n  VIDEO_DURATION_CHANGE: \"durationchange\",\n  VIDEO_CAN_PLAYTHROUGH: \"canplaythrough\",\n  TRANSITION_END: \"transitionend\",\n  XR_END: \"end\"\n};\nconst EL_DIV = \"div\";\nconst EL_BUTTON = \"button\";\n// https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent.button\nvar MOUSE_BUTTON;\n(function (MOUSE_BUTTON) {\n  MOUSE_BUTTON[MOUSE_BUTTON[\"LEFT\"] = 0] = \"LEFT\";\n  MOUSE_BUTTON[MOUSE_BUTTON[\"MIDDLE\"] = 1] = \"MIDDLE\";\n  MOUSE_BUTTON[MOUSE_BUTTON[\"RIGHT\"] = 2] = \"RIGHT\";\n})(MOUSE_BUTTON || (MOUSE_BUTTON = {}));\nconst CURSOR = {\n  GRAB: \"grab\",\n  GRABBING: \"grabbing\",\n  NONE: \"\"\n};\nconst KEY_DIRECTION = [\"LEFT\", \"UP\", \"RIGHT\", \"DOWN\"];\nvar DIRECTION_KEY_CODE;\n(function (DIRECTION_KEY_CODE) {\n  DIRECTION_KEY_CODE[DIRECTION_KEY_CODE[\"LEFT\"] = 37] = \"LEFT\";\n  DIRECTION_KEY_CODE[DIRECTION_KEY_CODE[\"UP\"] = 38] = \"UP\";\n  DIRECTION_KEY_CODE[DIRECTION_KEY_CODE[\"RIGHT\"] = 39] = \"RIGHT\";\n  DIRECTION_KEY_CODE[DIRECTION_KEY_CODE[\"DOWN\"] = 40] = \"DOWN\";\n})(DIRECTION_KEY_CODE || (DIRECTION_KEY_CODE = {}));\nconst SPACE_KEY_CODE = 32;\nconst DIRECTION_KEY_NAME = {\n  LEFT: \"ArrowLeft\",\n  UP: \"ArrowUp\",\n  RIGHT: \"ArrowRight\",\n  DOWN: \"ArrowDown\"\n};\nconst SPACE_KEY_NAME = \" \";\nconst FULLSCREEN_REQUEST = [\"requestFullscreen\", \"webkitRequestFullscreen\", \"webkitRequestFullScreen\", \"webkitCancelFullScreen\", \"mozRequestFullScreen\", \"msRequestFullscreen\"];\nconst FULLSCREEN_ELEMENT = [\"fullscreenElement\", \"webkitFullscreenElement\", \"webkitCurrentFullScreenElement\", \"mozFullScreenElement\", \"msFullscreenElement\"];\nconst FULLSCREEN_EXIT = [\"exitFullscreen\", \"webkitExitFullscreen\", \"webkitCancelFullScreen\", \"mozCancelFullScreen\", \"msExitFullscreen\"];\nconst FULLSCREEN_CHANGE = [\"fullscreenchange\", \"webkitfullscreenchange\", \"mozfullscreenchange\", \"MSFullscreenChange\"];\n\n/*\r\n * Copyright (c) 2023-present NAVER Corp.\r\n * egjs projects are licensed under the MIT license\r\n */\n/**\r\n * Default class names\r\n * @ko 기본 클래스 이름들\r\n * @since 4.0.0\r\n */\nconst DEFAULT_CLASS = {\n  CONTAINER: \"view360-container\",\n  CANVAS: \"view360-canvas\",\n  CTX_LOST: \"view360-ctx-lost\",\n  IN_VR: \"view360-vr-presenting\",\n  HOTSPOT_CONTAINER: \"view360-hotspots\",\n  HOTSPOT: \"view360-hotspot\",\n  HOTSPOT_VISIBLE: \"view360-hotspot-visible\",\n  HOTSPOT_FLIP_X: \"view360-hotspot-flip-x\",\n  HOTSPOT_FLIP_Y: \"view360-hotspot-flip-y\"\n};\n/**\r\n * Event names\r\n * @ko 이벤트 이름들\r\n * @since 4.0.0\r\n * @example\r\n * ```ts\r\n * import View360, { EVENTS } from \"@egjs/view360\";\r\n *\r\n * const viewer = new View360(\"#el_id\");\r\n *\r\n * viewer.on(EVENTS.READY, evt => {\r\n *   console.log(\"View360 is ready!\");\r\n * });\r\n * ```\r\n */\nconst EVENTS = {\n  READY: \"ready\",\n  LOAD_START: \"loadStart\",\n  LOAD: \"load\",\n  PROJECTION_CHANGE: \"projectionChange\",\n  RESIZE: \"resize\",\n  BEFORE_RENDER: \"beforeRender\",\n  RENDER: \"render\",\n  INPUT_START: \"inputStart\",\n  INPUT_END: \"inputEnd\",\n  VIEW_CHANGE: \"viewChange\",\n  STATIC_CLICK: \"staticClick\",\n  VR_START: \"vrStart\",\n  VR_END: \"vrEnd\"\n};\n/**\r\n * Collection of predefined easing functions\r\n * @ko 미리 정의된 easing 함수들\r\n */\nconst EASING = {\n  LINEAR: x => x,\n  SINE_WAVE: x => Math.sin(x * Math.PI * 2),\n  EASE_OUT_CUBIC: x => 1 - Math.pow(1 - x, 3),\n  EASE_OUT_BOUNCE: x => {\n    const n1 = 7.5625;\n    const d1 = 2.75;\n    if (x < 1 / d1) {\n      return n1 * x * x;\n    } else if (x < 2 / d1) {\n      return n1 * (x -= 1.5 / d1) * x + 0.75;\n    } else if (x < 2.5 / d1) {\n      return n1 * (x -= 2.25 / d1) * x + 0.9375;\n    } else {\n      return n1 * (x -= 2.625 / d1) * x + 0.984375;\n    }\n  }\n};\n\nvar _a;\nconst CAMERA_EVENTS = {\n  CHANGE: \"change\",\n  ANIMATION_END: \"animationEnd\"\n};\nconst OBJECT_3D_EVENTS = {\n  UPDATE: \"update\"\n};\nconst CONTROL_EVENTS = {\n  INPUT_START: \"inputStart\",\n  CHANGE: \"change\",\n  INPUT_END: \"inputEnd\",\n  ENABLE: \"enable\",\n  DISABLE: \"disable\",\n  STATIC_CLICK: \"staticClick\"\n};\nconst DEG_TO_RAD = Math.PI / 180;\nconst RAD_TO_DEG = 180 / Math.PI;\nconst DEFAULT_EASING = EASING.EASE_OUT_CUBIC;\nconst DEFAULT_ANIMATION_DURATION = 300;\nconst INFINITE_RANGE = {\n  min: -Infinity,\n  max: Infinity\n};\nconst DEFAULT_PITCH_RANGE = {\n  min: -90,\n  max: 90\n};\nconst DEFAULT_ZOOM_RANGE = {\n  min: 0.6,\n  max: 10\n};\nvar ROTATE;\n(function (ROTATE) {\n  ROTATE[ROTATE[\"ZERO\"] = 0] = \"ZERO\";\n  ROTATE[ROTATE[\"CW_90\"] = 1] = \"CW_90\";\n  ROTATE[ROTATE[\"CCW_90\"] = 2] = \"CCW_90\";\n  ROTATE[ROTATE[\"CW_180\"] = 3] = \"CW_180\";\n})(ROTATE || (ROTATE = {}));\n// Custom event name for video time change\nconst VIDEO_TIME_CHANGE_EVENT = \"view360videotimechange\";\nconst SVG_NAMESPACE = \"http://www.w3.org/2000/svg\";\nconst SESSION_VR = \"immersive-vr\";\nconst XR_REFERENCE_SPACE = \"local\";\nconst EPSILON = (_a = Number.EPSILON) !== null && _a !== void 0 ? _a : 2.220446049250313e-16;\n\n/*\r\n * Copyright (c) 2023-present NAVER Corp.\r\n * egjs projects are licensed under the MIT license\r\n */\nconst isString = val => typeof val === \"string\";\nconst isElement = val => !!val && val.nodeType === Node.ELEMENT_NODE;\nconst createElement = (className, tag = EL_DIV) => {\n  const el = document.createElement(tag);\n  el.classList.add(className);\n  return el;\n};\nconst getNullableElement = (el, parent) => {\n  let targetEl = null;\n  if (isString(el)) {\n    const parentEl = parent ? parent : document;\n    const queryResult = parentEl.querySelector(el);\n    if (!queryResult) {\n      return null;\n    }\n    targetEl = queryResult;\n  } else if (isElement(el)) {\n    targetEl = el;\n  }\n  return targetEl;\n};\nconst getElement = (el, parent) => {\n  const targetEl = getNullableElement(el, parent);\n  if (!targetEl) {\n    if (isString(el)) {\n      throw new View360Error(ERROR.MESSAGES.ELEMENT_NOT_FOUND(el), ERROR.CODES.ELEMENT_NOT_FOUND);\n    } else {\n      throw new View360Error(ERROR.MESSAGES.WRONG_TYPE(el, [\"HTMLElement\", \"string\"]), ERROR.CODES.WRONG_TYPE);\n    }\n  }\n  return targetEl;\n};\nconst findCanvas = (root, selector) => {\n  const canvas = root.querySelector(selector);\n  if (!canvas) {\n    throw new View360Error(ERROR.MESSAGES.CANVAS_NOT_FOUND, ERROR.CODES.CANVAS_NOT_FOUND);\n  }\n  return canvas;\n};\nconst range = end => {\n  if (!end || end <= 0) {\n    return [];\n  }\n  return Array.apply(0, Array(end)).map((undef, idx) => idx);\n};\nconst clamp = (x, min, max) => Math.max(Math.min(x, max), min);\n// Linear interpolation between a and b\nconst lerp = (a, b, t) => {\n  return a * (1 - t) + b * t;\n};\nconst circulate = (val, min, max) => {\n  const size = Math.abs(max - min);\n  if (val < min) {\n    const offset = (min - val) % size;\n    val = max - offset;\n  } else if (val > max) {\n    const offset = (val - max) % size;\n    val = min + offset;\n  }\n  return val;\n};\nconst findIndex = (array, checker) => {\n  for (let idx = 0; idx < array.length; idx++) {\n    if (checker(array[idx])) {\n      return idx;\n    }\n  }\n  return -1;\n};\nconst getObjectOption = val => typeof val === \"object\" ? val : {};\nconst toVerticalFov = (fovRadian, aspect) => {\n  return Math.atan(Math.tan(fovRadian * 0.5) / aspect) * 2;\n};\nconst reorderCube = (arr, order, defaultOrder = \"RLUDFB\") => {\n  return defaultOrder.split(\"\").map(face => order.indexOf(face)).map(index => arr[index]);\n};\nconst isFullscreen = () => {\n  if (!document) return false;\n  for (const key of FULLSCREEN_ELEMENT) {\n    if (document[key]) return true;\n  }\n  return false;\n};\nconst sensorCanBeEnabledIOS = () => {\n  return window.isSecureContext && !!DeviceMotionEvent && \"requestPermission\" in DeviceMotionEvent;\n};\nconst hfovToZoom = (baseFov, fov) => {\n  const renderingWidth = Math.tan(DEG_TO_RAD * baseFov * 0.5);\n  const zoomedWidth = Math.tan(DEG_TO_RAD * fov * 0.5);\n  return renderingWidth / zoomedWidth;\n};\nconst eulerToQuat = (out, yaw, pitch, roll) => {\n  quat.identity(out);\n  const pitchThreshold = 0.01;\n  const pitchClamped = clamp(pitch, -90 + pitchThreshold, 90 - pitchThreshold);\n  quat.rotateY(out, out, yaw * DEG_TO_RAD);\n  quat.rotateX(out, out, pitchClamped * DEG_TO_RAD);\n  quat.rotateZ(out, out, roll * DEG_TO_RAD);\n  return out;\n};\n/**\r\n * Extract euler angles from the quaternion, except roll(z-axis rotation)\r\n * @hidden\r\n */\nconst quatToEuler = quaternion => {\n  const x = quaternion[0];\n  const y = quaternion[1];\n  const z = quaternion[2];\n  const w = quaternion[3];\n  const x2 = x * x;\n  const y2 = y * y;\n  const z2 = z * z;\n  const w2 = w * w;\n  const unit = x2 + y2 + z2 + w2;\n  const test = x * w - y * z;\n  let pitch, yaw;\n  if (test > 0.499995 * unit) {\n    // singularity at the north pole\n    pitch = Math.PI / 2;\n    yaw = 2 * Math.atan2(y, x);\n  } else if (test < -0.499995 * unit) {\n    // singularity at the south pole\n    pitch = -Math.PI / 2;\n    yaw = -2 * Math.atan2(y, x);\n  } else {\n    const view = vec3.fromValues(0, 0, 1);\n    const up = vec3.fromValues(0, 1, 0);\n    vec3.transformQuat(view, view, quaternion);\n    vec3.transformQuat(up, up, quaternion);\n    const viewXZ = Math.sqrt(view[0] * view[0] + view[2] * view[2]);\n    pitch = Math.atan2(-view[1], viewXZ);\n    yaw = Math.atan2(view[0], view[2]);\n  }\n  return {\n    pitch: clamp(pitch * RAD_TO_DEG, -90, 90),\n    yaw: circulate(yaw * RAD_TO_DEG, 0, 360)\n  };\n};\n\n/*\r\n * Copyright (c) 2020 NAVER Corp.\r\n * egjs projects are licensed under the MIT license\r\n */\n/**\r\n * Interpolator between two values with duration\r\n * @ko 특정 시간동안 두 값을 보간해주는 보간기\r\n * @since 4.0.0\r\n */\nclass Motion {\n  /**\r\n   * Current interpolated value\r\n   * @ko 현재 보간된 값\r\n   * @since 4.0.0\r\n   */\n  get val() {\n    return this._val;\n  }\n  /**\r\n   * Start(from) value of interpolation\r\n   * @ko 보간 시작 값\r\n   * @since 4.0.0\r\n   */\n  get start() {\n    return this._start;\n  }\n  /**\r\n   * End(to) value of interpolation\r\n   * @ko 보간 끝 값\r\n   * @since 4.0.0\r\n   */\n  get end() {\n    return this._end;\n  }\n  /**\r\n   * Interpolation progress value (0 ~ 1)\r\n   * @ko 현재 보간 진행정도 (0 ~ 1)\r\n   * @since 4.0.0\r\n   */\n  get progress() {\n    return this._progress;\n  }\n  /**\r\n   * Whether the interpolation is in active state.\r\n   * @ko 보간 진행중인지 여부. `true`일 경우 보간이 진행중입니다.\r\n   * @since 4.0.0\r\n   */\n  get activated() {\n    return this._activated;\n  }\n  /**\r\n   * Duration of the interpolation\r\n   * @ko 보간할 시간\r\n   * @since 4.0.0\r\n   */\n  get duration() {\n    return this._duration;\n  }\n  set duration(val) {\n    this._duration = val;\n  }\n  /**\r\n   * Whether to loop interpolation on finish\r\n   * @ko 보간이 끝난 이후에 다시 시작할지 여부\r\n   * @since 4.0.0\r\n   */\n  get loop() {\n    return this._loop;\n  }\n  set loop(val) {\n    this._loop = val;\n  }\n  /**\r\n   * Range of the interpolation\r\n   * @ko 보간 범위\r\n   * @since 4.0.0\r\n   */\n  get range() {\n    return this._range;\n  }\n  /**\r\n   * Easing function of the interpolation\r\n   * @ko 보간에 사용되는 easing function\r\n   * @since 4.0.0\r\n   */\n  get easing() {\n    return this._easing;\n  }\n  set easing(val) {\n    this._easing = val;\n  }\n  /**\r\n   * Create new instance.\r\n   * @ko 새로운 인스턴스를 생성합니다.\r\n   * @param options Options {@ko 옵션들}\r\n   * @param options.duration Duration of the interpolation {@ko 보간할 시간}\r\n   * @param options.loop Whether to loop interpolation on finish {@ko 보간이 끝난 이후에 다시 시작할지 여부}\r\n   * @param options.range Range of the interpolation {@ko 보간 범위}\r\n   * @param options.loop Easing function of the interpolation {@ko 보간에 사용되는 easing function}\r\n   */\n  constructor({\n    duration = DEFAULT_ANIMATION_DURATION,\n    loop = false,\n    range = {\n      min: 0,\n      max: 1\n    },\n    easing = DEFAULT_EASING\n  } = {}) {\n    this._duration = duration;\n    this._loop = loop;\n    this._range = range;\n    this._easing = easing;\n    this._activated = false;\n    this.reset(0);\n  }\n  /**\r\n   * Update motion and progress it by given deltaTime\r\n   * @ko 주어진 deltaTime만큼 보간을 진행합니다.\r\n   * @param deltaTime - number of milisec to update motion {@ko 보간을 진행할 시간, 밀리초 단위}\r\n   * @returns Difference(delta) of the value from the last update. {@ko 지난 업데이트 이후의 값 변화량}\r\n   * @since 4.0.0\r\n   */\n  update(deltaTime) {\n    if (!this._activated) {\n      this._val = this._end;\n      return 0;\n    }\n    const start = this._start;\n    const end = this._end;\n    const duration = this._duration;\n    const prev = this._val;\n    const loop = this._loop;\n    const nextProgress = this._progress + deltaTime / duration;\n    this._progress = loop ? circulate(nextProgress, 0, 1) : clamp(nextProgress, 0, 1);\n    const easedProgress = this._easing(this._progress);\n    this._val = lerp(start, end, easedProgress);\n    if (!loop && this._progress >= 1) {\n      this._activated = false;\n    }\n    return this._val - prev;\n  }\n  /**\r\n   * Set `start`, `end` to the given value and set `progress` to 0.\r\n   * @ko 주어진 값으로 시작 지점, 끝 지점을 초기화하고 progress를 0으로 세팅합니다.\r\n   * @param defaultVal - Value to reset {@ko 초기화할 값}\r\n   * @since 4.0.0\r\n   */\n  reset(defaultVal) {\n    const range = this._range;\n    const val = clamp(defaultVal, range.min, range.max);\n    this._start = val;\n    this._end = val;\n    this._val = val;\n    this._progress = 0;\n    this._activated = false;\n  }\n  /**\r\n   * Add delta to start & end and current value.\r\n   * @ko 현재 & 끝 및 현재 값에 주어진 값을 더합니다.\r\n   * @param delta - Delta value to add {@ko 추가할 값}\r\n   */\n  add(delta) {\n    const range = this._range;\n    this._start = clamp(this._start + delta, range.min, range.max);\n    this._end = clamp(this._end + delta, range.min, range.max);\n    this._val = clamp(this._val + delta, range.min, range.max);\n  }\n  /**\r\n   * Set current value to start, and end to current value + delta, then reset progress to 0.\r\n   * @ko 현재 값을 시작 지점으로, 그에서 delta만큼 추가된 값을 끝점으로 하고 progress를 0으로 갱신합니다.\r\n   * @param delta - Delta value to add {@ko 추가할 값}\r\n   */\n  setNewEndByDelta(delta) {\n    const range = this._range;\n    this._start = this._val;\n    this._end = clamp(this._end + delta, range.min, range.max);\n    this._progress = 0;\n    this._activated = true;\n  }\n  /**\r\n   * Set new range of the interpolation.\r\n   * @ko 보간의 범위를 변경합니다.\r\n   * @param min - New minimum range {@ko 변경할 범위의 최소값}\r\n   * @param max - New maximum range {@ko 변경할 범위의 최대값}\r\n   */\n  setRange(min, max) {\n    this._start = clamp(this._start, min, max);\n    this._end = clamp(this._end, min, max);\n    this._range = {\n      min,\n      max\n    };\n  }\n}\n\n/*\r\n * Copyright (c) 2023-present NAVER Corp.\r\n * egjs projects are licensed under the MIT license\r\n */\n/**\r\n * Animation of the {@link Camera}\r\n * @internal\r\n * @ko {@link Camera}의 애니메이션\r\n * @since 4.0.0\r\n */\nclass CameraAnimation {\n  /**\r\n   * Duration of the animation\r\n   * @ko 애니메이션 재생시간\r\n   * @since 4.0.0\r\n   */\n  get duration() {\n    return this._motion.duration;\n  }\n  set duration(val) {\n    this._motion.duration = val;\n  }\n  /**\r\n   * Easing function of the animation\r\n   * @ko 애니메이션의 easing function\r\n   * @since 4.0.0\r\n   */\n  get easing() {\n    return this._motion.easing;\n  }\n  set easing(val) {\n    this._motion.easing = val;\n  }\n  /**\r\n   * Create new instance\r\n   * @ko 새로운 인스턴스를 생성합니다.\r\n   * @param camera - Camera to animate {@ko 애니메이션을 적용할 카메라}\r\n   * @param from - Start pose {@ko 애니메이션이 시작 시점의 카메라의 회전 및 줌}\r\n   * @param to - End pose {@ko 애니메이션이 끝났을 때 카메라의 회전 및 줌}\r\n   * @param options - Options {@ko 옵션들}\r\n   * @param options.duration - Animation duration {@ko 애니메이션 재생 시간}\r\n   * @param options.easing - Animation easing function {@ko 애니메이션 easing function}\r\n   */\n  constructor(camera, from, to, {\n    duration = DEFAULT_ANIMATION_DURATION,\n    easing = DEFAULT_EASING\n  } = {}) {\n    this._camera = camera;\n    this._motion = new Motion({\n      duration,\n      easing,\n      range: {\n        min: 0,\n        max: 1\n      }\n    });\n    this._from = from;\n    this._to = to;\n    this._finishPromise = new Promise(resolve => {\n      this._finish = resolve;\n    });\n    // Enable motion\n    this._motion.setNewEndByDelta(1);\n  }\n  /**\r\n   * Return a promise that resolved on animation end.\r\n   * @ko 애니메이션 재생이 끝났을 때 resolve되는 Promise를 반환합니다.\r\n   * @since 4.0.0\r\n   */\n  getFinishPromise() {\n    return this._finishPromise;\n  }\n  /**\r\n   * Update animation by given deltaTime.\r\n   * @ko 주어진 시간만큼 애니메이션을 업데이트합니다.\r\n   * @param deltaTime Number of milisec to update {@ko 업데이트할 시간, 밀리초 단위}\r\n   * @since 4.0.0\r\n   */\n  update(deltaTime) {\n    const camera = this._camera;\n    const from = this._from;\n    const to = this._to;\n    const motion = this._motion;\n    motion.update(deltaTime);\n    // Progress that easing is applied\n    const progress = motion.val;\n    const rotation = quat.create();\n    const zoom = lerp(from.zoom, to.zoom, progress);\n    quat.slerp(rotation, from.rotation, to.rotation, progress);\n    camera.rotate(rotation, zoom);\n    if (progress >= 1) {\n      this._finish();\n    }\n  }\n}\n\n/**\r\n * Camera for View360\r\n * @ko View360용 카메라 구현체\r\n * @version 4.0.0\r\n */\nclass Camera extends Component {\n  /**\r\n   * Camera's width / height ratio\r\n   * @ko 카메라의 가로 / 세로 비율\r\n   * @readonly\r\n   */\n  get aspect() {\n    return this._aspect;\n  }\n  /**\r\n   * Whether the camera's rotation changed from the last frame.\r\n   * @ko 마지막 프레임 이후로 카메라의 회전값이 변경되었는지 나타내는 플래그.\r\n   * @readonly\r\n   */\n  get changed() {\n    return this._changed;\n  }\n  /**\r\n   * @copy View360#yawRange\r\n   */\n  get yawRange() {\n    return this._initialYawRange;\n  }\n  set yawRange(val) {\n    this._initialYawRange = val;\n  }\n  /**\r\n   * @copy View360#pitchRange\r\n   */\n  get pitchRange() {\n    return this._initialPitchRange;\n  }\n  set pitchRange(val) {\n    this._initialPitchRange = val;\n  }\n  /**\r\n   * @copy View360#zoomRange\r\n   */\n  get zoomRange() {\n    return this._initialZoomRange;\n  }\n  set zoomRange(val) {\n    this._initialZoomRange = val;\n  }\n  /**\r\n   * Create new instance of Camera\r\n   * @param options - Camera options {@ko 카메라 옵션들}\r\n   */\n  constructor({\n    initialYaw,\n    initialPitch,\n    initialZoom,\n    yawRange,\n    pitchRange,\n    zoomRange,\n    fov\n  }) {\n    super();\n    this.yaw = initialYaw;\n    this.pitch = initialPitch;\n    this.zoom = initialZoom;\n    this.rollOffset = 0;\n    this.initialYaw = initialYaw;\n    this.initialPitch = initialPitch;\n    this.initialZoom = initialZoom;\n    this.position = vec3.create();\n    this.animation = null;\n    this._up = vec3.fromValues(0, 1, 0);\n    this._aspect = 1;\n    this._initialYawRange = yawRange;\n    this._initialPitchRange = pitchRange;\n    this._initialZoomRange = zoomRange;\n    this._yawRange = yawRange;\n    this._pitchRange = pitchRange;\n    this._zoomRange = zoomRange;\n    this.quaternion = quat.create();\n    this._updateQuaternion();\n    this.viewMatrix = mat4.create();\n    this.projectionMatrix = mat4.create();\n    this.fov = fov;\n    this._maxRenderHeight = -1;\n  }\n  /**\r\n   * Destroy instance and detach all event listeners\r\n   * @ko 인스턴스를 삭제하고 모든 이벤트 리스너를 삭제합니다.\r\n   * @since 4.0.0\r\n   */\n  destroy() {\n    this.off();\n  }\n  /**\r\n   * Refresh internal size value.\r\n   * @ko 내부 크기값을 갱신합니다.\r\n   * @param width - New width {@ko 변경된 너비값}\r\n   * @param height - New height {@ko 변경된 높이값}\r\n   * @since 4.0.0\r\n   */\n  resize(width, height) {\n    const prevAspect = this._aspect;\n    this._aspect = width / height;\n    if (this._aspect !== prevAspect) {\n      this.updateMatrix();\n    }\n  }\n  /**\r\n   * Change camera's rotation with euler values.\r\n   * @ko 카메라 회전을 오일러 각 방향으로 변경합니다.\r\n   * @param rotation - Rotation values {@ko 회전 값}\r\n   * @param rotation.yaw - yaw(y-axis rotation) to look at {@ko 바라볼 yaw(y축 회전) 값}\r\n   * @param rotation.pitch - pitch(x-axis rotation) to look at {@ko 바라볼 pitch(x축 회전) 값}\r\n   * @param rotation.zoom - zoom value to apply {@ko 적용할 카메라 줌 값}\r\n   * @since 4.0.0\r\n   */\n  lookAt({\n    yaw = this.yaw,\n    pitch = this.pitch,\n    zoom = this.zoom\n  }) {\n    const prevQuaternion = quat.clone(this.quaternion);\n    const prevZoom = this.zoom;\n    this.yaw = circulate(yaw, 0, 360);\n    this.pitch = clamp(pitch, -90, 90);\n    this.zoom = zoom;\n    this._updateQuaternion();\n    const zoomDiff = Math.abs(zoom - prevZoom);\n    if (!quat.equals(this.quaternion, prevQuaternion) || zoomDiff >= EPSILON * 10 // ignore small changes\n    ) {\n      this.updateMatrix();\n    }\n  }\n  /**\r\n   * Change camera's rotation with quaternion.\r\n   * @ko 카메라 회전을 Quaternion을 이용해서 변경합니다.\r\n   * @param rotation - Quaternion to apply {@ko 적용할 Quaternion}\r\n   * @param zoom - zoom value to apply {@ko 적용할 카메라 줌 값}\r\n   * @since 4.0.0\r\n   */\n  rotate(rotation, zoom = this.zoom) {\n    const normalized = quat.normalize(quat.create(), rotation);\n    const isSameRotation = quat.equals(this.quaternion, normalized);\n    quat.copy(this.quaternion, normalized);\n    const prevZoom = this.zoom;\n    const {\n      yaw,\n      pitch\n    } = quatToEuler(normalized);\n    this.yaw = yaw;\n    this.pitch = pitch;\n    this.zoom = zoom;\n    const zoomDiff = Math.abs(zoom - prevZoom);\n    if (!isSameRotation || zoomDiff >= EPSILON * 10) {\n      this.updateMatrix();\n    }\n  }\n  /**\r\n   * Change camera's rotation to given euler values by the given duration.\r\n   * @ko 카메라를 주어진 방향으로 주어진 시간동안 서서히 이동시킵니다.\r\n   * @param options - Animation parameters {@ko 애니메이션 패러미터}\r\n   * @param options.yaw - yaw(y-axis rotation) to look at {@ko 바라볼 yaw(y축 회전) 값}\r\n   * @param options.pitch - pitch(x-axis rotation) to look at {@ko 바라볼 pitch(x축 회전) 값}\r\n   * @param options.zoom - zoom value to apply {@ko 적용할 카메라 줌 값}\r\n   * @param options.duration - Duration of the animation {@ko 애니메이션 시간}\r\n   * @param options.easing - Easing function for the animation {@ko 애니메이션에 적용할 easing function}\r\n   */\n  animateTo({\n    yaw = this.yaw,\n    pitch = this.pitch,\n    zoom = this.zoom,\n    duration = 0,\n    easing = DEFAULT_EASING\n  } = {}) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this.yaw === yaw && this.pitch === pitch && this.zoom === zoom) return;\n      const from = {\n        rotation: quat.clone(this.quaternion),\n        zoom: this.zoom\n      };\n      const to = {\n        rotation: eulerToQuat(quat.create(), yaw, pitch, this.rollOffset),\n        zoom\n      };\n      const animation = new CameraAnimation(this, from, to, {\n        duration,\n        easing\n      });\n      const finishPromise = animation.getFinishPromise();\n      this.animation = animation;\n      finishPromise.then(() => {\n        this.animation = null;\n        this.trigger(CAMERA_EVENTS.ANIMATION_END, {\n          animation\n        });\n      });\n      return finishPromise;\n    });\n  }\n  /**\r\n   * @hidden\r\n   */\n  restrictYawRange(min, max) {\n    this._yawRange = {\n      min,\n      max\n    };\n  }\n  /**\r\n   * @hidden\r\n   */\n  restrictPitchRange(min, max) {\n    this._pitchRange = {\n      min,\n      max\n    };\n  }\n  /**\r\n   * @hidden\r\n   */\n  restrictZoomRange(min, max) {\n    this._zoomRange = {\n      min,\n      max\n    };\n  }\n  /**\r\n   * @hidden\r\n   */\n  restrictRenderHeight(height) {\n    this._maxRenderHeight = height;\n  }\n  /**\r\n   * @hidden\r\n   */\n  resetRange() {\n    this._yawRange = this._initialYawRange;\n    this._pitchRange = this._initialPitchRange;\n    this._zoomRange = this._initialZoomRange;\n    this._maxRenderHeight = -1;\n  }\n  /**\r\n   * Get actual yaw range by the given zoom value.\r\n   * @ko 주어진 zoom 값에 대한 실제 yaw 범위값을 반환합니다.\r\n   * @since 4.0.0\r\n   */\n  getYawRange(zoom) {\n    const yawLimit = this._yawRange;\n    const maxRenderHeight = this._maxRenderHeight;\n    if (!yawLimit) return INFINITE_RANGE;\n    const halfHFov = this.getHorizontalFov(zoom) * 0.5;\n    let minYaw = yawLimit.min;\n    let maxYaw = yawLimit.max;\n    if (maxRenderHeight > 0) {\n      const halfVFovRad = toVerticalFov(halfHFov * DEG_TO_RAD, this._aspect);\n      const h = maxRenderHeight * 0.5;\n      const t = Math.tan(halfVFovRad);\n      const d = Math.sqrt((1 + h * h) / (1 + t * t));\n      const theta = Math.atan(Math.tan(halfHFov * DEG_TO_RAD) * d) * RAD_TO_DEG;\n      minYaw = yawLimit.min + theta;\n      maxYaw = yawLimit.max - theta;\n    }\n    if (minYaw > maxYaw) {\n      minYaw = 0;\n      maxYaw = 0;\n    }\n    return {\n      min: minYaw,\n      max: maxYaw\n    };\n  }\n  /**\r\n   * Get actual pitch range by the given zoom value.\r\n   * @ko 주어진 zoom 값에 대한 실제 pitch 범위값을 반환합니다.\r\n   * @since 4.0.0\r\n   */\n  getPitchRange(zoom) {\n    const pitchLimit = this._pitchRange;\n    const maxRenderHeight = this._maxRenderHeight;\n    if (!pitchLimit) return DEFAULT_PITCH_RANGE;\n    let minPitch = pitchLimit.min;\n    let maxPitch = pitchLimit.max;\n    if (maxRenderHeight > 0) {\n      const halfVFov = this.getVerticalFov(zoom) * 0.5;\n      minPitch = pitchLimit.min + halfVFov;\n      maxPitch = pitchLimit.max - halfVFov;\n    }\n    if (minPitch > maxPitch) {\n      minPitch = 0;\n      maxPitch = 0;\n    }\n    return {\n      min: Math.max(minPitch, -90),\n      max: Math.min(maxPitch, 90)\n    };\n  }\n  /**\r\n   * Get actual zoom range in fov degrees.\r\n   * @ko 실제 줌 범위를 fov각의 범위로 반환합니다.\r\n   * @since 4.0.0\r\n   */\n  getZoomRange() {\n    var _a;\n    const limit = (_a = this._zoomRange) !== null && _a !== void 0 ? _a : DEFAULT_ZOOM_RANGE;\n    // max (zoom in) -> minimum fov\n    const minFov = this.getHorizontalFov(limit.max);\n    const maxFov = this.getHorizontalFov(limit.min);\n    const currentFov = this.getHorizontalFov(this.zoom);\n    return {\n      min: Math.max(minFov, 1),\n      max: Math.min(maxFov, 180),\n      current: currentFov\n    };\n  }\n  /**\r\n   * Return horizontal fov value when the given zoom is applied. (in degrees, °)\r\n   * @ko 주어진 zoom 값이 적용되었을 때의 수평 fov값을 반환합니다. (도 단위, °)\r\n   * @returns Zoomed horizontal FOV {@ko 줌이 적용된 수평 fov값}\r\n   * @since 4.0.0\r\n   */\n  getHorizontalFov(zoom = this.zoom) {\n    return this._getZoomedHorizontalFov(zoom) * RAD_TO_DEG;\n  }\n  /**\r\n   * Return vertical fov value when the given zoom is applied. (in degrees, °)\r\n   * @ko 주어진 zoom 값이 적용되었을 때의 수직 fov값을 반환합니다. (도 단위, °)\r\n   * @returns Zoomed vertical FOV {@ko 줌이 적용된 수직 fov값}\r\n   * @since 4.0.0\r\n   */\n  getVerticalFov(zoom = this.zoom) {\n    const aspect = this._aspect;\n    const hFov = this._getZoomedHorizontalFov(zoom); // In radians\n    const vFov = toVerticalFov(hFov, aspect);\n    return vFov * RAD_TO_DEG;\n  }\n  /**\r\n   * Calculate zoom value for the given fov.\r\n   * @ko 주어진 fov값을 zoom값으로 변환합니다.\r\n   * @param fov horizontal fov (in degrees, °) {@ko 수평 fov 값 (도 단위, °)}\r\n   * @since 4.0.0\r\n   */\n  fovToZoom(fov) {\n    const baseFov = this.fov;\n    const renderingWidth = Math.tan(DEG_TO_RAD * baseFov * 0.5);\n    const zoomedWidth = Math.tan(DEG_TO_RAD * fov * 0.5);\n    return renderingWidth / zoomedWidth;\n  }\n  /**\r\n   * Update inner matrixes.\r\n   * @ko 내부 행렬들을 업데이트합니다.\r\n   * @internal\r\n   * @since 4.0.0\r\n   */\n  updateMatrix() {\n    const up = this._up;\n    const aspect = this._aspect;\n    const viewMatrix = this.viewMatrix;\n    const projMatrix = this.projectionMatrix;\n    const position = this.position;\n    const rotation = this.quaternion;\n    const upDir = vec3.create();\n    const viewDir = vec3.fromValues(0, 0, -1);\n    vec3.transformQuat(viewDir, viewDir, rotation);\n    vec3.transformQuat(upDir, up, rotation);\n    const hFov = this._getZoomedHorizontalFov(); // In radians\n    const vFov = toVerticalFov(hFov, aspect);\n    mat4.lookAt(viewMatrix, position, viewDir, upDir);\n    mat4.perspective(projMatrix, vFov, aspect, 0.1, 100);\n    this._changed = true;\n  }\n  /**\r\n   * @hidden\r\n   */\n  onFrameRender() {\n    this._changed = false;\n  }\n  _updateQuaternion() {\n    eulerToQuat(this.quaternion, this.yaw, this.pitch, this.rollOffset);\n  }\n  /**\r\n   * @param zoom Current zoom value\r\n   * @returns horizontal fov including zoom, in radian\r\n   */\n  _getZoomedHorizontalFov(zoom = this.zoom) {\n    return 2 * Math.atan(Math.tan(DEG_TO_RAD * this.fov * 0.5) / zoom);\n  }\n}\n\n/*\r\n * Copyright (c) 2023-present NAVER Corp.\r\n * egjs projects are licensed under the MIT license\r\n */\nclass MouseInput extends Component {\n  constructor() {\n    super();\n    this._onMouseDown = evt => {\n      const el = this._el;\n      if (!el || evt.button !== MOUSE_BUTTON.LEFT) return;\n      evt.preventDefault();\n      if (el.focus) {\n        el.focus();\n      } else {\n        window.focus();\n      }\n      this._prevPos[0] = evt.clientX;\n      this._prevPos[1] = evt.clientY;\n      window.addEventListener(EVENTS$1.MOUSE_MOVE, this._onMouseMove, false);\n      window.addEventListener(EVENTS$1.MOUSE_UP, this._onMouseUp, false);\n      this.trigger(CONTROL_EVENTS.INPUT_START, {\n        srcEvent: evt,\n        isTouch: false,\n        isKeyboard: false\n      });\n    };\n    this._onMouseMove = evt => {\n      evt.preventDefault();\n      const x = evt.clientX;\n      const y = evt.clientY;\n      const prevPos = this._prevPos;\n      const deltaX = x - prevPos[0];\n      const deltaY = y - prevPos[1];\n      this.trigger(CONTROL_EVENTS.CHANGE, {\n        delta: {\n          x: deltaX,\n          y: deltaY\n        },\n        isTouch: false,\n        isKeyboard: false\n      });\n      prevPos[0] = x;\n      prevPos[1] = y;\n    };\n    this._onMouseUp = () => {\n      this._prevPos[0] = 0;\n      this._prevPos[1] = 0;\n      window.removeEventListener(EVENTS$1.MOUSE_MOVE, this._onMouseMove, false);\n      window.removeEventListener(EVENTS$1.MOUSE_UP, this._onMouseUp, false);\n      this.trigger(CONTROL_EVENTS.INPUT_END, {\n        isTouch: false,\n        isKeyboard: false,\n        scrolling: false\n      });\n    };\n    this._el = null;\n    this._prevPos = [0, 0];\n  }\n  enable(element) {\n    if (this._el) return;\n    element.addEventListener(EVENTS$1.MOUSE_DOWN, this._onMouseDown);\n    this._el = element;\n  }\n  disable() {\n    const element = this._el;\n    if (!element) return;\n    element.removeEventListener(EVENTS$1.MOUSE_DOWN, this._onMouseDown);\n    window.removeEventListener(EVENTS$1.MOUSE_MOVE, this._onMouseMove, false);\n    window.removeEventListener(EVENTS$1.MOUSE_UP, this._onMouseUp, false);\n    this._el = null;\n  }\n}\n\n/*\r\n * Copyright (c) 2023-present NAVER Corp.\r\n * egjs projects are licensed under the MIT license\r\n */\nclass TouchInput extends Component {\n  get scrollable() {\n    return this._scrollable;\n  }\n  set scrollable(val) {\n    this._scrollable = val;\n  }\n  constructor() {\n    super();\n    this._onTouchStart = evt => {\n      if (evt.touches.length > 1 || this._scrolling) return;\n      const touch = evt.touches[0];\n      this._isFirstTouch = true;\n      this._prevPos[0] = touch.clientX;\n      this._prevPos[1] = touch.clientY;\n      this.trigger(CONTROL_EVENTS.INPUT_START, {\n        srcEvent: evt,\n        isTouch: true,\n        isKeyboard: false\n      });\n    };\n    this._onTouchMove = evt => {\n      // Only the one finger motion should be considered\n      if (evt.touches.length > 1 || this._scrolling) return;\n      const touch = evt.touches[0];\n      const scrollable = this._scrollable;\n      const prevPos = this._prevPos;\n      const x = touch.clientX;\n      const y = touch.clientY;\n      const deltaX = x - prevPos[0];\n      const deltaY = y - prevPos[1];\n      if (this._isFirstTouch) {\n        if (scrollable && !isFullscreen()) {\n          if (Math.abs(deltaY) > Math.abs(deltaX)) {\n            // Assume Scrolling\n            this._scrolling = true;\n            return;\n          }\n        }\n        this._isFirstTouch = false;\n      }\n      if (evt.cancelable !== false) {\n        evt.preventDefault();\n      }\n      this.trigger(CONTROL_EVENTS.CHANGE, {\n        delta: {\n          x: deltaX,\n          y: deltaY\n        },\n        isTouch: true,\n        isKeyboard: false\n      });\n      prevPos[0] = x;\n      prevPos[1] = y;\n    };\n    this._onTouchEnd = evt => {\n      if (evt.touches.length !== 0) return;\n      const touch = evt.touches[0];\n      const prevPos = this._prevPos;\n      if (touch) {\n        prevPos[0] = touch.clientX;\n        prevPos[1] = touch.clientY;\n      } else {\n        prevPos[0] = 0;\n        prevPos[1] = 0;\n        this.trigger(CONTROL_EVENTS.INPUT_END, {\n          isTouch: true,\n          isKeyboard: false,\n          scrolling: this._scrolling\n        });\n      }\n      if (evt.cancelable !== false) {\n        evt.preventDefault();\n      }\n      this._scrolling = false;\n    };\n    this._el = null;\n    this._prevPos = [0, 0];\n    this._isFirstTouch = false;\n    this._scrolling = false;\n    this._scrollable = false;\n  }\n  enable(element) {\n    if (this._el) return;\n    element.addEventListener(EVENTS$1.TOUCH_START, this._onTouchStart, {\n      passive: false\n    });\n    element.addEventListener(EVENTS$1.TOUCH_MOVE, this._onTouchMove, {\n      passive: false\n    });\n    element.addEventListener(EVENTS$1.TOUCH_END, this._onTouchEnd);\n    this._el = element;\n  }\n  disable() {\n    const element = this._el;\n    if (!element) return;\n    element.removeEventListener(EVENTS$1.TOUCH_START, this._onTouchStart);\n    element.removeEventListener(EVENTS$1.TOUCH_MOVE, this._onTouchMove);\n    element.removeEventListener(EVENTS$1.TOUCH_END, this._onTouchEnd);\n    this._el = null;\n  }\n}\n\n/*\r\n * Copyright (c) 2023-present NAVER Corp.\r\n * egjs projects are licensed under the MIT license\r\n */\nclass KeyboardInput extends Component {\n  get active() {\n    const pressed = this._pressed;\n    return pressed.LEFT || pressed.UP || pressed.RIGHT || pressed.DOWN;\n  }\n  constructor() {\n    super();\n    this._onKeyDown = evt => {\n      // Ignore all other keypress except main arrow keys\n      if (evt.location !== KeyboardEvent.DOM_KEY_LOCATION_STANDARD) return;\n      this._updateKeyPress(evt, true);\n      const pressedCount = this._getPressedKeyCount();\n      if (pressedCount <= 0) return;\n      evt.preventDefault();\n      if (pressedCount === 1 && !evt.repeat) {\n        // On first keydown\n        this.trigger(CONTROL_EVENTS.INPUT_START, {\n          srcEvent: evt,\n          isTouch: false,\n          isKeyboard: true\n        });\n      }\n    };\n    this._onKeyUp = evt => {\n      // Ignore all other keypress except main arrow keys\n      if (evt.location !== KeyboardEvent.DOM_KEY_LOCATION_STANDARD) return;\n      this._updateKeyPress(evt, false);\n      const pressedCount = this._getPressedKeyCount();\n      if (pressedCount > 0) return;\n      this.trigger(CONTROL_EVENTS.INPUT_END, {\n        isTouch: false,\n        isKeyboard: true,\n        scrolling: false\n      });\n    };\n    this._el = null;\n    this._clearPressedKeys();\n  }\n  enable(element) {\n    if (this._el) return;\n    element.addEventListener(EVENTS$1.KEY_DOWN, this._onKeyDown);\n    element.addEventListener(EVENTS$1.KEY_UP, this._onKeyUp);\n    this._el = element;\n    this._clearPressedKeys();\n  }\n  disable() {\n    const element = this._el;\n    if (!element) return;\n    element.removeEventListener(EVENTS$1.KEY_DOWN, this._onKeyDown);\n    element.removeEventListener(EVENTS$1.KEY_UP, this._onKeyUp);\n    this._el = null;\n    this._clearPressedKeys();\n  }\n  update() {\n    const delta = this._getDeltaByPressedKeys();\n    if (delta.x !== 0 || delta.y !== 0) {\n      this.trigger(CONTROL_EVENTS.CHANGE, {\n        delta,\n        isTouch: false,\n        isKeyboard: true\n      });\n    }\n  }\n  _clearPressedKeys() {\n    this._pressed = KEY_DIRECTION.reduce((obj, keyName) => {\n      return Object.assign(Object.assign({}, obj), {\n        [keyName]: false\n      });\n    }, {});\n  }\n  _updateKeyPress(event, isEnable) {\n    const pressed = this._pressed;\n    const keyToUpdate = event.keyCode != null ? DIRECTION_KEY_CODE[event.keyCode] : DIRECTION_KEY_NAME[event.key];\n    if (!keyToUpdate) return;\n    pressed[keyToUpdate] = isEnable;\n  }\n  _getPressedKeyCount() {\n    return KEY_DIRECTION.filter(key => this._pressed[key]).length;\n  }\n  _getDeltaByPressedKeys() {\n    const pressed = this._pressed;\n    let x = 0;\n    let y = 0;\n    if (pressed.LEFT) {\n      x += 1;\n    }\n    if (pressed.RIGHT) {\n      x -= 1;\n    }\n    if (pressed.UP) {\n      y += 1;\n    }\n    if (pressed.DOWN) {\n      y -= 1;\n    }\n    return {\n      x,\n      y\n    };\n  }\n}\n\n/*\r\n * Copyright (c) 2023-present NAVER Corp.\r\n * egjs projects are licensed under the MIT license\r\n */\n/**\r\n * Camera's rotation control\r\n * @ko 카메라의 회전을 담당하는 컨트롤\r\n * @since 4.0.0\r\n */\nclass RotateControl extends Component {\n  /**\r\n   * @copy CameraControl#enabled\r\n   */\n  get enabled() {\n    return this._enabled;\n  }\n  /**\r\n   * @hidden\r\n   */\n  get enableBlocked() {\n    return this._enableBlocked;\n  }\n  /**\r\n   * @copy CameraControl#animating\r\n   */\n  get animating() {\n    return this._keyboardInput.active || this._xMotion.activated || this._yMotion.activated;\n  }\n  /**\r\n   * Current yaw value\r\n   * @ko 현재 yaw 값\r\n   * @readonly\r\n   * @since 4.0.0\r\n   */\n  get yaw() {\n    return this._xMotion;\n  }\n  /**\r\n   * Current pitch value\r\n   * @ko 현재 pitch 값\r\n   * @readonly\r\n   * @since 4.0.0\r\n   */\n  get pitch() {\n    return this._yMotion;\n  }\n  /**\r\n   * @copy View360#scrollable\r\n   */\n  get scrollable() {\n    return this._touchInput.scrollable;\n  }\n  set scrollable(val) {\n    this._touchInput.scrollable = val;\n  }\n  /**\r\n   * Scale factor for mouse/touch rotation\r\n   * @ko 마우스/터치를 통한 회전 배율\r\n   * @default [1, 1]\r\n   * @since 4.0.0\r\n   */\n  get pointerScale() {\n    return this._pointerScale;\n  }\n  set pointerScale(val) {\n    this._pointerScale = val;\n  }\n  /**\r\n   * Scale factor for keyboard rotation\r\n   * @ko 키보드를 통한 회전 배율\r\n   * @default [1, 1]\r\n   * @since 4.0.0\r\n   */\n  get keyboardScale() {\n    return this._keyboardScale;\n  }\n  set keyboardScale(val) {\n    this._keyboardScale = val;\n  }\n  /**\r\n   * Duration of the input animation (ms)\r\n   * @ko 회전 애니메이션의 시간 (ms)\r\n   * @default 300\r\n   */\n  get duration() {\n    return this._duration;\n  }\n  set duration(val) {\n    this._duration = val;\n    this._xMotion.duration = val;\n    this._yMotion.duration = val;\n  }\n  /**\r\n   * Easing function of the animation\r\n   * @ko 회전 애니메이션에 적용할 easing 함수\r\n   * @default EASING.EASE_OUT_CUBIC\r\n   * @see EASING\r\n   */\n  get easing() {\n    return this._easing;\n  }\n  set easing(val) {\n    this._easing = val;\n    this._xMotion.easing = val;\n    this._yMotion.easing = val;\n  }\n  /**\r\n   * Disable X-axis(pitch) rotation.\r\n   * @ko x축 회전(pitch)을 비활성화합니다.\r\n   * @default false\r\n   */\n  get disablePitch() {\n    return this._disablePitch;\n  }\n  set disablePitch(val) {\n    this._disablePitch = val;\n  }\n  /**\r\n   * Disable Y-axis(yaw) rotation.\r\n   * @ko y축 회전(yaw)을 비활성화합니다.\r\n   * @default false\r\n   */\n  get disableYaw() {\n    return this._disableYaw;\n  }\n  set disableYaw(val) {\n    this._disableYaw = val;\n  }\n  /**\r\n   * Disable rotation by keyboard.\r\n   * @ko 키보드를 이용한 회전을 비활성화합니다.\r\n   * @default false\r\n   */\n  get disableKeyboard() {\n    return this._disableKeyboard;\n  }\n  set disableKeyboard(val) {\n    this._disableKeyboard = val;\n  }\n  /**\r\n   * Create new RotateControl instance\r\n   * @ko RotateControl의 인스턴스를 생성합니다.\r\n   * @param controlEl - Element to attach handlers {@ko 입력을 받을 엘리먼트}\r\n   * @param enableBlocked - Whether to disable control on init {@ko 초기화 과정에서 컨트롤 활성화 여부}\r\n   * @param options - Options for control {@ko 컨트롤 옵션들}\r\n   */\n  constructor(controlEl, enableBlocked, {\n    duration = DEFAULT_ANIMATION_DURATION,\n    easing = DEFAULT_EASING,\n    pointerScale = [1, 1],\n    keyboardScale = [1, 1],\n    disablePitch = false,\n    disableYaw = false,\n    disableKeyboard = false\n  } = {}) {\n    super();\n    this._onInputStart = evt => {\n      this._changedWhileDragging = false;\n      this.trigger(CONTROL_EVENTS.INPUT_START, Object.assign(Object.assign({}, evt), {\n        inputType: \"rotate\"\n      }));\n    };\n    this._onChange = evt => {\n      const delta = evt.delta;\n      const invZoomScale = 1 / this._zoomScale; // Reduce speed on zoom\n      const screenScale = this._screenScale;\n      const keyboardScale = this._keyboardScale;\n      const pointerScale = this._pointerScale;\n      let scale;\n      if (evt.isKeyboard) {\n        scale = [keyboardScale[0] * invZoomScale, keyboardScale[1] * invZoomScale];\n      } else {\n        scale = [pointerScale[0] * screenScale[0] * invZoomScale, pointerScale[1] * screenScale[1] * invZoomScale];\n      }\n      const scaledX = delta.x * scale[0];\n      const scaledY = delta.y * scale[1];\n      this._xMotion.setNewEndByDelta(scaledX);\n      this._yMotion.setNewEndByDelta(scaledY);\n      this._changedWhileDragging = true;\n    };\n    this._onInputEnd = evt => {\n      this.trigger(CONTROL_EVENTS.INPUT_END, Object.assign(Object.assign({}, evt), {\n        inputType: \"rotate\"\n      }));\n      if (!this._changedWhileDragging && !evt.isKeyboard && !evt.scrolling) {\n        this.trigger(CONTROL_EVENTS.STATIC_CLICK, {\n          isTouch: evt.isTouch\n        });\n      }\n      this._changedWhileDragging = false;\n    };\n    this._controlEl = controlEl;\n    this._pointerScale = pointerScale;\n    this._keyboardScale = keyboardScale;\n    this._duration = duration;\n    this._easing = easing;\n    this._disablePitch = disablePitch;\n    this._disableYaw = disableYaw;\n    this._disableKeyboard = disableKeyboard;\n    this._enableBlocked = enableBlocked;\n    this._mouseInput = new MouseInput();\n    this._touchInput = new TouchInput();\n    this._keyboardInput = new KeyboardInput();\n    this._xMotion = new Motion({\n      duration,\n      range: INFINITE_RANGE,\n      easing\n    });\n    this._yMotion = new Motion({\n      duration,\n      range: DEFAULT_PITCH_RANGE,\n      easing\n    });\n    this._screenScale = [1, 1];\n    this._zoomScale = 1;\n    this._enabled = false;\n    this._changedWhileDragging = false;\n    this._bindInputs();\n  }\n  destroy() {\n    this.disable();\n    this._mouseInput.off();\n    this._touchInput.off();\n    this._keyboardInput.off();\n    this.off();\n    this._changedWhileDragging = false;\n  }\n  /**\r\n   * @hidden\r\n   */\n  update(delta) {\n    if (!this._enabled) return;\n    const xMotion = this._xMotion;\n    const yMotion = this._yMotion;\n    const keyboardInput = this._keyboardInput;\n    if (!this._disableKeyboard) {\n      keyboardInput.update();\n    }\n    if (!this._disablePitch) {\n      yMotion.update(delta);\n    }\n    if (!this._disableYaw) {\n      xMotion.update(delta);\n    }\n  }\n  /**\r\n   * @hidden\r\n   */\n  updateRange(camera, zoom) {\n    const yawRange = camera.getYawRange(zoom);\n    const pitchRange = camera.getPitchRange(zoom);\n    this._xMotion.setRange(yawRange.min, yawRange.max);\n    this._yMotion.setRange(pitchRange.min, pitchRange.max);\n  }\n  /**\r\n   * @hidden\r\n   */\n  setZoomScale(val) {\n    this._zoomScale = val;\n  }\n  /**\r\n   * Resize control to match target size.\r\n   * @ko 컨트롤의 내부 크기를 갱신합니다.\r\n   * @param hfov - Camera horizontal fov in degrees {@ko 카메라의 수평방향 fov값 (도 단위)}\r\n   * @param aspect - Camera aspect {@ko 카메라 가로/세로 비율}\r\n   * @param width - New width {@ko 갱신된 너비}\r\n   * @param height - New height {@ko 갱신된 높이}\r\n   */\n  resize(hfov, aspect, width, height) {\n    const vfov = toVerticalFov(hfov * DEG_TO_RAD, aspect) * RAD_TO_DEG;\n    this._screenScale[0] = hfov / width;\n    this._screenScale[1] = vfov / height;\n  }\n  enable() {\n    if (this._enabled) return;\n    const element = this._controlEl;\n    this._mouseInput.enable(element);\n    this._touchInput.enable(element);\n    this._keyboardInput.enable(element);\n    this._enabled = true;\n    this._enableBlocked = false;\n    this.trigger(CONTROL_EVENTS.ENABLE, {\n      control: this,\n      updateCursor: true\n    });\n  }\n  disable() {\n    if (!this._enabled) return;\n    this._mouseInput.disable();\n    this._touchInput.disable();\n    this._keyboardInput.disable();\n    this._enabled = false;\n    this.trigger(CONTROL_EVENTS.DISABLE, {\n      updateCursor: true\n    });\n  }\n  sync(camera) {\n    this.updateRange(camera, camera.zoom);\n    this._xMotion.reset(camera.yaw);\n    this._yMotion.reset(camera.pitch);\n  }\n  _bindInputs() {\n    const mouseInput = this._mouseInput;\n    const touchInput = this._touchInput;\n    const keyboardInput = this._keyboardInput;\n    mouseInput.on(CONTROL_EVENTS.INPUT_START, this._onInputStart);\n    mouseInput.on(CONTROL_EVENTS.CHANGE, this._onChange);\n    mouseInput.on(CONTROL_EVENTS.INPUT_END, this._onInputEnd);\n    touchInput.on(CONTROL_EVENTS.INPUT_START, this._onInputStart);\n    touchInput.on(CONTROL_EVENTS.CHANGE, this._onChange);\n    touchInput.on(CONTROL_EVENTS.INPUT_END, this._onInputEnd);\n    keyboardInput.on(CONTROL_EVENTS.INPUT_START, this._onInputStart);\n    keyboardInput.on(CONTROL_EVENTS.CHANGE, this._onChange);\n    keyboardInput.on(CONTROL_EVENTS.INPUT_END, this._onInputEnd);\n  }\n}\n\n/*\r\n * Copyright (c) 2023-present NAVER Corp.\r\n * egjs projects are licensed under the MIT license\r\n */\nclass WheelInput extends Component {\n  get scrollable() {\n    return this._scrollable;\n  }\n  set scrollable(val) {\n    this._scrollable = val;\n  }\n  constructor() {\n    super();\n    this._onWheel = evt => {\n      const scrollable = this._scrollable;\n      if (evt.deltaY === 0 || scrollable) return;\n      evt.preventDefault();\n      evt.stopPropagation();\n      if (this._inputTimer < 0) {\n        this.trigger(CONTROL_EVENTS.INPUT_START, {\n          srcEvent: evt,\n          isTouch: false,\n          isKeyboard: false\n        });\n      } else {\n        this._clearTimer();\n      }\n      const delta = this._baseScale * evt.deltaY;\n      this.trigger(CONTROL_EVENTS.CHANGE, {\n        delta,\n        isTouch: false,\n        isKeyboard: false\n      });\n      this._inputTimer = window.setTimeout(() => {\n        this.trigger(CONTROL_EVENTS.INPUT_END, {\n          isTouch: false,\n          isKeyboard: false,\n          scrolling: false\n        });\n        this._inputTimer = -1;\n      }, DEFAULT_ANIMATION_DURATION);\n    };\n    this._el = null;\n    this._baseScale = 0.04;\n    this._scrollable = false;\n    this._inputTimer = -1;\n  }\n  enable(element) {\n    if (this._el) return;\n    element.addEventListener(EVENTS$1.WHEEL, this._onWheel, {\n      passive: false,\n      capture: false\n    });\n    this._el = element;\n    this._clearTimer();\n  }\n  disable() {\n    const element = this._el;\n    if (!element) return;\n    element.removeEventListener(EVENTS$1.WHEEL, this._onWheel, false);\n    this._el = null;\n    this._clearTimer();\n  }\n  _clearTimer() {\n    window.clearTimeout(this._inputTimer);\n    this._inputTimer = -1;\n  }\n}\n\n/*\r\n * Copyright (c) 2023-present NAVER Corp.\r\n * egjs projects are licensed under the MIT license\r\n */\nclass PinchInput extends Component {\n  constructor() {\n    super();\n    this._onTouchMove = evt => {\n      const touches = evt.touches;\n      if (touches.length !== 2) return;\n      if (!evt.cancelable) return;\n      evt.preventDefault();\n      evt.stopPropagation();\n      const prevDistance = this._prevDistance;\n      const diff = [touches[0].pageX - touches[1].pageX, touches[0].pageY - touches[1].pageY];\n      const distance = Math.sqrt(diff[0] * diff[0] + diff[1] * diff[1]) * this._baseScale;\n      const delta = this._isFirstTouch ? 0 : distance - prevDistance;\n      if (this._isFirstTouch) {\n        this.trigger(CONTROL_EVENTS.INPUT_START, {\n          srcEvent: evt,\n          isTouch: true,\n          isKeyboard: false\n        });\n      }\n      this._prevDistance = distance;\n      this._isFirstTouch = false;\n      this.trigger(CONTROL_EVENTS.CHANGE, {\n        delta,\n        isTouch: true,\n        isKeyboard: false\n      });\n    };\n    this._onTouchEnd = evt => {\n      if (evt.touches.length !== 0) return;\n      if (!this._isFirstTouch) {\n        this.trigger(CONTROL_EVENTS.INPUT_END, {\n          isTouch: true,\n          isKeyboard: false,\n          scrolling: false\n        });\n      }\n      this._prevDistance = -1;\n      this._isFirstTouch = true;\n    };\n    this._el = null;\n    this._baseScale = -0.2;\n    this._prevDistance = -1;\n    this._isFirstTouch = true;\n  }\n  enable(element) {\n    if (this._el) return;\n    element.addEventListener(EVENTS$1.TOUCH_MOVE, this._onTouchMove, {\n      passive: false,\n      capture: false\n    });\n    element.addEventListener(EVENTS$1.TOUCH_END, this._onTouchEnd);\n    this._el = element;\n    this._prevDistance = -1;\n    this._isFirstTouch = true;\n  }\n  disable() {\n    const element = this._el;\n    if (!element) return;\n    element.removeEventListener(EVENTS$1.TOUCH_MOVE, this._onTouchMove, false);\n    element.removeEventListener(EVENTS$1.TOUCH_END, this._onTouchEnd);\n    this._el = null;\n  }\n}\n\n/*\r\n* Copyright (c) 2023-present NAVER Corp.\r\n* egjs projects are licensed under the MIT license\r\n*/\n/**\r\n * Camera's zoom control\r\n * @ko 카메라의 줌 값을 담당하는 컨트롤\r\n * @since 4.0.0\r\n */\nclass ZoomControl extends Component {\n  /**\r\n   * @copy CameraControl#enabled\r\n   */\n  get enabled() {\n    return this._enabled;\n  }\n  /**\r\n   * @hidden\r\n   */\n  get enableBlocked() {\n    return this._enableBlocked;\n  }\n  /**\r\n   * @copy CameraControl#animating\r\n   */\n  get animating() {\n    return this._motion.activated;\n  }\n  /**\r\n   * Current zoom value\r\n   * @ko 현재 줌 값\r\n   * @since 4.0.0\r\n   * @readonly\r\n   */\n  get zoom() {\n    return this._motion.val;\n  }\n  /**\r\n   * @copy View360#wheelScrollable\r\n   */\n  get scrollable() {\n    return this._wheelInput.scrollable;\n  }\n  set scrollable(val) {\n    this._wheelInput.scrollable = val;\n  }\n  /**\r\n   * @hidden\r\n   */\n  get range() {\n    return this._motion.range;\n  }\n  /**\r\n   * Scale factor of the zoom\r\n   * @ko 입력에 의한 줌 배율\r\n   * @default 1\r\n   * @since 4.0.0\r\n   */\n  get scale() {\n    return this._scale;\n  }\n  set scale(val) {\n    this._scale = val;\n  }\n  /**\r\n   * Duration of the input animation (ms)\r\n   * @ko 회전 애니메이션의 시간 (ms)\r\n   * @default 300\r\n   * @since 4.0.0\r\n   */\n  get duration() {\n    return this._motion.duration;\n  }\n  /**\r\n   * Easing function of the animation\r\n   * @ko 회전 애니메이션에 적용할 easing 함수\r\n   * @default EASING.EASE_OUT_CUBIC\r\n   * @see EASING\r\n   * @since 4.0.0\r\n   */\n  get easing() {\n    return this._motion.easing;\n  }\n  /**\r\n   * Create new ZoomControl instance\r\n   * @ko ZoomControl의 인스턴스를 생성합니다.\r\n   * @param controlEl - Element to attach handlers {@ko 입력을 받을 엘리먼트}\r\n   * @param enableBlocked - Whether to disable control on init {@ko 초기화 과정에서 컨트롤 활성화 여부}\r\n   * @param options - Options for control {@ko 컨트롤 옵션들}\r\n   */\n  constructor(controlEl, enableBlocked, {\n    scale = 1,\n    duration = DEFAULT_ANIMATION_DURATION,\n    easing = DEFAULT_EASING\n  } = {}) {\n    super();\n    this._onInputStart = evt => {\n      this.trigger(CONTROL_EVENTS.INPUT_START, Object.assign(Object.assign({}, evt), {\n        inputType: \"zoom\"\n      }));\n    };\n    this._onChange = ({\n      delta\n    }) => {\n      const scale = this._scale;\n      const scaledDelta = delta * scale;\n      this._motion.setNewEndByDelta(scaledDelta);\n    };\n    this._onInputEnd = evt => {\n      this.trigger(CONTROL_EVENTS.INPUT_END, Object.assign(Object.assign({}, evt), {\n        inputType: \"zoom\"\n      }));\n    };\n    this._scale = scale;\n    this._controlEl = controlEl;\n    this._enableBlocked = enableBlocked;\n    this._wheelInput = new WheelInput();\n    this._pinchInput = new PinchInput();\n    this._motion = new Motion({\n      duration,\n      easing,\n      range: INFINITE_RANGE\n    });\n    this._enabled = false;\n    this._bindInputs();\n  }\n  destroy() {\n    this.disable();\n    this._wheelInput.off();\n    this._pinchInput.off();\n    this.off();\n  }\n  /**\r\n   * @hidden\r\n   */\n  update(delta) {\n    if (!this._enabled) return;\n    const motion = this._motion;\n    motion.update(delta);\n  }\n  enable() {\n    if (this._enabled) return;\n    const element = this._controlEl;\n    this._wheelInput.enable(element);\n    this._pinchInput.enable(element);\n    this._enabled = true;\n    this._enableBlocked = false;\n    this.trigger(CONTROL_EVENTS.ENABLE, {\n      control: this,\n      updateCursor: false\n    });\n  }\n  disable() {\n    if (!this._enabled) return;\n    this._wheelInput.disable();\n    this._pinchInput.disable();\n    this._enabled = false;\n    this.trigger(CONTROL_EVENTS.DISABLE, {\n      updateCursor: false\n    });\n  }\n  sync(camera) {\n    const motion = this._motion;\n    const range = camera.getZoomRange();\n    motion.setRange(range.min, range.max);\n    motion.reset(range.current);\n  }\n  _bindInputs() {\n    const wheelInput = this._wheelInput;\n    const pinchInput = this._pinchInput;\n    wheelInput.on(CONTROL_EVENTS.INPUT_START, this._onInputStart);\n    wheelInput.on(CONTROL_EVENTS.CHANGE, this._onChange);\n    wheelInput.on(CONTROL_EVENTS.INPUT_END, this._onInputEnd);\n    pinchInput.on(CONTROL_EVENTS.INPUT_START, this._onInputStart);\n    pinchInput.on(CONTROL_EVENTS.CHANGE, this._onChange);\n    pinchInput.on(CONTROL_EVENTS.INPUT_END, this._onInputEnd);\n  }\n}\n\n/*\r\n * Copyright (c) 2023-present NAVER Corp.\r\n * egjs projects are licensed under the MIT license\r\n */\nconst ROTATE_CONSTANT = {\n  PITCH_DELTA: 1,\n  YAW_DELTA_BY_ROLL: 2,\n  YAW_DELTA_BY_YAW: 3\n};\nROTATE_CONSTANT[ROTATE_CONSTANT.PITCH_DELTA] = {\n  targetAxis: [0, 1, 0],\n  meshPoint: [0, 0, 1]\n};\nROTATE_CONSTANT[ROTATE_CONSTANT.YAW_DELTA_BY_ROLL] = {\n  targetAxis: [0, 1, 0],\n  meshPoint: [1, 0, 0]\n};\nROTATE_CONSTANT[ROTATE_CONSTANT.YAW_DELTA_BY_YAW] = {\n  targetAxis: [1, 0, 0],\n  meshPoint: [0, 0, 1]\n};\nclass GyroInput extends Component {\n  get enabled() {\n    return this._enabled;\n  }\n  get orientationUpdated() {\n    return this._orientationUpdated;\n  }\n  get ignoreRoll() {\n    return this._ignoreRoll;\n  }\n  set ignoreRoll(val) {\n    this._ignoreRoll = val;\n  }\n  constructor() {\n    super();\n    this._onDeviceOrientation = evt => {\n      const prevOrientation = this._orientation;\n      const {\n        alpha,\n        beta,\n        gamma\n      } = evt;\n      if (alpha == null || beta == null || gamma == null) return;\n      prevOrientation.alpha = alpha;\n      prevOrientation.beta = beta;\n      prevOrientation.gamma = gamma;\n      this._orientationUpdated = true;\n      if (this._needsCalibrate) {\n        this._needsCalibrate = false;\n        this._calibrateSensor();\n      }\n    };\n    this._updateScreenOrientation = () => {\n      if (window.screen && window.screen.orientation && window.screen.orientation.angle !== undefined) {\n        this._screenOrientation = screen.orientation.angle;\n      } else if (window.orientation !== undefined) {\n        this._screenOrientation = window.orientation >= 0 ? window.orientation : 360 + window.orientation;\n      } else {\n        this._screenOrientation = 0;\n      }\n    };\n    this.quaternion = quat.create();\n    this._orientation = {\n      alpha: 0,\n      beta: 90,\n      gamma: 0\n    };\n    this._yawOrigin = 0;\n    this._yawOffset = 0;\n    this._orientationUpdated = false;\n    this._screenOrientation = 0;\n    this._needsCalibrate = true;\n    this._enabled = false;\n  }\n  enable() {\n    if (this._enabled) return;\n    window.addEventListener(EVENTS$1.DEVICE_ORIENTATION, this._onDeviceOrientation);\n    window.addEventListener(EVENTS$1.ORIENTATION_CHANGE, this._updateScreenOrientation);\n    this._updateScreenOrientation();\n    this._orientationUpdated = false;\n    this._needsCalibrate = true;\n    this._enabled = true;\n  }\n  disable() {\n    if (!this._enabled) return;\n    window.removeEventListener(EVENTS$1.DEVICE_ORIENTATION, this._onDeviceOrientation);\n    window.removeEventListener(EVENTS$1.ORIENTATION_CHANGE, this._updateScreenOrientation);\n    this._enabled = false;\n  }\n  update() {\n    this._updateRotation();\n    this._orientationUpdated = false;\n  }\n  collectDelta() {\n    if (!this._orientationUpdated) {\n      return {\n        pitch: 0,\n        yaw: 0\n      };\n    }\n    const prevRotation = quat.clone(this.quaternion);\n    this._updateRotation();\n    this._orientationUpdated = false;\n    return this._toEulerDelta(prevRotation, this.quaternion);\n  }\n  setInitialRotation(yaw) {\n    this._yawOrigin = yaw;\n  }\n  _calibrateSensor() {\n    const yawOrigin = this._yawOrigin;\n    const rotation = this.quaternion;\n    this._yawOffset = 0;\n    this._updateRotation();\n    const {\n      yaw: sensorYaw\n    } = quatToEuler(rotation);\n    this._yawOffset = sensorYaw - yawOrigin;\n    this._updateRotation();\n    this._needsCalibrate = false;\n  }\n  _updateRotation() {\n    const rotation = this.quaternion;\n    const {\n      alpha,\n      beta,\n      gamma\n    } = this._orientation;\n    quat.identity(rotation);\n    quat.rotateY(rotation, rotation, (alpha - this._yawOffset) * DEG_TO_RAD);\n    quat.rotateX(rotation, rotation, beta * DEG_TO_RAD);\n    quat.rotateZ(rotation, rotation, -gamma * DEG_TO_RAD);\n    const screen = quat.create();\n    const screenAngle = -this._screenOrientation * 0.5 * DEG_TO_RAD;\n    const world = quat.fromValues(-Math.sqrt(0.5), 0, 0, Math.sqrt(0.5));\n    quat.set(screen, 0, Math.sin(screenAngle), 0, Math.cos(screenAngle));\n    quat.multiply(rotation, rotation, screen);\n    quat.multiply(rotation, rotation, world);\n    quat.normalize(rotation, rotation);\n  }\n  _toEulerDelta(prevQuat, currentQuat) {\n    return {\n      yaw: this._getDeltaYaw(prevQuat, currentQuat),\n      pitch: this._getDeltaPitch(prevQuat, currentQuat)\n    };\n  }\n  _getDeltaYaw(prvQ, curQ) {\n    const yawDeltaByYaw = this._getRotationDelta(prvQ, curQ, ROTATE_CONSTANT.YAW_DELTA_BY_YAW);\n    const yawDeltaByRoll = this._getRotationDelta(prvQ, curQ, ROTATE_CONSTANT.YAW_DELTA_BY_ROLL) * Math.sin(this._extractPitchFromQuat(curQ));\n    return yawDeltaByRoll + yawDeltaByYaw;\n  }\n  _getDeltaPitch(prvQ, curQ) {\n    return this._getRotationDelta(prvQ, curQ, ROTATE_CONSTANT.PITCH_DELTA);\n  }\n  _getRotationDelta(prevQ, curQ, rotateKind) {\n    const targetAxis = vec3.fromValues(ROTATE_CONSTANT[rotateKind].targetAxis[0], ROTATE_CONSTANT[rotateKind].targetAxis[1], ROTATE_CONSTANT[rotateKind].targetAxis[2]);\n    const meshPoint = ROTATE_CONSTANT[rotateKind].meshPoint;\n    const prevQuaternion = quat.clone(prevQ);\n    const curQuaternion = quat.clone(curQ);\n    quat.normalize(prevQuaternion, prevQuaternion);\n    quat.normalize(curQuaternion, curQuaternion);\n    let prevPoint = vec3.fromValues(0, 0, 1);\n    let curPoint = vec3.fromValues(0, 0, 1);\n    vec3.transformQuat(prevPoint, prevPoint, prevQuaternion);\n    vec3.transformQuat(curPoint, curPoint, curQuaternion);\n    vec3.transformQuat(targetAxis, targetAxis, curQuaternion);\n    const rotateDistance = vec3.dot(targetAxis, vec3.cross(vec3.create(), prevPoint, curPoint));\n    const rotateDirection = rotateDistance > 0 ? 1 : -1;\n    // when counter clock wise, use vec3.fromValues(0,1,0)\n    // when clock wise, use vec3.fromValues(0,-1,0)\n    // const meshPoint1 = vec3.fromValues(0, 0, 0);\n    const meshPoint2 = vec3.fromValues(meshPoint[0], meshPoint[1], meshPoint[2]);\n    let meshPoint3;\n    if (rotateKind !== ROTATE_CONSTANT.YAW_DELTA_BY_YAW) {\n      meshPoint3 = vec3.fromValues(0, rotateDirection, 0);\n    } else {\n      meshPoint3 = vec3.fromValues(rotateDirection, 0, 0);\n    }\n    vec3.transformQuat(meshPoint2, meshPoint2, curQuaternion);\n    vec3.transformQuat(meshPoint3, meshPoint3, curQuaternion);\n    const vecU = meshPoint2;\n    const vecV = meshPoint3;\n    const vecN = vec3.create();\n    vec3.cross(vecN, vecU, vecV);\n    vec3.normalize(vecN, vecN);\n    const coefficientA = vecN[0];\n    const coefficientB = vecN[1];\n    const coefficientC = vecN[2];\n    // a point on the plane\n    curPoint = vec3.fromValues(meshPoint[0], meshPoint[1], meshPoint[2]);\n    vec3.transformQuat(curPoint, curPoint, curQuaternion);\n    // a point should project on the plane\n    prevPoint = vec3.fromValues(meshPoint[0], meshPoint[1], meshPoint[2]);\n    vec3.transformQuat(prevPoint, prevPoint, prevQuaternion);\n    // distance between prevPoint and the plane\n    let distance = Math.abs(prevPoint[0] * coefficientA + prevPoint[1] * coefficientB + prevPoint[2] * coefficientC);\n    const projectedPrevPoint = vec3.create();\n    vec3.subtract(projectedPrevPoint, prevPoint, vec3.scale(vec3.create(), vecN, distance));\n    let trigonometricRatio = (projectedPrevPoint[0] * curPoint[0] + projectedPrevPoint[1] * curPoint[1] + projectedPrevPoint[2] * curPoint[2]) / (vec3.length(projectedPrevPoint) * vec3.length(curPoint));\n    // defensive block\n    if (trigonometricRatio > 1) {\n      trigonometricRatio = 1;\n    }\n    const theta = Math.acos(trigonometricRatio);\n    const crossVec = vec3.cross(vec3.create(), curPoint, projectedPrevPoint);\n    distance = coefficientA * crossVec[0] + coefficientB * crossVec[1] + coefficientC * crossVec[2];\n    let thetaDirection;\n    if (rotateKind !== ROTATE_CONSTANT.YAW_DELTA_BY_YAW) {\n      thetaDirection = distance > 0 ? 1 : -1;\n    } else {\n      thetaDirection = distance < 0 ? 1 : -1;\n    }\n    const deltaRadian = theta * thetaDirection * rotateDirection;\n    return deltaRadian * RAD_TO_DEG;\n  }\n  _extractPitchFromQuat(quaternion) {\n    const baseV = vec3.fromValues(0, 0, 1);\n    vec3.transformQuat(baseV, baseV, quaternion);\n    return -1 * Math.atan2(baseV[1], Math.sqrt(Math.pow(baseV[0], 2) + Math.pow(baseV[2], 2)));\n  }\n}\n\n/**\r\n * Camera's rotation control by gyroscope\r\n * @ko 자이로스코프를 이용한 회전 컨트롤\r\n * @since 4.0.0\r\n */\nclass GyroControl extends Component {\n  /**\r\n   * @copy CameraControl#enabled\r\n   */\n  get enabled() {\n    return this._input.enabled;\n  }\n  /**\r\n   * @hidden\r\n   */\n  get enableBlocked() {\n    return this._enableBlocked;\n  }\n  /**\r\n   * @copy CameraControl#animating\r\n   */\n  get animating() {\n    return this._input.enabled && this._input.orientationUpdated;\n  }\n  /**\r\n   * When `true`, ignore gyroscope's roll(z-axis rotation) value.\r\n   * :::caution\r\n   * Setting `false` will ignore camera's range limit.\r\n   * Options like {@link View360Options#yawRange}, {@link View360Options#pitchRange} are ignored, and {@link CylinderProjection} also can't force it's camera range limit.\r\n   * :::\r\n   * @ko `true`일 경우 자이로스코프 입력의 roll(z축 회전)값을 무시합니다.\r\n   * :::caution\r\n   * 이 값을 `false`로 설정할 경우 카메라 범위 제약을 무시합니다.\r\n   * {@link View360Options#yawRange}, {@link View360Options#pitchRange}와 같은 값은 무시되며, {@link CylinderProjection} 사용시에도 범위를 벗어날 수 있습니다.\r\n   * :::\r\n   * @default true\r\n   * @since 4.0.0\r\n   */\n  get ignoreRoll() {\n    return this._ignoreRoll;\n  }\n  set ignoreRoll(val) {\n    this._ignoreRoll = val;\n  }\n  /**\r\n   * Return availability of the gyroscope.\r\n   * :::caution\r\n   * This will always return false until user permission under environments like iOS which requires user permission when using gyroscope.\r\n   * :::\r\n   * @ko 자이로스코프 사용 가능 여부를 반환합니다.\r\n   * :::caution\r\n   * iOS와 같이 GyroScope 사용시 사용자 Permission을 요구하는 환경에서는 사용자 Permission을 받기 전까지 항상 `false`입니다.\r\n   * :::\r\n   * @example\r\n   * ```ts\r\n   * const gyroAvailable = await GyroControl.isAvailable();\r\n   * ```\r\n   */\n  static isAvailable() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!DeviceMotionEvent) {\n        return false;\n      }\n      let onDeviceMotionChange;\n      const listenDeviceMotion = () => new Promise(res => {\n        onDeviceMotionChange = evt => {\n          res(evt.rotationRate && evt.rotationRate.alpha != null);\n        };\n        window.addEventListener(EVENTS$1.DEVICE_MOTION, onDeviceMotionChange);\n      });\n      const timeout = () => new Promise(res => {\n        setTimeout(() => res(false), 1000);\n      });\n      return Promise.race([listenDeviceMotion(), timeout()]).then(available => {\n        window.removeEventListener(EVENTS$1.DEVICE_MOTION, onDeviceMotionChange);\n        return available;\n      });\n    });\n  }\n  /**\r\n   * Request user permission for gyroscope sensor.\r\n   * This can be used in environments like iOS which requires user permission when using gyroscope sensors.\r\n   * @ko 사용자의 sensor permission 취득을 요청합니다.\r\n   * iOS와 같이 gyroscope 사용시 사용자 Permission을 요구하는 환경에서 사용 가능합니다.\r\n   * @returns Whether the permission is granted {@ko 사용자 permission 취득 여부}\r\n   */\n  static requestSensorPermission() {\n    return __awaiter(this, void 0, void 0, function* () {\n      // Request sensor permission, on iOS13+\n      if (sensorCanBeEnabledIOS()) {\n        return DeviceMotionEvent.requestPermission().then(permissionState => {\n          return permissionState === \"granted\";\n        }).catch(() => false);\n      }\n      return true;\n    });\n  }\n  /**\r\n   * Create new GyroControl instance\r\n   * @ko GyroControl의 인스턴스를 생성합니다.\r\n   * @param enableBlocked - Whether to disable control on init {@ko 초기화 과정에서 컨트롤 활성화 여부}\r\n   * @param options - Options for control {@ko 컨트롤 옵션들}\r\n   */\n  constructor(enableBlocked, {\n    ignoreRoll = true\n  } = {}) {\n    super();\n    this._enableBlocked = enableBlocked;\n    this._ignoreRoll = ignoreRoll;\n    this._input = new GyroInput();\n  }\n  /**\r\n   * @copy CameraControl#destroy\r\n   */\n  destroy() {\n    this.disable();\n    this._input.off();\n    this.off();\n  }\n  /**\r\n   * @hidden\r\n   */\n  update(camera, yaw, pitch, zoom) {\n    if (!this._ignoreRoll) {\n      this._updateQuaternion(camera, zoom);\n    } else {\n      this._updateYawPitch(camera, yaw, pitch, zoom);\n    }\n  }\n  /**\r\n   * @copy CameraControl#enable\r\n   */\n  enable() {\n    if (this._input.enabled) return;\n    this._input.enable();\n    this._enableBlocked = false;\n    this.trigger(CONTROL_EVENTS.ENABLE, {\n      control: this,\n      updateCursor: false\n    });\n  }\n  /**\r\n   * @copy CameraControl#disable\r\n   */\n  disable() {\n    if (!this._input.enabled) return;\n    this._input.disable();\n    this.trigger(CONTROL_EVENTS.DISABLE, {\n      updateCursor: false\n    });\n  }\n  /**\r\n   * @copy CameraControl#sync\r\n   */\n  sync() {} // eslint-disable-line @typescript-eslint/no-empty-function\n  _updateYawPitch(camera, yaw, pitch, zoom) {\n    const input = this._input;\n    if (!input.enabled) return;\n    const {\n      yaw: yawDelta,\n      pitch: pitchDelta\n    } = input.collectDelta();\n    yaw.add(yawDelta);\n    pitch.add(pitchDelta);\n    camera.lookAt({\n      yaw: yaw.val,\n      pitch: pitch.val,\n      zoom\n    });\n  }\n  _updateQuaternion(camera, zoom) {\n    const input = this._input;\n    if (!input.enabled) return;\n    input.update();\n    camera.rotate(input.quaternion, zoom);\n  }\n}\n\n/**\r\n * Panorama control for View360\r\n * @ko View360용 파노라마 컨트롤\r\n * @since 4.0.0\r\n */\nclass PanoControl {\n  /**\r\n   * @copy View360#useGrabCursor\r\n   */\n  get useGrabCursor() {\n    return this._useGrabCursor;\n  }\n  set useGrabCursor(val) {\n    if (val === this._useGrabCursor) return;\n    this._useGrabCursor = val;\n    if (val && this._enabled) {\n      this._setCursor(CURSOR.GRAB);\n    } else if (!val) {\n      this._setCursor(CURSOR.NONE);\n    }\n  }\n  /**\r\n   * @copy View360#disableContextMenu\r\n   */\n  get disableContextMenu() {\n    return this._disableContextMenu;\n  }\n  set disableContextMenu(val) {\n    if (val === this._disableContextMenu) return;\n    this._disableContextMenu = val;\n    if (val && this._enabled) {\n      this._blockContextMenu();\n    } else if (!val) {\n      this._restoreContextMenu();\n    }\n  }\n  /**\r\n   * @copy View360#disableContextMenu\r\n   */\n  get scrollable() {\n    return this._rotateControl.scrollable;\n  }\n  set scrollable(val) {\n    this._rotateControl.scrollable = val;\n  }\n  /**\r\n   * @copy View360#disableContextMenu\r\n   */\n  get wheelScrollable() {\n    return this._zoomControl.scrollable;\n  }\n  set wheelScrollable(val) {\n    this._zoomControl.scrollable = val;\n  }\n  /**\r\n   * When `true`, disables rotation slow-down by zoom-value.\r\n   * @ko `true`일 경우 줌 된 정도에 따라 회전속도를 늦추는 동작을 비활성화합니다.\r\n   * @since 4.0.0\r\n   */\n  get ignoreZoomScale() {\n    return this._ignoreZoomScale;\n  }\n  set ignoreZoomScale(val) {\n    this._ignoreZoomScale = val;\n  }\n  /**\r\n   * Whether the control is enabled or not\r\n   * @ko 컨트롤 활성화 여부를 가리키는 값\r\n   * @readonly\r\n   * @since 4.0.0\r\n   */\n  get enabled() {\n    return this._enabled;\n  }\n  /**\r\n   * @copy View360#rotate\r\n   */\n  get rotate() {\n    return this._rotateControl;\n  }\n  /**\r\n   * @copy View360#zoom\r\n   */\n  get zoom() {\n    return this._zoomControl;\n  }\n  /**\r\n   * @copy View360#gyro\r\n   */\n  get gyro() {\n    return this._gyroControl;\n  }\n  /**\r\n   * Whether one of the controls is animating at the moment\r\n   * @ko 현재 컨트롤 중 하나라도 동작중인지 여부를 나타내는 값\r\n   * @readonly\r\n   * @since 4.0.0\r\n   */\n  get animating() {\n    return this._rotateControl.animating || this._zoomControl.animating || this._gyroControl.animating;\n  }\n  /**\r\n   * Create new instance.\r\n   * @ko 새 인스턴스를 생성합니다.\r\n   * @param element - Canvas element {@ko 캔버스 엘리먼트}\r\n   * @param camera - Camera instance {@ko Camera 인스턴스}\r\n   * @param options - Options for PanoControl {@ko PanoControl 옵션들}\r\n   */\n  constructor(element, camera, {\n    useGrabCursor,\n    scrollable,\n    wheelScrollable,\n    disableContextMenu,\n    rotate,\n    zoom,\n    gyro\n  }) {\n    this._preventContextMenu = evt => {\n      evt.preventDefault();\n    };\n    this._onInputStart = evt => {\n      if (this._useGrabCursor && !evt.isKeyboard) {\n        this._setCursor(CURSOR.GRABBING);\n      }\n    };\n    this._onInputEnd = evt => {\n      if (this._useGrabCursor && !evt.isKeyboard) {\n        this._setCursor(CURSOR.GRAB);\n      }\n    };\n    this._onEnable = ({\n      control,\n      updateCursor\n    }) => {\n      if (updateCursor && this._useGrabCursor) {\n        this._setCursor(CURSOR.GRAB);\n      }\n      control.sync(this._camera);\n    };\n    this._onDisable = ({\n      updateCursor\n    }) => {\n      if (updateCursor) {\n        this._setCursor(CURSOR.NONE);\n      }\n    };\n    this._onCameraAnimationEnd = ({\n      animation\n    }) => {\n      animation.getFinishPromise().then(() => {\n        this.sync();\n      });\n    };\n    // Bind Options\n    this._useGrabCursor = useGrabCursor;\n    this._disableContextMenu = disableContextMenu;\n    // Set internal values\n    this._camera = camera;\n    this._controlEl = element;\n    this._ignoreZoomScale = false;\n    this._enabled = false;\n    this._rotateControl = new RotateControl(element, !rotate, getObjectOption(rotate));\n    this._zoomControl = new ZoomControl(element, !zoom, getObjectOption(zoom));\n    this._gyroControl = new GyroControl(!gyro, getObjectOption(gyro));\n    this._rotateControl.scrollable = scrollable;\n    this._zoomControl.scrollable = wheelScrollable;\n    this._bindEvents();\n  }\n  /**\r\n   * Destroy the instance and remove all event listeners attached.\r\n   * This also will reset CSS cursor to initial.\r\n   * @ko 인스턴스를 삭제하고 부착된 모든 이벤트 리스너를 제거합니다.\r\n   * 또한, 캔버스에 적용된 CSS cursor도 제거합니다.\r\n   * @since 4.0.0\r\n   */\n  destroy() {\n    this.disable();\n    this._rotateControl.destroy();\n    this._zoomControl.destroy();\n    this._setCursor(CURSOR.NONE);\n  }\n  /**\r\n   * Resize control to match target size.\r\n   * @ko 컨트롤이 내부에 캐시하고 있는 크기값을 갱신합니다.\r\n   * @param width New width {@ko 변경된 너비}\r\n   * @param height New height {@ko 변경된 높이}\r\n   * @since 4.0.0\r\n   */\n  resize(width, height) {\n    const camera = this._camera;\n    this._rotateControl.resize(camera.fov, camera.aspect, width, height);\n  }\n  /**\r\n   * Enable this control and add event listeners.\r\n   * @ko 컨트롤을 활성화하고 이벤트 리스너들을 추가합니다.\r\n   * @since 4.0.0\r\n   */\n  enable() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this._enabled) return;\n      if (!this._rotateControl.enableBlocked) {\n        this._rotateControl.enable();\n      }\n      if (!this._zoomControl.enableBlocked) {\n        this._zoomControl.enable();\n      }\n      if (!this._gyroControl.enableBlocked) {\n        if (yield GyroControl.isAvailable()) {\n          this._gyroControl.enable();\n        }\n      }\n      this.sync();\n      if (this._disableContextMenu) {\n        this._blockContextMenu();\n      }\n      this._enabled = true;\n    });\n  }\n  /**\r\n   * Disable this control and remove all event listeners\r\n   * @ko 컨트롤을 비활성화하고 모든 이벤트 리스너들을 제거합니다.\r\n   * @since 4.0.0\r\n   */\n  disable() {\n    if (!this._enabled) return;\n    this._rotateControl.disable();\n    this._zoomControl.disable();\n    this._gyroControl.disable();\n    this._restoreContextMenu();\n    this._enabled = false;\n  }\n  /**\r\n   * Update control by given deltaTime\r\n   * @ko 컨트롤을 주어진 시간만큼 업데이트합니다.\r\n   * @param delta Number of milisec to update {@ko 업데이트할 시간, 밀리초 단위}\r\n   * @since 4.0.0\r\n   * @internal\r\n   */\n  update(delta) {\n    const camera = this._camera;\n    const rotateControl = this._rotateControl;\n    const zoomControl = this._zoomControl;\n    const gyroControl = this._gyroControl;\n    zoomControl.update(delta);\n    const zoom = hfovToZoom(camera.fov, zoomControl.zoom);\n    // Slow down rotation on zoom-in\n    const zoomScale = this._ignoreZoomScale ? 1 : Math.max(zoom, 1);\n    rotateControl.setZoomScale(zoomScale);\n    rotateControl.updateRange(camera, zoom);\n    rotateControl.update(delta);\n    const yaw = rotateControl.yaw;\n    const pitch = rotateControl.pitch;\n    if (gyroControl.enabled) {\n      gyroControl.update(camera, yaw, pitch, zoom);\n    } else {\n      camera.lookAt({\n        yaw: yaw.val,\n        pitch: pitch.val,\n        zoom\n      });\n    }\n  }\n  /**\r\n   * Synchronize this control's state to current camera state\r\n   * @ko 컨트롤을 카메라의 현재 상태와 동기화합니다.\r\n   * @since 4.0.0\r\n   */\n  sync() {\n    const camera = this._camera;\n    this._zoomControl.sync(camera);\n    this._rotateControl.sync(camera);\n  }\n  _blockContextMenu() {\n    const el = this._controlEl;\n    el.addEventListener(EVENTS$1.CONTEXT_MENU, this._preventContextMenu);\n  }\n  _restoreContextMenu() {\n    const el = this._controlEl;\n    el.removeEventListener(EVENTS$1.CONTEXT_MENU, this._preventContextMenu);\n  }\n  _setCursor(newCursor) {\n    if (!this._useGrabCursor && newCursor !== CURSOR.NONE) return;\n    const targetEl = this._controlEl;\n    targetEl.style.cursor = newCursor;\n  }\n  _bindEvents() {\n    const rotateControl = this._rotateControl;\n    const zoomControl = this._zoomControl;\n    rotateControl.on(CONTROL_EVENTS.INPUT_START, this._onInputStart);\n    rotateControl.on(CONTROL_EVENTS.INPUT_END, this._onInputEnd);\n    rotateControl.on(CONTROL_EVENTS.ENABLE, this._onEnable);\n    rotateControl.on(CONTROL_EVENTS.DISABLE, this._onDisable);\n    zoomControl.on(CONTROL_EVENTS.ENABLE, this._onEnable);\n    zoomControl.on(CONTROL_EVENTS.DISABLE, this._onDisable);\n    this._camera.on(CAMERA_EVENTS.ANIMATION_END, this._onCameraAnimationEnd);\n  }\n}\n\n/**\r\n * @hidden\r\n */\nclass Texture {\n  constructor({\n    width,\n    height,\n    flipY\n  }) {\n    this.width = width;\n    this.height = height;\n    this.flipY = flipY;\n    this.wrapS = WebGLRenderingContext.CLAMP_TO_EDGE;\n    this.wrapT = WebGLRenderingContext.CLAMP_TO_EDGE;\n  }\n  destroy() {\n    // DO_NOTHING\n  }\n  isVideo() {\n    return false;\n  }\n  isCube() {\n    return false;\n  }\n}\n\n/*\r\n * Copyright (c) 2023-present NAVER Corp.\r\n * egjs projects are licensed under the MIT license\r\n */\n/**\r\n * @hidden\r\n */\nclass Texture2D extends Texture {\n  constructor({\n    source,\n    width,\n    height,\n    flipY\n  }) {\n    super({\n      width,\n      height,\n      flipY\n    });\n    this.source = source;\n  }\n}\n\n/*\r\n * Copyright (c) 2023-present NAVER Corp.\r\n * egjs projects are licensed under the MIT license\r\n */\n/**\r\n * @hidden\r\n */\nclass TextureVideo extends Texture2D {\n  destroy() {\n    const video = this.source;\n    video.pause();\n    video.removeAttribute(\"src\");\n    video.load();\n  }\n  isVideo() {\n    return true;\n  }\n  isPaused() {\n    const video = this.source;\n    return video.paused || video.ended || video.readyState <= 2;\n  }\n  hasAudio() {\n    const video = this.source;\n    if (video.audioTracks) {\n      return video.audioTracks.length > 0;\n    }\n    if (video.webkitAudioDecodedByteCount != null) {\n      return video.webkitAudioDecodedByteCount > 0;\n    }\n    if (video.mozHasAudio != null) {\n      return video.mozHasAudio;\n    }\n    // We don't know whether the video has audio or not, return true\n    return true;\n  }\n}\n\n/*\r\n * Copyright (c) 2023-present NAVER Corp.\r\n * egjs projects are licensed under the MIT license\r\n */\n/**\r\n * @hidden\r\n */\nclass TextureCube extends Texture {\n  constructor({\n    sources,\n    width,\n    height,\n    flipY\n  }) {\n    super({\n      width,\n      height,\n      flipY\n    });\n    this.sources = sources;\n  }\n  isCube() {\n    return true;\n  }\n}\n\n/**\r\n * @hidden\r\n */\nclass TextureLoader {\n  constructor() {\n    this._loadChecker = new ImReady();\n  }\n  load(src, video) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (video) {\n        return this.loadVideo(src, getObjectOption(video));\n      } else {\n        if (Array.isArray(src) && src.length > 1) {\n          return this.loadCubeImage(src);\n        } else {\n          const imgSrc = Array.isArray(src) ? src[0] : src;\n          return this.loadImage(imgSrc);\n        }\n      }\n    });\n  }\n  loadImage(src) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const images = this._toImageArray(src);\n      return this._load(images, resolve => {\n        const image = images[0];\n        resolve(new Texture2D({\n          source: image,\n          width: image.naturalWidth,\n          height: image.naturalHeight,\n          flipY: true\n        }));\n      });\n    });\n  }\n  loadCubeImage(src) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const images = this._toImageArray(src);\n      return this._load(images, resolve => {\n        resolve(new TextureCube({\n          sources: images,\n          width: images[0].naturalWidth,\n          height: images[0].naturalHeight,\n          flipY: false\n        }));\n      });\n    });\n  }\n  loadVideo(src, videoConfig) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const config = Object.assign({\n        autoplay: true,\n        muted: true,\n        loop: false,\n        volume: 1\n      }, videoConfig);\n      const video = this._toVideoElement(src, config);\n      return this._load([video], resolve => {\n        const {\n          autoplay,\n          muted\n        } = config;\n        video.currentTime = 0;\n        if (autoplay && muted) {\n          video.play().catch(() => void 0);\n        }\n        resolve(new TextureVideo({\n          source: video,\n          width: video.videoWidth,\n          height: video.videoHeight,\n          flipY: true\n        }));\n      });\n    });\n  }\n  _load(content, onLoad) {\n    const loader = this._loadChecker;\n    return new Promise((resolve, reject) => {\n      loader.once(\"ready\", evt => {\n        if (evt.errorCount > 0) return;\n        onLoad(resolve);\n      });\n      loader.once(\"error\", reject);\n      loader.check(content);\n    });\n  }\n  _toImageArray(src) {\n    const srcs = Array.isArray(src) ? src : [src];\n    return srcs.map(source => {\n      if (isString(source)) {\n        const imgEl = new Image();\n        imgEl.crossOrigin = \"anonymous\";\n        imgEl.src = source;\n        return imgEl;\n      } else {\n        return source;\n      }\n    });\n  }\n  _toVideoElement(src, {\n    muted,\n    loop,\n    volume\n  }) {\n    if (src instanceof HTMLVideoElement) {\n      return src;\n    }\n    const video = document.createElement(\"video\");\n    video.crossOrigin = \"anonymous\";\n    video.playsInline = true;\n    video.setAttribute(\"webkit-playsinline\", \"\");\n    video.muted = muted;\n    video.volume = volume;\n    video.loop = loop;\n    if (Array.isArray(src)) {\n      src.forEach(source => this._appendSourceElement(video, source));\n    } else {\n      this._appendSourceElement(video, src);\n    }\n    const sourceCount = video.querySelectorAll(\"source\").length;\n    if (sourceCount > 0 && video.readyState < 1) {\n      video.load();\n    }\n    return video;\n  }\n  _appendSourceElement(video, src) {\n    if (src instanceof HTMLSourceElement) {\n      return src;\n    }\n    const sourceEl = document.createElement(\"source\");\n    sourceEl.src = src;\n    video.appendChild(sourceEl);\n  }\n}\n\n/*\r\n * Copyright (c) 2023-present NAVER Corp.\r\n * egjs projects are licensed under the MIT license\r\n */\n/**\r\n * @internal\r\n */\nclass FrameAnimator {\n  /** */\n  constructor(maxDeltaTime, context = window) {\n    this.maxDeltaTime = maxDeltaTime;\n    this._context = context;\n    this._rafId = -1;\n    this._rafTimer = -1;\n    this._lastUpdateTime = -1;\n  }\n  start(callback) {\n    const context = this._context;\n    // No context / callback set\n    if (!context || !callback) return;\n    // Animation already started\n    if (this._rafId >= 0 || this._rafTimer >= 0) return;\n    const loop = (_time, frame) => {\n      const time = Date.now();\n      const delta = Math.min(time - this._lastUpdateTime, this.maxDeltaTime * 1000);\n      callback(delta, frame);\n      this._lastUpdateTime = time;\n      this._rafId = context.requestAnimationFrame(loop);\n    };\n    this._lastUpdateTime = Date.now();\n    this._rafId = context.requestAnimationFrame(loop);\n  }\n  stop() {\n    if (this._rafId >= 0) {\n      this._context.cancelAnimationFrame(this._rafId);\n    }\n    if (this._rafTimer >= 0) {\n      clearTimeout(this._rafTimer);\n    }\n    this._rafId = -1;\n    this._rafTimer = -1;\n  }\n  changeContext(context) {\n    this.stop();\n    this._context = context;\n  }\n}\n\n/*\r\n * Copyright (c) 2023-present NAVER Corp.\r\n * egjs projects are licensed under the MIT license\r\n */\n/**\r\n * Automatic resizer that uses both ResizeObserver and window resize event\r\n */\nclass AutoResizer {\n  get useResizeObserver() {\n    return this._useResizeObserver;\n  }\n  /**\r\n   * Returns whether AutoResizer is enabled\r\n   */\n  get enabled() {\n    return this._enabled;\n  }\n  /** */\n  constructor(useResizeObserver, onResize) {\n    // eslint-disable-next-line @typescript-eslint/member-ordering\n    this._skipFirstResize = (() => {\n      let isFirstResize = true;\n      return () => {\n        if (isFirstResize) {\n          isFirstResize = false;\n          return;\n        }\n        this._onResize();\n      };\n    })();\n    this._useResizeObserver = useResizeObserver;\n    this._enabled = false;\n    this._resizeObserver = null;\n    this._onResize = onResize;\n  }\n  /**\r\n   * Enable resizer\r\n   */\n  enable(element) {\n    if (this._enabled) {\n      this.disable();\n    }\n    if (this._useResizeObserver && !!window.ResizeObserver) {\n      const bbox = element.getBoundingClientRect();\n      const resizeImmediate = bbox.width !== 0 || bbox.height !== 0;\n      const resizeObserver = new ResizeObserver(resizeImmediate ? this._skipFirstResize : this._onResize);\n      resizeObserver.observe(element);\n      this._resizeObserver = resizeObserver;\n    } else {\n      window.addEventListener(EVENTS$1.RESIZE, this._onResize);\n    }\n    this._enabled = true;\n    return this;\n  }\n  /**\r\n   * Disable resizer\r\n   */\n  disable() {\n    if (!this._enabled) return this;\n    const resizeObserver = this._resizeObserver;\n    if (resizeObserver) {\n      resizeObserver.disconnect();\n      this._resizeObserver = null;\n    } else {\n      window.removeEventListener(EVENTS$1.RESIZE, this._onResize);\n    }\n    this._enabled = false;\n    return this;\n  }\n}\n\n/**\r\n * A manager class for autoplay feature.\r\n * @ko Autoplay 기능의 매니저 클래스.\r\n * @since 4.0.0\r\n */\nclass Autoplay {\n  /**\r\n   * Whether autoplay is enabled or not\r\n   * @ko 자동재생 활성화 여부를 나타내는 값\r\n   * @readonly\r\n   * @since 4.0.0\r\n   */\n  get enabled() {\n    return this._enabled;\n  }\n  /**\r\n   * @hidden\r\n   */\n  get enableBlocked() {\n    return this._enableBlocked;\n  }\n  /**\r\n   * Whether autoplay is updating the camera at the moment\r\n   * @ko 현재 자동재생이 동작중인지 여부를 나타내는 값\r\n   * @readonly\r\n   * @since 4.0.0\r\n   */\n  get playing() {\n    return this._enabled && !this._interrupted;\n  }\n  /**\r\n   * Reactivation delay after mouse input in milisecond.\r\n   * @ko 재활성화되기까지의 시간 (밀리초 단위)\r\n   * @default 2000\r\n   * @since 4.0.0\r\n   */\n  get delay() {\n    return this._delay;\n  }\n  set delay(val) {\n    this._delay = val;\n  }\n  /**\r\n   * Reactivation delay after mouse leave when using {@link AutoplayOptions#pauseOnHover}\r\n   * @ko {@link AutoplayOptions#pauseOnHover} 사용시 마우스가 캔버스 영역을 떠난 뒤 자동재생이 다시 활성화되기까지의 시간\r\n   * @default 0\r\n   * @since 4.0.0\r\n   */\n  get delayOnMouseLeave() {\n    return this._delayOnMouseLeave;\n  }\n  set delayOnMouseLeave(val) {\n    this._delayOnMouseLeave = val;\n  }\n  /**\r\n   * Y-axis(yaw) rotation speed\r\n   * @ko Y-축 회전(yaw)의 속도\r\n   * @default 1\r\n   * @since 4.0.0\r\n   */\n  get speed() {\n    return this._speed;\n  }\n  set speed(val) {\n    this._speed = val;\n  }\n  /**\r\n   * Whether to pause rotation on mouse hover\r\n   * @ko 마우스가 캔버스 영역에 들어왔을 때 자동재생을 정지할지 여부\r\n   * @default false\r\n   * @since 4.0.0\r\n   */\n  get pauseOnHover() {\n    return this._pauseOnHover;\n  }\n  set pauseOnHover(val) {\n    this._pauseOnHover = val;\n  }\n  /**\r\n   * Whether user can interrupt the rotation with click/wheel input\r\n   * @ko 클릭이나 휠같은 사용자 인터랙션시 자동재생을 멈출지 여부\r\n   * @default true\r\n   * @since 4.0.0\r\n   */\n  get canInterrupt() {\n    return this._canInterrupt;\n  }\n  set canInterrupt(val) {\n    this._canInterrupt = val;\n  }\n  /**\r\n   * Whether to disable autoplay on user interrupt\r\n   * @ko 사용자 동작에 의해 자동재생이 정지할 때, {@link Autoplay#disable}을 호출하여 자동재생을 영구히 정지할지 여부\r\n   * @default false\r\n   * @since 4.0.0\r\n   */\n  get disableOnInterrupt() {\n    return this._disableOnInterrupt;\n  }\n  set disableOnInterrupt(val) {\n    this._disableOnInterrupt = val;\n  }\n  /**\r\n   * Create new AutoPlayer instance\r\n   * @param camera - Instance of the {@link Camera} {@ko Camera의 인스턴스}\r\n   * @param element - Canvas element {@ko 캔버스 엘리먼트}\r\n   * @param options - Autoplay options {@ko 자동재생 옵션들}\r\n   * @since 4.0.0\r\n   */\n  constructor(viewer, element, options) {\n    this._onInputStart = () => {\n      if (!this._canInterrupt) return;\n      this._interrupted = true;\n      this._clearTimeout();\n    };\n    this._onInputEnd = () => {\n      this._setUninterruptedAfterDelay(this._delay);\n    };\n    this._onGyroEnable = () => {\n      this.disable();\n    };\n    this._onMouseEnter = () => {\n      if (!this._pauseOnHover) return;\n      this._interrupted = true;\n      this._hovering = true;\n    };\n    this._onMouseLeave = () => {\n      if (!this._pauseOnHover) return;\n      this._hovering = false;\n      this._setUninterruptedAfterDelay(this._delayOnMouseLeave);\n    };\n    this._camera = viewer.camera;\n    this._control = viewer.control;\n    this._element = element;\n    this._enabled = false;\n    this._interrupted = false;\n    this._interruptionTimer = -1;\n    this._hovering = false;\n    const {\n      delay = 2000,\n      delayOnMouseLeave = 0,\n      speed = 1,\n      pauseOnHover = false,\n      canInterrupt = true,\n      disableOnInterrupt = false\n    } = getObjectOption(options);\n    this._enableBlocked = !options;\n    this._delay = delay;\n    this._delayOnMouseLeave = delayOnMouseLeave;\n    this._speed = speed;\n    this._pauseOnHover = pauseOnHover;\n    this._canInterrupt = canInterrupt;\n    this._disableOnInterrupt = disableOnInterrupt;\n  }\n  /**\r\n   * Destroy the instance and remove all event listeners attached\r\n   * @ko 인스턴스를 제거하고 연결된 모든 이벤트 핸들러를 삭제합니다.\r\n   * @since 4.0.0\r\n   */\n  destroy() {\n    this.disable();\n  }\n  /**\r\n   * Rotate camera by given deltaTime\r\n   * @ko 주어진 deltaTime만큼 카메라를 회전시킵니다.\r\n   * @param deltaTime - Number of milisec to update {@ko 업데이트할 시간, 밀리초 단위}\r\n   * @since 4.0.0\r\n   */\n  update(deltaTime) {\n    if (!this._enabled) return;\n    if (this._interrupted) {\n      if (this._disableOnInterrupt) {\n        this.disable();\n      }\n      return;\n    }\n    const camera = this._camera;\n    const delta = -this._speed * deltaTime / 100;\n    camera.yaw = circulate(camera.yaw + delta, 0, 360);\n  }\n  /**\r\n   * Enable autoplay and add event listeners.\r\n   * @ko 자동재생을 활성화하고 이벤트리스너들을 추가합니다.\r\n   * @since 4.0.0\r\n   */\n  enable() {\n    const control = this._control;\n    const element = this._element;\n    if (this._enabled || control.gyro.enabled) return;\n    control.rotate.on(CONTROL_EVENTS.INPUT_START, this._onInputStart);\n    control.rotate.on(CONTROL_EVENTS.INPUT_END, this._onInputEnd);\n    control.zoom.on(CONTROL_EVENTS.INPUT_START, this._onInputStart);\n    control.zoom.on(CONTROL_EVENTS.INPUT_END, this._onInputEnd);\n    control.gyro.on(CONTROL_EVENTS.ENABLE, this._onGyroEnable);\n    element.addEventListener(EVENTS$1.MOUSE_ENTER, this._onMouseEnter, false);\n    element.addEventListener(EVENTS$1.MOUSE_LEAVE, this._onMouseLeave, false);\n    this._enabled = true;\n    this._enableBlocked = false;\n  }\n  /**\r\n   * Enable autoplay after current `delay` value.\r\n   * @ko 현재의 `delay`값만큼 시간이 지난 다음에 자동재생을 활성화합니다.\r\n   * @since 4.0.0\r\n   */\n  enableAfterDelay() {\n    this.enable();\n    this._interrupted = true;\n    this._setUninterruptedAfterDelay(this._delay);\n  }\n  /**\r\n   * Disable autoplay and remove all event handlers.\r\n   * @ko 자동재생을 비활성화하고 모든 이벤트 핸들러를 제거합니다.\r\n   * @since 4.0.0\r\n   */\n  disable() {\n    if (!this._enabled) return;\n    const control = this._control;\n    const element = this._element;\n    control.rotate.off(CONTROL_EVENTS.INPUT_START, this._onInputStart);\n    control.rotate.off(CONTROL_EVENTS.INPUT_END, this._onInputEnd);\n    control.zoom.off(CONTROL_EVENTS.INPUT_START, this._onInputStart);\n    control.zoom.off(CONTROL_EVENTS.INPUT_END, this._onInputEnd);\n    control.gyro.off(CONTROL_EVENTS.ENABLE, this._onGyroEnable);\n    element.removeEventListener(EVENTS$1.MOUSE_ENTER, this._onMouseEnter, false);\n    element.removeEventListener(EVENTS$1.MOUSE_LEAVE, this._onMouseLeave, false);\n    this._enabled = false;\n    this._interrupted = false;\n    this._hovering = false;\n    this._clearTimeout();\n  }\n  _setUninterruptedAfterDelay(delay) {\n    if (this._hovering) return;\n    this._clearTimeout();\n    if (delay > 0) {\n      this._interruptionTimer = window.setTimeout(() => {\n        this._interrupted = false;\n        this._interruptionTimer = -1;\n      }, delay);\n    } else {\n      this._interrupted = false;\n      this._interruptionTimer = -1;\n    }\n  }\n  _clearTimeout() {\n    if (this._interruptionTimer >= 0) {\n      window.clearTimeout(this._interruptionTimer);\n      this._interruptionTimer = -1;\n    }\n  }\n}\n\n/**\r\n * WebXR manager class\r\n * @ko WebXR 매니저 클래스\r\n * @since 4.0.0\r\n */\nclass XRManager extends Component {\n  /**\r\n   * Create new instance.\r\n   * 새 인스턴스를 생성합니다.\r\n   * @param ctx - Instance of WebGL context helper {@ko WebGL 콘텍스트 헬퍼의 인스턴스}\r\n   * @param options - Options {@ko 옵션들}\r\n   */\n  constructor(ctx, options = {}) {\n    super();\n    /**\r\n     * Destroy instance and end XR session if there was any.\r\n     * @ko 인스턴스를 제거하고, XR 세션이 존재할 경우 종료합니다.\r\n     * @since 4.0.0\r\n     */\n    this.destroy = () => {\n      this.exit();\n      this.off();\n    };\n    this._onSessionEnd = () => {\n      this.exit();\n      this.trigger(EVENTS.VR_END);\n    };\n    this._xrSession = null;\n    this._xrRefSpace = null;\n    this._ctx = ctx;\n    this._options = options;\n  }\n  /**\r\n   * Returns WebXR availability.\r\n   * @ko WebXR 사용 가능 여부를 반환합니다.\r\n   * @since 4.0.0\r\n   */\n  isAvailable() {\n    return __awaiter(this, void 0, void 0, function* () {\n      // eslint-disable-next-line compat/compat\n      const xr = window.navigator.xr;\n      if (!xr) return false;\n      return xr.isSessionSupported(SESSION_VR).then(available => {\n        return available;\n      }).catch(() => {\n        return false;\n      });\n    });\n  }\n  /**\r\n   * Enter VR session\r\n   * @ko VR 세션에 진입합니다.\r\n   * @since 4.0.0\r\n   */\n  enter() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const ctx = this._ctx;\n      // eslint-disable-next-line compat/compat\n      const xr = window.navigator.xr;\n      if (!xr) return;\n      yield GyroControl.requestSensorPermission();\n      const options = Object.assign({\n        requiredFeatures: [XR_REFERENCE_SPACE]\n      }, this._options);\n      yield ctx.makeXRCompatible();\n      const session = yield xr.requestSession(SESSION_VR, options);\n      ctx.bindXRLayer(session);\n      const refSpace = yield session.requestReferenceSpace(XR_REFERENCE_SPACE);\n      this._setSession(session, refSpace);\n      this.trigger(EVENTS.VR_START, {\n        session\n      });\n    });\n  }\n  /**\r\n   * Exit VR session\r\n   * @ko VR 세션에서 나갑니다.\r\n   * @since 4.0.0\r\n   */\n  exit() {\n    const xrSession = this._xrSession;\n    if (xrSession) {\n      xrSession.end().catch(() => void 0);\n    }\n    this._xrSession = null;\n    this._xrRefSpace = null;\n  }\n  /**\r\n   * @hidden\r\n   */\n  canRender(frame) {\n    const refSpace = this._xrRefSpace;\n    if (!refSpace) return false;\n    const pose = frame.getViewerPose(refSpace);\n    return !!pose;\n  }\n  /**\r\n   * @hidden\r\n   */\n  getEyeParams(frame) {\n    const session = frame.session;\n    const pose = frame.getViewerPose(this._xrRefSpace);\n    if (!pose) return null;\n    const glLayer = session.renderState.baseLayer;\n    if (!glLayer) return null;\n    return pose.views.map(view => {\n      const viewport = glLayer.getViewport(view);\n      const vMatrix = view.transform.inverse.matrix;\n      return {\n        viewport,\n        vMatrix,\n        pMatrix: view.projectionMatrix\n      };\n    });\n  }\n  _setSession(session, refSpace) {\n    this._xrSession = session;\n    this._xrRefSpace = refSpace;\n    session.addEventListener(EVENTS$1.XR_END, this._onSessionEnd);\n  }\n}\n\n/**\r\n * Hotspot data\r\n * @ko 핫스팟 데이터\r\n * @since 4.0.0\r\n */\nclass Hotspot {\n  constructor(element, position) {\n    this.element = element;\n    this.position = position;\n  }\n}\n\n/*\r\n * Copyright (c) 2023-present NAVER Corp.\r\n * egjs projects are licensed under the MIT license\r\n */\n/**\r\n * Hotspot renderer\r\n * @ko Hotspot 렌더러\r\n * @since 4.0.0\r\n */\nclass HotspotRenderer {\n  /**\r\n   * Create new instance\r\n   * @ko 새 인스턴스를 생성합니다.\r\n   * @param rootEl - Container element for hotspots {@ko 핫스팟들의 컨테이너 엘리먼트}\r\n   * @param renderer - instance of WebGLRenderer {@ko WebGLRenderer의 인스턴스}\r\n   * @param options - Hotspot options {@ko Hotspot 옵션들 }\r\n   */\n  constructor(rootEl, renderer, {\n    zoom = false\n  }) {\n    this._containerEl = getNullableElement(`.${DEFAULT_CLASS.HOTSPOT_CONTAINER}`, rootEl);\n    this._renderer = renderer;\n    this._hotspots = [];\n    this._zoom = zoom;\n  }\n  /**\r\n   * Refresh hotspots by collecting hotspot elements from current hotspot root element\r\n   * @ko 현재 핫스팟 루트 엘리먼트 내에서 핫스팟 엘리먼트들을 수집하여 갱신합니다.\r\n   * @throws {ERROR_CODES.INSUFFICIENT_ARGS} if data-position doesn't include all x, y, z values {@ko data-position이 x, y, z좌표를 전부 포함하고 있지 않을 때}\r\n   */\n  refresh() {\n    const container = this._containerEl;\n    if (!container) return;\n    const hotspotEls = [].slice.apply(container.querySelectorAll(`.${DEFAULT_CLASS.HOTSPOT}`));\n    this._hotspots = hotspotEls.map(el => this._parseHotspot(el));\n  }\n  /**\r\n   * Render hotspots\r\n   * @ko 핫스팟들을 렌더링합니다.\r\n   * @param camera - Instance of Camera {@ko Camera의 인스턴스}\r\n   */\n  render(camera) {\n    const hotspots = this._hotspots;\n    const halfWidth = this._renderer.width * 0.5;\n    const halfHeight = this._renderer.height * 0.5;\n    const zoom = camera.zoom;\n    const centerTransform = \"translate(-50%, -50%)\";\n    const zoomTransform = this._zoom ? `scale(${zoom})` : \"\";\n    hotspots.forEach(hotspot => {\n      const position = hotspot.position;\n      const relPos = vec3.create();\n      vec3.copy(relPos, position);\n      vec3.transformMat4(relPos, relPos, camera.viewMatrix);\n      vec3.transformMat4(relPos, relPos, camera.projectionMatrix);\n      if (relPos[2] > 1 || relPos[2] < 0) {\n        hotspot.element.classList.remove(DEFAULT_CLASS.HOTSPOT_VISIBLE);\n        return;\n      }\n      const screenPos = vec2.fromValues(relPos[0] * halfWidth + halfWidth, -relPos[1] * halfHeight + halfHeight);\n      hotspot.element.classList.add(DEFAULT_CLASS.HOTSPOT_VISIBLE);\n      hotspot.element.style.transform = [centerTransform, `translate(${screenPos[0]}px, ${screenPos[1]}px)`, zoomTransform].join(\" \");\n    });\n  }\n  _parseHotspot(element) {\n    const yawStr = element.dataset.yaw;\n    const pitchStr = element.dataset.pitch;\n    const positionStr = element.dataset.position;\n    if (yawStr || pitchStr) {\n      const yaw = yawStr ? parseFloat(yawStr) : 0;\n      const pitch = pitchStr ? parseFloat(pitchStr) : 0;\n      const position = this._yawPitchToVec3(yaw, pitch);\n      return new Hotspot(element, position);\n    } else if (positionStr) {\n      const pos = positionStr.split(\" \").map(val => parseFloat(val));\n      if (pos.length < 3) {\n        throw new View360Error(ERROR.MESSAGES.INSUFFICIENT_ARGS(positionStr, \"hotspot attribute \\\"data-position\\\"\"), ERROR.CODES.INSUFFICIENT_ARGS);\n      }\n      return new Hotspot(element, vec3.fromValues(pos[0], pos[1], pos[2]));\n    } else {\n      // Place hotspot at yaw: 0, pitch: 0\n      const defaultPos = vec3.fromValues(0, 0, -1);\n      return new Hotspot(element, defaultPos);\n    }\n  }\n  _yawPitchToVec3(yaw, pitch) {\n    const yawRad = yaw * DEG_TO_RAD;\n    const pitchRad = pitch * DEG_TO_RAD;\n    const position = vec3.create();\n    position[1] = Math.sin(pitchRad);\n    position[2] = Math.cos(pitchRad);\n    position[0] = position[2] * Math.sin(-yawRad);\n    position[2] = -position[2] * Math.cos(-yawRad);\n    return position;\n  }\n}\n\n/**\r\n * @hidden\r\n */\nclass VertexArrayObject {\n  get count() {\n    return this.geometry.indicies.count;\n  }\n  constructor(obj, geometry, buffers) {\n    this.obj = obj;\n    this.geometry = geometry;\n    this.buffers = buffers;\n  }\n}\n\n/**\r\n * @hidden\r\n */\nclass WebGLContext {\n  get canvas() {\n    return this._canvas;\n  }\n  get maxTextureSize() {\n    return this._maxTextureSize;\n  }\n  get isWebGL2() {\n    return this._isWebGL2;\n  }\n  get supportVAO() {\n    return this._isWebGL2 || !!this._extensions.vao;\n  }\n  get lost() {\n    return this._contextLost;\n  }\n  get debug() {\n    return this._debug;\n  }\n  constructor(canvas, debug) {\n    this._onContextLost = () => {\n      const canvas = this._canvas;\n      canvas.classList.add(DEFAULT_CLASS.CTX_LOST);\n      this._contextLost = true;\n    };\n    this._onContextRestore = () => {\n      const canvas = this._canvas;\n      canvas.classList.remove(DEFAULT_CLASS.CTX_LOST);\n      this._contextLost = false;\n    };\n    this._canvas = canvas;\n    this._contextLost = false;\n    this._debug = debug;\n    this._extensions = {\n      vao: null,\n      loseContext: null\n    };\n  }\n  init() {\n    const canvas = this._canvas;\n    const {\n      gl,\n      isWebGL2\n    } = this._getContext(canvas);\n    this._gl = gl;\n    this._maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n    this._isWebGL2 = isWebGL2;\n    if (!this._isWebGL2) {\n      this._extensions.vao = gl.getExtension(\"OES_vertex_array_object\");\n    }\n    this._extensions.loseContext = gl.getExtension(\"WEBGL_lose_context\");\n    canvas.addEventListener(EVENTS$1.CONTEXT_LOST, this._onContextLost);\n    canvas.addEventListener(EVENTS$1.CONTEXT_RESTORED, this._onContextRestore);\n    // gl.enable(gl.DEPTH_TEST);\n  }\n\n  destroy() {\n    const gl = this._gl;\n    const canvas = this._canvas;\n    if (gl) {\n      // gl is not defined when destroy is called before init\n      gl.bindBuffer(gl.ARRAY_BUFFER, null);\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n    }\n    canvas.removeEventListener(EVENTS$1.CONTEXT_LOST, this._onContextLost);\n    canvas.removeEventListener(EVENTS$1.CONTEXT_RESTORED, this._onContextRestore);\n  }\n  forceLoseContext() {\n    const extension = this._extensions.loseContext;\n    if (!extension) return;\n    extension.loseContext();\n  }\n  forceRestoreContext() {\n    const extension = this._extensions.loseContext;\n    if (!extension) return;\n    extension.restoreContext();\n  }\n  clear() {\n    const gl = this._gl;\n    gl.clear(gl.COLOR_BUFFER_BIT);\n  }\n  resize() {\n    const gl = this._gl;\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n  }\n  viewport(x, y, width, height) {\n    const gl = this._gl;\n    gl.viewport(x, y, width, height);\n  }\n  createVAO(geometry, shaderProgram) {\n    const nativeVAO = this._createNativeVAO();\n    const vao = new VertexArrayObject(nativeVAO, geometry, {\n      indicies: this._createBuffer(),\n      position: this._createBuffer(),\n      uv: this._createBuffer()\n    });\n    if (nativeVAO) {\n      this._bindNativeVAO(nativeVAO);\n      this._supplyGeometryData(vao, shaderProgram);\n      this._bindNativeVAO(null);\n      this._unbindBuffers();\n    }\n    return vao;\n  }\n  draw(vao, shaderProgram) {\n    const gl = this._gl;\n    if (vao.obj) {\n      this._bindNativeVAO(vao.obj);\n    } else {\n      this._supplyGeometryData(vao, shaderProgram);\n    }\n    gl.drawElements(gl.TRIANGLES, vao.count, gl.UNSIGNED_SHORT, 0);\n    if (vao.obj) {\n      this._bindNativeVAO(null);\n    } else {\n      this._unbindBuffers();\n    }\n  }\n  releaseVAO(vao) {\n    if (vao.obj) {\n      this._deleteNativeVAO(vao.obj);\n    }\n    this._deleteBuffer(vao.buffers.indicies);\n    this._deleteBuffer(vao.buffers.position);\n    this._deleteBuffer(vao.buffers.uv);\n  }\n  getUniformLocations(program, uniforms) {\n    const gl = this._gl;\n    const uniformLocations = Object.keys(uniforms).reduce((locations, key) => {\n      locations[key] = gl.getUniformLocation(program, key);\n      return locations;\n    }, {});\n    return Object.assign(Object.assign({}, this._getCommonUniformLocations(program)), uniformLocations);\n  }\n  updateCommonUniforms(entity, camera, shaderProgram) {\n    const gl = this._gl;\n    const uniformLocations = shaderProgram.uniformLocations;\n    // We're using \"matrix\"(=local matrix) here for efficiency\n    // As projection doesn't require world matrix, as it doesn't have any parent or child\n    const matrix = entity.matrix;\n    const mvMatrix = mat4.create();\n    mat4.multiply(mvMatrix, camera.viewMatrix, matrix);\n    gl.uniformMatrix4fv(uniformLocations.uMVMatrix, false, mvMatrix);\n    gl.uniformMatrix4fv(uniformLocations.uPMatrix, false, camera.projectionMatrix);\n  }\n  updateVRUniforms(shaderProgram, mvMatrix, pMatrix, eyeIndex) {\n    const gl = this._gl;\n    const uniformLocations = shaderProgram.uniformLocations;\n    gl.uniformMatrix4fv(uniformLocations.uMVMatrix, false, mvMatrix);\n    gl.uniformMatrix4fv(uniformLocations.uPMatrix, false, pMatrix);\n    if (uniformLocations.uEye) {\n      gl.uniform1f(uniformLocations.uEye, eyeIndex);\n    }\n  }\n  updateUniforms(shaderProgram) {\n    const gl = this._gl;\n    const uniforms = shaderProgram.uniforms;\n    const uniformLocations = shaderProgram.uniformLocations;\n    for (const key in uniforms) {\n      const uniform = uniforms[key];\n      const location = uniformLocations[key];\n      if (!uniform) continue;\n      if (uniform.needsUpdate) {\n        uniform.update(gl, location, this._isWebGL2);\n      }\n    }\n  }\n  releaseShaderResources(shaderProgram) {\n    const gl = this._gl;\n    const uniforms = shaderProgram.uniforms;\n    for (const key in uniforms) {\n      const uniform = uniforms[key];\n      if (!uniform) continue;\n      if (uniform.needsUpdate) {\n        uniform.destroy(gl);\n      }\n    }\n    gl.deleteProgram(shaderProgram.program);\n  }\n  useProgram(shaderProgram) {\n    const gl = this._gl;\n    gl.useProgram(shaderProgram.program);\n  }\n  createProgram(vertexShader, fragmentShader) {\n    const gl = this._gl;\n    const program = gl.createProgram();\n    const vs = this._compileShader(gl.VERTEX_SHADER, vertexShader);\n    const fs = this._compileShader(gl.FRAGMENT_SHADER, fragmentShader);\n    gl.attachShader(program, vs);\n    gl.attachShader(program, fs);\n    gl.bindAttribLocation(program, 0, \"position\");\n    gl.bindAttribLocation(program, 1, \"uv\");\n    gl.linkProgram(program);\n    if (this._debug && !gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      let shaderLog = null;\n      if (!gl.getShaderParameter(vs, gl.COMPILE_STATUS)) {\n        shaderLog = gl.getShaderInfoLog(vs);\n      } else if (!gl.getShaderParameter(fs, gl.COMPILE_STATUS)) {\n        shaderLog = gl.getShaderInfoLog(fs);\n      }\n      throw new View360Error(ERROR.MESSAGES.FAILED_LINKING_PROGRAM(gl.getProgramInfoLog(program), shaderLog), ERROR.CODES.FAILED_LINKING_PROGRAM);\n    }\n    gl.deleteShader(vs);\n    gl.deleteShader(fs);\n    return program;\n  }\n  createWebGLTexture(texData) {\n    const gl = this._gl;\n    const texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, texData.wrapS);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, texData.wrapT);\n    if (!texData.isVideo() && this._isWebGL2) {\n      const gl2 = gl;\n      gl2.texStorage2D(gl2.TEXTURE_2D, 1, gl2.RGBA8, texData.width, texData.height);\n    }\n    return texture;\n  }\n  createWebGLCubeTexture(texData, size) {\n    const gl = this._gl;\n    const texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_CUBE_MAP, texture);\n    gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_S, texData.wrapS);\n    gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_T, texData.wrapT);\n    if (this._isWebGL2) {\n      const gl2 = gl;\n      gl2.texStorage2D(gl2.TEXTURE_CUBE_MAP, 1, gl2.RGBA8, size, size);\n    }\n    return texture;\n  }\n  makeXRCompatible() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const gl = this._gl;\n      const attributes = gl.getContextAttributes();\n      if (attributes && attributes.xrCompatible !== true) {\n        yield gl.makeXRCompatible();\n      }\n    });\n  }\n  bindXRLayer(session) {\n    const gl = this._gl;\n    const xrLayer = new XRWebGLLayer(session, gl);\n    session.updateRenderState({\n      baseLayer: xrLayer\n    });\n  }\n  bindXRFrame(frame) {\n    const gl = this._gl;\n    const session = frame.session;\n    const baseLayer = session.renderState.baseLayer;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, baseLayer.framebuffer);\n  }\n  useDefaultFrameBuffer() {\n    const gl = this._gl;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n  }\n  _createBuffer() {\n    return this._gl.createBuffer();\n  }\n  _deleteBuffer(buffer) {\n    return this._gl.deleteBuffer(buffer);\n  }\n  _createNativeVAO() {\n    const gl = this._gl;\n    if (this._isWebGL2) {\n      return gl.createVertexArray();\n    } else {\n      const ext = this._extensions.vao;\n      return (ext === null || ext === void 0 ? void 0 : ext.createVertexArrayOES()) || null;\n    }\n  }\n  _bindNativeVAO(vao) {\n    const gl = this._gl;\n    if (this._isWebGL2) {\n      gl.bindVertexArray(vao);\n    } else {\n      const ext = this._extensions.vao;\n      ext === null || ext === void 0 ? void 0 : ext.bindVertexArrayOES(vao);\n    }\n  }\n  _deleteNativeVAO(vao) {\n    const gl = this._gl;\n    if (this._isWebGL2) {\n      gl.deleteVertexArray(vao);\n    } else {\n      const ext = this._extensions.vao;\n      ext === null || ext === void 0 ? void 0 : ext.deleteVertexArrayOES(vao);\n    }\n  }\n  _supplyGeometryData(vao, shaderProgram) {\n    const geometry = vao.geometry;\n    this._supplyIndiciesData(geometry.indicies, vao.buffers.indicies);\n    this._supplyAttributeData(geometry.vertices, shaderProgram.program, \"position\", vao.buffers.position);\n    this._supplyAttributeData(geometry.uvs, shaderProgram.program, \"uv\", vao.buffers.uv);\n  }\n  _unbindBuffers() {\n    const gl = this._gl;\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n  }\n  _supplyIndiciesData(indicies, buffer) {\n    const gl = this._gl;\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indicies.data, gl.STATIC_DRAW);\n  }\n  _supplyAttributeData(attribute, program, name, buffer) {\n    const gl = this._gl;\n    const attribLocation = gl.getAttribLocation(program, name);\n    // Attribute not used\n    if (attribLocation < 0) return;\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    gl.bufferData(gl.ARRAY_BUFFER, attribute.data, gl.STATIC_DRAW);\n    gl.vertexAttribPointer(attribLocation, attribute.itemSize, gl.FLOAT, false, 0, 0);\n    gl.enableVertexAttribArray(attribLocation);\n  }\n  _compileShader(type, src) {\n    const gl = this._gl;\n    const shader = gl.createShader(type);\n    gl.shaderSource(shader, src);\n    gl.compileShader(shader);\n    return shader;\n  }\n  _getCommonUniformLocations(program) {\n    const gl = this._gl;\n    return {\n      uMVMatrix: gl.getUniformLocation(program, \"uMVMatrix\"),\n      uPMatrix: gl.getUniformLocation(program, \"uPMatrix\")\n    };\n  }\n  _getContext(canvas) {\n    const webglIdentifiers = [\"webgl2\", \"webgl\", \"experimental-webgl\", \"webkit-3d\", \"moz-webgl\"];\n    let context = null;\n    let isWebGL2 = false;\n    const contextAttributes = {\n      preserveDrawingBuffer: false,\n      antialias: false\n    };\n    const onWebglContextCreationError = e => e.statusMessage;\n    canvas.addEventListener(EVENTS$1.CONTEXT_CREATE_ERROR, onWebglContextCreationError);\n    for (const identifier of webglIdentifiers) {\n      try {\n        context = canvas.getContext(identifier, contextAttributes);\n        isWebGL2 = identifier === \"webgl2\";\n      } catch (t) {} // eslint-disable-line no-empty\n      if (context) {\n        break;\n      }\n    }\n    canvas.removeEventListener(EVENTS$1.CONTEXT_CREATE_ERROR, onWebglContextCreationError);\n    if (!context) {\n      throw new View360Error(ERROR.MESSAGES.WEBGL_NOT_SUPPORTED, ERROR.CODES.WEBGL_NOT_SUPPORTED);\n    }\n    return {\n      gl: context,\n      isWebGL2\n    };\n  }\n}\n\n/*\r\n * Copyright (c) 2023-present NAVER Corp.\r\n * egjs projects are licensed under the MIT license\r\n */\n/**\r\n * Projection renderer, based on WebGL\r\n * @ko WebGL 기반의 프로젝션 렌더러\r\n * @since 4.0.0\r\n */\nclass WebGLRenderer {\n  /**\r\n   * Canvas element\r\n   * @ko 캔버스 엘리먼트\r\n   * @since 4.0.0\r\n   */\n  get canvas() {\n    return this._canvas;\n  }\n  /**\r\n   * Canvas's width (`devicePixelRatio` is not applied)\r\n   * @ko 캔버스의 보이는 너비 (`devicePixelRatio`가 적용되지 않은)\r\n   * @since 4.0.0\r\n   */\n  get width() {\n    return this._elementSize.x;\n  }\n  /**\r\n   * Canvas's height (`devicePixelRatio` is not applied)\r\n   * @ko 캔버스의 높이 (`devicePixelRatio`가 적용되지 않은)\r\n   * @since 4.0.0\r\n   */\n  get height() {\n    return this._elementSize.y;\n  }\n  /**\r\n   * Current `devicePixelRatio` value.\r\n   * @ko 현재 `devicePixelRatio` 값.\r\n   * @since 4.0.0\r\n   * @example\r\n   * ```js\r\n   * cosnt renderingWidth = view360.renderer.width * view360.renderer.pixelRatio;\r\n   * ```\r\n   */\n  get pixelRatio() {\n    return this._pixelRatio;\n  }\n  /**\r\n   * Width / height ratio (= width / height)\r\n   * @ko 너비 / 높이의 비율 (= width / height)\r\n   * @since 4.0.0\r\n   * @example\r\n   * ```js\r\n   * const aspect = view360.renderer.width / view360.renderer.pixelRatio;\r\n   * assert(aspect === view360.renderer.aspect);\r\n   * ```\r\n   */\n  get aspect() {\n    return this._elementSize.x / this._elementSize.y;\n  }\n  /**\r\n   * Create new instance\r\n   * @ko 새 인스턴스를 생성합니다.\r\n   * @param canvas - Canvas element {@ko 캔버스 엘리먼트}\r\n   * @param debug - Whether to enable WebGL debugging {@ko WebGL debug 활성화 여부 }\r\n   */\n  constructor(canvas, debug) {\n    this._canvas = canvas;\n    this._elementSize = {\n      x: 0,\n      y: 0\n    };\n    this._pixelRatio = 1;\n    this.ctx = new WebGLContext(canvas, debug);\n  }\n  /**\r\n   * Destroy instance and release all resources.\r\n   * @ko 인스턴스를 제거하고 사용된 리소스를 전부 해제합니다.\r\n   * @since 4.0.0\r\n   */\n  destroy() {\n    const canvas = this._canvas;\n    this.ctx.destroy();\n    canvas.width = 1;\n    canvas.height = 1;\n  }\n  /**\r\n   * Resize canvas and renew inner size cache.\r\n   * @ko 캔버스의 크기를 재계산해서 내부의 사이즈 캐시값을 갱신합니다.\r\n   * @since 4.0.0\r\n   */\n  resize() {\n    const canvas = this._canvas;\n    const canvasSize = this._elementSize;\n    const devicePixelRatio = window.devicePixelRatio;\n    canvasSize.x = canvas.clientWidth;\n    canvasSize.y = canvas.clientHeight;\n    canvas.width = canvasSize.x * devicePixelRatio;\n    canvas.height = canvasSize.y * devicePixelRatio;\n    this._pixelRatio = devicePixelRatio;\n    this.ctx.resize();\n  }\n  /**\r\n   * Render projection\r\n   * @ko 프로젝션을 렌더링합니다.\r\n   * @param projection - Projection to render {@ko 렌더링할 프로젝션}\r\n   * @param cameraa - Camera instance {@ko 카메라의 인스턴스}\r\n   * @since 4.0.0\r\n   */\n  render(mesh, camera) {\n    const ctx = this.ctx;\n    if (ctx.lost) return;\n    ctx.clear();\n    ctx.useProgram(mesh.program);\n    ctx.updateCommonUniforms(mesh, camera, mesh.program);\n    mesh.update({\n      camera\n    });\n    ctx.updateUniforms(mesh.program);\n    ctx.draw(mesh.vao, mesh.program);\n  }\n  /**\r\n   * Render VR frame, only used for rendering frames inside VR sessions.\r\n   * @ko VR 프레임을 렌더링합니다. VR 세션 진입 도중에만 사용됩니다.\r\n   * @internal\r\n   * @param mesh - Triangle mesh to render {@ko 렌더링할 메쉬}\r\n   * @param vr - Instance of XRManager {@ko XRManager의 인스턴스}\r\n   * @param frame - VR frame {@ko VR 프레임}\r\n   * @since 4.0.0\r\n   */\n  renderVR(mesh, vr, frame) {\n    const ctx = this.ctx;\n    const eyeParams = vr.getEyeParams(frame);\n    if (!eyeParams || !mesh) return;\n    ctx.bindXRFrame(frame);\n    ctx.useProgram(mesh.program);\n    ctx.updateUniforms(mesh.program);\n    eyeParams.forEach((eye, eyeIndex) => {\n      const viewport = eye.viewport;\n      // We're using \"mesh.matrix\"(=local matrix) here for efficiency\n      // As projection doesn't require world matrix, as it doesn't have any parent or child\n      const mvMatrix = mat4.multiply(mat4.create(), eye.vMatrix, mesh.matrix);\n      ctx.viewport(viewport.x, viewport.y, viewport.width, viewport.height);\n      ctx.updateVRUniforms(mesh.program, mvMatrix, eye.pMatrix, eyeIndex);\n      ctx.draw(mesh.vao, mesh.program);\n    });\n  }\n}\n\n/**\r\n * Panorama 360 image viewer\r\n * @ko 파노라마 360 이미지 뷰어\r\n * @since 4.0.0\r\n * @see View360Options\r\n * @see View360Events\r\n */\nclass View360 extends Component {\n  /**\r\n   * Root element (`.view360-container`)\r\n   * @ko 루트 엘리먼트 (`.view360-container`)\r\n   * @since 4.0.0\r\n   * @readonly\r\n   * @example\r\n   * ```html\r\n   * <div id=\"viewer\" class=\"view360-container\">\r\n   *   <canvas class=\"view360-canvas\"></canvas>\r\n   * </div>\r\n   * ```\r\n   * ```ts\r\n   * import View360 from \"@egjs/view360\";\r\n   *\r\n   * const viewer = new View360(\"#viewer\");\r\n   * console.log(viewer.rootEl); // Element with id \"viewer\"\r\n   * ```\r\n   */\n  get rootEl() {\n    return this._rootEl;\n  }\n  /**\r\n   * Projection renderer.\r\n   * @ko 프로젝션 렌더러.\r\n   * @since 4.0.0\r\n   * @readonly\r\n   */\n  get renderer() {\n    return this._renderer;\n  }\n  /**\r\n   * Projection camera.\r\n   * @ko 프로젝션 카메라.\r\n   * @since 4.0.0\r\n   * @readonly\r\n   */\n  get camera() {\n    return this._camera;\n  }\n  /**\r\n   * Rotate/Zoom Controller.\r\n   * @ko 회전/줌 컨트롤러.\r\n   * @since 4.0.0\r\n   * @readonly\r\n   */\n  get control() {\n    return this._control;\n  }\n  /**\r\n   * WebXR-based VR manager.\r\n   * @ko WebXR 기반의 VR 기능 매니저 인스턴스.\r\n   * @since 4.0.0\r\n   * @readonly\r\n   * @example\r\n   * ```ts\r\n   * // Example: Enter VR\r\n   * // This must be called on user interaction, else will be rejected.\r\n   * viewer.vr.enter();\r\n   * ```\r\n   */\n  get vr() {\n    return this._vr;\n  }\n  /**\r\n   * Hotspot renderer.\r\n   * You can also change options of {@link View360Options#hotspot} with this.\r\n   * @ko 핫스팟 렌더러 인스턴스.\r\n   * {@link View360Options#hotspot} 옵션 변경도 가능합니다.\r\n   * @since 4.0.0\r\n   * @readonly\r\n   */\n  get hotspot() {\n    return this._hotspot;\n  }\n  /**\r\n   * An array of plugins added.\r\n   * @ko 추가된 플러그인의 배열\r\n   * @since 4.0.0\r\n   * @readonly\r\n   * @example\r\n   * ```ts\r\n   * const viewer = new View360(\"#el_id\", {\r\n   *   plugins: [new ControlBar()]\r\n   * });\r\n   *\r\n   * console.log(viewer.plugins); // [ControlBar]\r\n   *\r\n   * viewer.addPlugins(new LoadingSpinner()) // [ControlBar, LoadingSpinner];\r\n   * ```\r\n   */\n  get plugins() {\n    return this._plugins;\n  }\n  /**\r\n   * An instance of {@link Projection} that currently enabled. `null` if not initialized yet.\r\n   * You should call {@link View360#load} to change panorama src or projection type.\r\n   * @ko 현재 사용중인 {@link Projection}의 인스턴스. 프로젝션을 활성화하지 않았을 경우 `null`입니다.\r\n   * 파노라마 이미지 소스나 프로젝션 타입을 변경하려면 {@link View360#load}를 호출하면 됩니다.\r\n   * @since 4.0.0\r\n   * @example\r\n   * ```ts\r\n   * const viewer = new View360\r\n   * ```\r\n   */\n  get projection() {\n    return this._projection;\n  }\n  set projection(val) {\n    if (this._initialized && val) {\n      this.load(val);\n    } else {\n      this._projection = val;\n    }\n  }\n  /**\r\n   * An instance of triangle mesh to render.\r\n   * @ko 렌더링할 triangle mesh의 인스턴스\r\n   * @internal\r\n   * @since 4.0.0\r\n   * @readonly\r\n   */\n  get mesh() {\n    return this._mesh;\n  }\n  /**\r\n   * A boolean value whether {@link View360#init init()} is called before.\r\n   * @ko {@link View360#init init()}이 호출되었는지 여부를 가리키는 값\r\n   * @since 4.0.0\r\n   * @readonly\r\n   * @example\r\n   * ```ts\r\n   * const viewer = new View360(\"#el\", { autoInit: false });\r\n   *\r\n   * console.log(viewer.initialized); // false\r\n   *\r\n   * await viewer.init();\r\n   *\r\n   * console.log(viewer.initialized); // true\r\n   * ```\r\n   */\n  get initialized() {\n    return this._initialized;\n  }\n  /**\r\n   * Instance of the Autoplay manager.\r\n   * You can also change {@link View360Options#autoplay} options with this.\r\n   * @ko Autoplay 기능의 매니저 인스턴스.\r\n   * 이 인스턴스를 통해 {@link View360Options#autoplay} 옵션을 변경하는 것도 가능합니다.\r\n   * @since 4.0.0\r\n   * @readonly\r\n   * @example\r\n   * ```ts\r\n   * // Disable autoplay\r\n   * viewer.autoplay.disable();\r\n   * ```\r\n   */\n  get autoplay() {\n    return this._autoplay;\n  }\n  /**\r\n   * When this value is `true` and {@link View360Options#projection} is set, {@link View360#init init()} will be called automatically when instance is created.\r\n   * @ko 이 값이 `true`이고, {@link View360Options#projection}이 설정되었으면, 인스턴스 생성 시점에 자동으로 {@link View360#init init()}을 호출합니다.\r\n   * @default true\r\n   * @since 4.0.0\r\n   * @example\r\n   * ```ts\r\n   * import View360, { EquirectProjection, EVENTS } from \"@egjs/view360\";\r\n   *\r\n   * // viewer.init() is called on instance creation\r\n   * // But as `init` is asynchronous, you should wait for \"ready\" event if you want to do something after initialization.\r\n   * const viewer = new View360(\"#el_id\", {\r\n   *   autoInit: true,\r\n   *   projection: new EquirectProjection({ src: \"SRC_TO_URL\" })\r\n   * });\r\n   *\r\n   * console.log(viewer.initialized); // false, as `init` is asynchronous\r\n   *\r\n   * viewer.once(EVENTS.READY, () => {\r\n   *   console.log(viewer.initialized); // true\r\n   * });\r\n   * ```\r\n   */\n  get autoInit() {\n    return this._autoInit;\n  }\n  /**\r\n   * When `true`, {@link View360#resize} is called when the canvas size is changed.\r\n   * @ko `true`일 경우, 캔버스의 크기가 변경되었을 때 자동으로 {@link View360#resize}를 호출합니다.\r\n   * @default true\r\n   * @since 4.0.0\r\n   * @see View360#useResizeObserver\r\n   * @example\r\n   * ```ts\r\n   * const viewer = new View360(\"#el_id\", {\r\n   *   autoResize: true\r\n   * });\r\n   *\r\n   * // This can trigger `viewer.resize()` if the canvas size was not 400px\r\n   * const canvas = viewer.renderer.canvas;\r\n   * canvas.style.width = \"400px\";\r\n   * ```\r\n   */\n  get autoResize() {\n    return this._autoResize;\n  }\n  /**\r\n   * CSS selector for canvas element to render panorama image/video.\r\n   * The canvas element should be placed inside the root element. (Dont' have to be direct child)\r\n   * @ko 파노라마 이미지/비디오를 렌더링할 canvas 엘리먼트의 CSS 선택자\r\n   * 캔버스 엘리먼트는 루트 엘리먼트 내부에 있어야합니다. 루트 엘리먼트의 직계 자식 엘리먼트(Direct child element)일 필요는 없습니다.\r\n   * @default \"canvas\"\r\n   * @since 4.0.0\r\n   * @example\r\n   * ```html\r\n   * <div class=\"view360-container\">\r\n   *   <canvas id=\"not_this_one\"></canvas>\r\n   *   <!-- This will be selected -->\r\n   *   <canvas id=\"canvas_to_select\"></canvas>\r\n   * </div>\r\n   * ```\r\n   *\r\n   * ```ts\r\n   * const viewer = new View360(\"#el_id\", {\r\n   *   canvasSelector: \"#canvas_to_select\"\r\n   * });\r\n   * ```\r\n   */\n  get canvasSelector() {\n    return this._canvasSelector;\n  }\n  /**\r\n   * When `true`, it will use {@link ResizeObserver} API to detect canvas size change when {@link View360Options#autoResize} is enabled.\r\n   * @ko `true`일 때 {@link View360Options#autoResize}가 활성화되었으면, 사용 가능한 환경에서 {@link ResizeObserver} API를 사용해서 캔버스 크기 변화를 추적합니다.\r\n   * @default true\r\n   * @since 4.0.0\r\n   */\n  get useResizeObserver() {\n    return this._useResizeObserver;\n  }\n  /**\r\n   * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex tabindex} attribute for the canvas element.\r\n   * This is necessary for the keyboard controls.\r\n   * By default, `0` will be assigned. `null` to disable.\r\n   * @ko 캔버스 엘리먼트에 적용할 {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex tabindex} 어트리뷰트의 값.\r\n   * 이 값을 설정해야만 키보드 컨트롤을 사용 가능합니다.\r\n   * 기본값으로 `0`이 설정됩니다. `null`로 지정하면 `tabindex`를 설정하지 않습니다.\r\n   * @see RotateControlOptions#disableKeyboard\r\n   * @default 0\r\n   * @since 4.0.0\r\n   * @example\r\n   * ```ts\r\n   * const viewer = new View360(\"#el_id\", {\r\n   *   tabindex: 5\r\n   * });\r\n   * ```\r\n   *\r\n   * ```html\r\n   * <!-- After init -->\r\n   * <div class=\"view360-container\">\r\n   *   <canvas class=\"view360-canvas\" tabindex=\"5\"></canvas>\r\n   * </div>\r\n   * ```\r\n   */\n  get tabIndex() {\n    return this._tabIndex;\n  }\n  set tabIndex(val) {\n    const canvas = this._renderer.canvas;\n    this._tabIndex = val;\n    if (val != null) {\n      canvas.tabIndex = val;\n    } else {\n      canvas.removeAttribute(\"tabindex\");\n    }\n  }\n  /**\r\n   * A maximum delta time between frames in seconds.\r\n   * It can prevent camera or control changing too fast when frame being late.\r\n   * @ko 프레임간 시간 차이의 최대값. (초 단위)\r\n   * 퍼포먼스 등의 이유로 프레임 렌더링이 늦어졌을 때, 화면이 갑작스럽게 바뀌는 것을 막아줍니다.\r\n   * @default 1 / 30\r\n   * @since 4.0.0\r\n   */\n  get maxDeltaTime() {\n    return this._animator.maxDeltaTime;\n  }\n  set maxDeltaTime(val) {\n    this._animator.maxDeltaTime = val;\n  }\n  /**\r\n   * Enable WebGL debugging. Setting this to `true` can decrease performance.\r\n   * This is used internally on developing View360.\r\n   * @ko WebGL 디버깅을 활성화합니다. 이 값을 `true`로 할 경우 성능이 하락할 수 있습니다.\r\n   * 이 옵션은 View360을 개발하기 위해 내부적으로 사용됩니다.\r\n   * @default false\r\n   */\n  get debug() {\n    return this._debug;\n  }\n  set debug(val) {\n    this._debug = val;\n  }\n  // Camera options\n  /**\r\n   * Initial yaw (y-axis rotation) value for camera. (in degrees, °)\r\n   * As View360 uses right-handed coordinate system internally, camera will rotate counter-clockwise by this value.\r\n   * @ko 카메라의 초기 yaw(y축 회전)값 (도 단위, °)\r\n   * View360은 오른손 좌표계를 사용하기 때문에, 카메라가 해당 값만큼 시계 반대방향으로 회전합니다.\r\n   * @default 0\r\n   * @since 4.0.0\r\n   * @example\r\n   * ```ts\r\n   * const viewer = new View360(\"#el_id\", {\r\n   *   initialYaw: 30\r\n   * });\r\n   *\r\n   * viewer.on(\"ready\", () => {\r\n   *   console.log(viewer.camera.yaw); // 30\r\n   * });\r\n   * ```\r\n   */\n  get initialYaw() {\n    return this._camera.initialYaw;\n  }\n  set initialYaw(val) {\n    this._camera.initialYaw = val;\n  }\n  /**\r\n   * Initial pitch (x-axis rotation) value for camera. (in degrees, °)\r\n   * As View360 uses right-handed coordinate system internally, positive value will make camera to look upside, while negative value will look down.\r\n   * @ko 카메라의 초기 pitch(x축 회전)값 (도 단위, °)\r\n   * View360은 오른손 좌표계를 사용하기 때문에, 양(+)의 값은 카메라가 위를 보게 하고, 음(-)의 값은 카메라가 아래를 보게 합니다.\r\n   * @default 0\r\n   * @since 4.0.0\r\n   * @example\r\n   * ```ts\r\n   * const viewer = new View360(\"#el_id\", {\r\n   *   initialPitch: 60\r\n   * });\r\n   *\r\n   * viewer.on(\"ready\", () => {\r\n   *   console.log(viewer.camera.pitch); // 60\r\n   * });\r\n   * ```\r\n   */\n  get initialPitch() {\n    return this._camera.initialPitch;\n  }\n  set initialPitch(val) {\n    this._camera.initialPitch = val;\n  }\n  /**\r\n   * Initial zoom value for camera.\r\n   * Setting this value to `2` will enlarge panorama 200% by width.\r\n   * @ko 카메라의 초기 줌 값.\r\n   * 이 값을 `2`로 설정할 경우 파노라마 이미지를 가로 기준 200%만큼 확대합니다.\r\n   * @default 1\r\n   * @since 4.0.0\r\n   * @example\r\n   * ```ts\r\n   * const viewer = new View360(\"#el_id\", {\r\n   *   initialZoom: 2\r\n   * });\r\n   *\r\n   * viewer.on(\"ready\", () => {\r\n   *   console.log(viewer.camera.zoom); // 2\r\n   * });\r\n   * ```\r\n   */\n  get initialZoom() {\n    return this._camera.initialZoom;\n  }\n  set initialZoom(val) {\n    this._camera.initialZoom = val;\n  }\n  /**\r\n   * Restrict yaw(y-axis rotation) range. (in degrees, °)\r\n   * @ko yaw(y축 회전) 범위를 제한합니다. (도 단위, °)\r\n   * @since 4.0.0\r\n   * @example\r\n   * ```ts\r\n   * const viewer = new View360(\"#el_id\", {\r\n   *   yawRange: [-30, 30]\r\n   * });\r\n   *\r\n   * viewer.on(\"ready\", () => {\r\n   *   console.log(viewer.camera.yaw); // 0\r\n   *   viewer.camera.lookAt({ yaw: 60  });\r\n   *   console.log(viewer.camera.yaw); // 30\r\n   * });\r\n   * ```\r\n   */\n  get yawRange() {\n    return this._camera.yawRange;\n  }\n  set yawRange(val) {\n    this._camera.yawRange = val;\n    if (this._projection) this._projection.updateCamera(this._camera);\n  }\n  /**\r\n   * Restrict pitch(x-axis rotation) range. (in degrees, °)\r\n   * @ko pitch(x축 회전) 범위를 제한합니다. (도 단위, °)\r\n   * @default null\r\n   * @since 4.0.0\r\n   * @example\r\n   * ```ts\r\n   * const viewer = new View360(\"#el_id\", {\r\n   *   pitchRange: [-45, 45]\r\n   * });\r\n   *\r\n   * viewer.on(\"ready\", () => {\r\n   *   console.log(viewer.camera.pitch); // 0\r\n   *   viewer.camera.lookAt({ pitch: 60  });\r\n   *   console.log(viewer.camera.pitch); // 45\r\n   * });\r\n   * ```\r\n   */\n  get pitchRange() {\n    return this._camera.pitchRange;\n  }\n  set pitchRange(val) {\n    this._camera.pitchRange = val;\n    if (this._projection) this._projection.updateCamera(this._camera);\n  }\n  /**\r\n   * Restrict camera zoom range.\r\n   * If `null`, a default zoom range from `0.6` to `10` will be used.\r\n   * @ko 카메라 줌 범위를 제한합니다.\r\n   * `null`일 경우 기본값으로 `0.6`에서 `10`의 범위를 사용합니다.\r\n   * @default null\r\n   * @since 4.0.0\r\n   * @example\r\n   * ```ts\r\n   * const viewer = new View360(\"#el_id\", {\r\n   *   zoomRange: [0.5, 4]\r\n   * });\r\n   *\r\n   * viewer.on(\"ready\", () => {\r\n   *   console.log(viewer.camera.zoom); // 1\r\n   *   viewer.camera.lookAt({ zoom: 6  });\r\n   *   console.log(viewer.camera.zoom); // 4\r\n   * });\r\n   * ```\r\n   */\n  get zoomRange() {\n    return this._camera.zoomRange;\n  }\n  set zoomRange(val) {\n    this._camera.zoomRange = val;\n    if (this._projection) this._projection.updateCamera(this._camera);\n  }\n  /**\r\n   * Camera's horizontal FOV(Field of View). (in degrees, °)\r\n   * @ko 카메라의 수평 FOV(Field of View) 값. (도 단위, °)\r\n   * @default 90\r\n   * @since 4.0.0\r\n   * @example\r\n   * ```ts\r\n   * // Init with fov: 120\r\n   * const viewer = new View360(\"#el_id\", { fov: 120 });\r\n   *\r\n   * // Back to 90\r\n   * viewer.fov = 90;\r\n   * ```\r\n   */\n  get fov() {\n    return this._camera.fov;\n  }\n  set fov(val) {\n    const camera = this._camera;\n    const control = this._control;\n    camera.fov = val;\n    camera.updateMatrix();\n    control.sync();\n  }\n  // Control options\n  /**\r\n   * A control for camera rotation.\r\n   * You can also change options of {@link View360Options#rotate} with this.\r\n   * @ko 카메라 회전을 담당하는 컨트롤.\r\n   * {@link View360Options#rotate} 옵션 변경도 가능합니다.\r\n   * @since 4.0.0\r\n   * @readonly\r\n   */\n  get rotate() {\n    return this._control.rotate;\n  }\n  /**\r\n   * A control for camera zoom.\r\n   * You can also change options of {@link View360Options#zoom} with this.\r\n   * @ko 카메라 줌을 담당하는 컨트롤.\r\n   * {@link View360Options#zoom} 옵션 변경도 가능합니다.\r\n   * @since 4.0.0\r\n   * @readonly\r\n   */\n  get zoom() {\n    return this._control.zoom;\n  }\n  /**\r\n   * A control for camera rotation with gyroscope input.\r\n   * You can also change options of {@link View360Options#gyro} with this.\r\n   * @ko 자이로스코프를 통한 카메라 회전을 담당하는 컨트롤.\r\n   * {@link View360Options#gyro} 옵션 변경도 가능합니다.\r\n   * @since 4.0.0\r\n   * @readonly\r\n   */\n  get gyro() {\n    return this._control.gyro;\n  }\n  /**\r\n   * Apply CSS {@link https://developer.mozilla.org/en-US/docs/Web/CSS/cursor cursor} by current state of input when using mouse.\r\n   * If `true`, this will add CSS style to canvas element. It'll apply `cursor: \"grab\"` by default and `cursor: \"grabbing\"` when holding the mouse button.\r\n   * @ko 마우스 사용시 CSS {@link https://developer.mozilla.org/en-US/docs/Web/CSS/cursor cursor}값을 자동으로 변경할지 여부.\r\n   * `true`일 경우 기본 상태에서 `cursor: \"grab\"`을, 입력 도중에 `cursor: \"grabbing\"`을 캔버스에 적용합니다.\r\n   * @default true\r\n   * @since 4.0.0\r\n   */\n  get useGrabCursor() {\n    return this._control.useGrabCursor;\n  }\n  set useGrabCursor(val) {\n    this._control.useGrabCursor = val;\n  }\n  /**\r\n   * Disable context menu which pops up on mouse right click.\r\n   * @ko 마우스 우클릭시 표시되는 컨텍스트 메뉴를 비활성화합니다.\r\n   * @default false\r\n   * @since 4.0.0\r\n   */\n  get disableContextMenu() {\n    return this._control.disableContextMenu;\n  }\n  set disableContextMenu(val) {\n    this._control.disableContextMenu = val;\n  }\n  /**\r\n   * If `true`, enables scroll on mobile(touch) devices on canvas.\r\n   * :::caution\r\n   * When this option is enabled, users must swipe horizontally first then vertically to change view up or down.\r\n   * :::\r\n   * @ko `true`로 설정할 경우, 모바일(터치) 환경의 캔버스 영역 내에서 스크롤을 가능하게 합니다.\r\n   * :::caution\r\n   * 이 값을 활성화할 경우, 사용자가 카메라 뷰를 위/아래로 바꾸기 위해서는 먼저 가로로 스와이프한 이후에 세로로 스와이프해야만 합니다.\r\n   * :::\r\n   * @since 4.0.0\r\n   * @default true\r\n   */\n  get scrollable() {\n    return this._control.scrollable;\n  }\n  set scrollable(val) {\n    this._control.scrollable = val;\n  }\n  /**\r\n   * If `true`, enables scroll by mouse wheel on canvas.\r\n   * :::caution\r\n   * When this option is enabled, zoom by mouse wheel will be disabled.\r\n   * :::\r\n   * @ko `true`로 설정할 경우, 캔버스 영역 내에서 마우스 휠을 이용한 페이지 스크롤이 가능해집니다.\r\n   * :::caution\r\n   * 이 값을 활성화할 경우, 마우스 휠을 통한 줌이 불가능하게 됩니다.\r\n   * :::\r\n   * @since 4.0.0\r\n   * @default false\r\n   */\n  get wheelScrollable() {\n    return this._control.wheelScrollable;\n  }\n  set wheelScrollable(val) {\n    this._control.wheelScrollable = val;\n  }\n  /**\r\n   * Create new instance of View360\r\n   * @ko View360의 새로운 인스턴스를 생성합니다\r\n   * @param root - Root element(`.view360-container`) to mount View360\r\n   * Can be either a CSS selector or HTMLElement.\r\n   * {@ko View360을 마운트할 루트 엘리먼트, CSS 셀렉터나 HTMLElement를 지정 가능합니다.}\r\n   * @param options - Options to apply\r\n   * {@ko 적용할 옵션들}\r\n   * @example\r\n   * ```ts\r\n   * import View360, { EquirectProjection } from \"@egjs/view360\";\r\n   *\r\n   * // Create new View360 instance\r\n   * const viewer = new View360(\"#id-of-a-container\", {\r\n   *   projection: new EquirectProjection({\r\n   *     src: \"URL_TO_PANORAMA_IMAGE_OR_VIDEO\",\r\n   *   })\r\n   * });\r\n   * ```\r\n   */\n  constructor(root, {\n    projection = null,\n    initialYaw = 0,\n    initialPitch = 0,\n    initialZoom = 1,\n    yawRange = null,\n    pitchRange = null,\n    zoomRange = null,\n    fov = 90,\n    useGrabCursor = true,\n    disableContextMenu = false,\n    rotate = true,\n    zoom = true,\n    gyro = false,\n    scrollable = true,\n    wheelScrollable = false,\n    autoplay = false,\n    hotspot = {},\n    autoInit = true,\n    autoResize = true,\n    canvasSelector = \"canvas\",\n    useResizeObserver = true,\n    on = {},\n    plugins = [],\n    maxDeltaTime = 1 / 30,\n    tabIndex = 0,\n    debug = false\n  } = {}) {\n    super();\n    /**\r\n     * Render a single panorama image/video frame.\r\n     * Rendering is performed automatically on demand, so you usually don't have to call this.\r\n     * Call this when a frame is not renewed after changing options.\r\n     * @ko 파노라마 이미지/비디오의 한 프레임을 렌더링합니다.\r\n     * 프레임 갱신은 보통 필요한 때에만 자동적으로 이루어지기 때문에, 보통은 이 메소드를 호출할 필요는 없습니다.\r\n     * 옵션 변경 이후에도 프레임 갱신이 이루어지지 않는다면, 이 메소드를 호출해주세요.\r\n     * @param delta Delta time in milisec. {@ko 프레임간 시간 차이, 밀리초 단위}\r\n     * @since 4.0.0\r\n     */\n    this.renderFrame = delta => {\n      const camera = this._camera;\n      const renderer = this._renderer;\n      const control = this._control;\n      const hotspot = this._hotspot;\n      const autoPlayer = this._autoplay;\n      const mesh = this._mesh;\n      if (!mesh) return;\n      this._emit(EVENTS.BEFORE_RENDER);\n      if (autoPlayer.playing) {\n        autoPlayer.update(delta);\n        control.sync();\n      }\n      if (camera.animation) {\n        camera.animation.update(delta);\n      } else {\n        control.update(delta);\n      }\n      renderer.render(mesh, camera);\n      hotspot.render(camera);\n      if (camera.changed) {\n        this._emit(EVENTS.VIEW_CHANGE, {\n          yaw: camera.yaw,\n          pitch: camera.pitch,\n          zoom: camera.zoom,\n          quaternion: [camera.quaternion[0], camera.quaternion[1], camera.quaternion[2], camera.quaternion[3]]\n        });\n      }\n      camera.onFrameRender();\n      this._emit(EVENTS.RENDER);\n    };\n    this._renderFrameOnDemand = delta => {\n      const camera = this._camera;\n      const control = this._control;\n      const autoplay = this._autoplay;\n      const mesh = this._mesh;\n      const texture = mesh === null || mesh === void 0 ? void 0 : mesh.getTexture();\n      if (!this._initialized || !texture) return;\n      if (!camera.animation && !control.animating && !autoplay.playing && !texture.isVideo()) return;\n      this.renderFrame(delta);\n    };\n    this._renderVRFrame = (_delta, frame) => {\n      const vr = this._vr;\n      const mesh = this._mesh;\n      const renderer = this._renderer;\n      if (!mesh) return;\n      this._emit(EVENTS.BEFORE_RENDER);\n      renderer.renderVR(mesh, vr, frame);\n      this._emit(EVENTS.RENDER);\n    };\n    this._rootEl = getElement(root);\n    this._plugins = plugins;\n    this._initialized = false;\n    // Options\n    this._autoInit = autoInit;\n    this._autoResize = autoResize;\n    this._canvasSelector = canvasSelector;\n    this._useResizeObserver = useResizeObserver;\n    this._tabIndex = tabIndex;\n    this._debug = debug;\n    // Core components\n    const canvas = findCanvas(this._rootEl, canvasSelector);\n    this._renderer = new WebGLRenderer(canvas, debug);\n    this._camera = new Camera({\n      initialYaw,\n      initialPitch,\n      initialZoom,\n      fov,\n      yawRange,\n      pitchRange,\n      zoomRange\n    });\n    this._control = new PanoControl(canvas, this._camera, {\n      useGrabCursor,\n      scrollable,\n      wheelScrollable,\n      disableContextMenu,\n      rotate,\n      zoom,\n      gyro\n    });\n    this._animator = new FrameAnimator(maxDeltaTime);\n    this._autoplay = new Autoplay(this, canvas, autoplay);\n    this._projection = projection;\n    this._mesh = null;\n    this._autoResizer = new AutoResizer(useResizeObserver, () => this.resize());\n    this._vr = new XRManager(this._renderer.ctx);\n    this._hotspot = new HotspotRenderer(this._rootEl, this._renderer, hotspot);\n    this._addEventHandlers(on);\n    if (projection && autoInit) {\n      this.init();\n    }\n  }\n  /**\r\n   * Destroy instance and release all resources.\r\n   * @ko 인스턴스를 제거하고 모든 리소스를 해제합니다.\r\n   * @since 4.0.0\r\n   */\n  destroy() {\n    this._camera.destroy();\n    this._animator.stop();\n    this._renderer.destroy();\n    this._control.destroy();\n    this._autoResizer.disable();\n    if (this._mesh) {\n      this._mesh.destroy(this._renderer.ctx);\n      this._mesh = null;\n    }\n    this._plugins.forEach(plugin => plugin.destroy(this));\n    this._initialized = false;\n  }\n  /**\r\n   * Initialize inner components and load projection src.\r\n   * @ko 내부 컴포넌트들을 초기화하고 프로젝션 소스를 로드합니다.\r\n   * @since 4.0.0\r\n   */\n  init() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!this._projection) {\n        throw new View360Error(ERROR.MESSAGES.PROVIDE_PROJECTION_FIRST, ERROR.CODES.PROVIDE_PROJECTION_FIRST);\n      }\n      const renderer = this._renderer;\n      const camera = this._camera;\n      const control = this._control;\n      const animator = this._animator;\n      const hotspot = this._hotspot;\n      const projection = this._projection;\n      const canvas = renderer.canvas;\n      this._bindComponentEvents();\n      renderer.ctx.init();\n      this._resizeComponents();\n      camera.updateMatrix();\n      if (this._autoResize) {\n        this._autoResizer.enable(canvas);\n      }\n      if (!this._autoplay.enableBlocked) {\n        this._autoplay.enable();\n      }\n      this._plugins.forEach(plugin => {\n        plugin.init(this);\n      });\n      const texture = yield this._loadTexture(projection);\n      this._applyProjection(projection, texture);\n      hotspot.refresh();\n      animator.start(this._renderFrameOnDemand);\n      yield control.enable();\n      if (this._tabIndex != null && !canvas.hasAttribute(\"tabIndex\")) {\n        canvas.tabIndex = this._tabIndex;\n      }\n      this._initialized = true;\n      this.renderFrame(0);\n      this._emit(EVENTS.READY);\n    });\n  }\n  /**\r\n   * Load new panorama image/video and display it.\r\n   * This will {@link View360#init init()} View360 if it's not initialized yet.\r\n   * @ko 새로운 파노라마 이미지 혹은 비디오를 로드하고 표시합니다.\r\n   * 만약 View360이 아직 초기화되지 않았다면, {@link View360#init init()}을 호출합니다.\r\n   * @param projection - Projection & video options for new source. {@ko 새로운 파노라마 이미지/비디오에 적용할 옵션들}\r\n   * @returns `Promise<true>` if load was successful. {@ko 프로젝션 로드에 성공했을 경우 `Promise<true>`를 반환합니다. }\r\n   * @since 4.0.0\r\n   * @example\r\n   * ```ts\r\n   * // Change to video\r\n   * viewer.load({\r\n   *   src: \"URL_TO_NEW_VIDEO\",\r\n   *   video: true\r\n   * });\r\n   * ```\r\n   */\n  load(projection) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (!projection) return false;\n      if (this._initialized) {\n        const texture = yield this._loadTexture(projection);\n        this._applyProjection(projection, texture);\n        this.renderFrame(0);\n      } else {\n        // Should update internal options before init\n        this._projection = projection;\n        this.init();\n      }\n      return true;\n    });\n  }\n  /**\r\n   * Refresh component's size by current\r\n   * @ko View360이 내부적으로 캐시하고 있는 엘리먼트 크기를 현재 크기로 갱신합니다.\r\n   * @since 4.0.0\r\n   */\n  resize() {\n    if (!this._initialized) return;\n    this._resizeComponents();\n    // To prevent flickering, render immediately after resizing components\n    this.renderFrame(0);\n    const {\n      width,\n      height\n    } = this._renderer;\n    this._emit(EVENTS.RESIZE, {\n      width,\n      height\n    });\n  }\n  /**\r\n   * Add new plugins\r\n   * @ko 새로운 플러그인을 추가합니다.\r\n   * @param plugins Plugins to add {@ko 추가할 플러그인들}\r\n   * @see View360Options#plugins\r\n   * @since 4.0.0\r\n   * @example\r\n   * ```ts\r\n   * // Add a single plugin\r\n   * viewer.addPlugins(new ControlBar());\r\n   *\r\n   * // Add multiple plugins\r\n   * viewer.addPlugins(new ControlBar(), new LoadingSpinner());\r\n   * ```\r\n   */\n  addPlugins(...plugins) {\n    if (this._initialized) {\n      plugins.forEach(plugin => {\n        plugin.init(this);\n      });\n    }\n    this._plugins.push(...plugins);\n  }\n  /**\r\n   * Remove plugins.\r\n   * @ko 플러그인을 제거합니다.\r\n   * @param plugins Plugins to remove {@ko 제거할 플러그인들}\r\n   * @since 4.0.0\r\n   * @example\r\n   * ```ts\r\n   * // Remove a single plugin\r\n   * viewer.removePlugins(plugin1);\r\n   *\r\n   * // Remove multiple plugins\r\n   * viewer.removePlugins(plugin2, plugin3);\r\n   * ```\r\n   */\n  removePlugins(...plugins) {\n    plugins.forEach(plugin => {\n      const pluginIdx = this._plugins.indexOf(plugin);\n      if (pluginIdx < 0) return;\n      plugin.destroy(this);\n      this._plugins.splice(pluginIdx, 1);\n    });\n  }\n  _emit(eventName, ...params) {\n    const evtParams = params ? params[0] : {};\n    this.trigger(eventName, Object.assign({\n      type: eventName,\n      target: this\n    }, evtParams));\n  }\n  _applyProjection(projection, texture) {\n    const camera = this._camera;\n    const control = this._control;\n    const renderer = this._renderer;\n    const mesh = this._mesh;\n    // Remove previous context\n    if (mesh) {\n      mesh.destroy(renderer.ctx);\n    }\n    const newMesh = projection.createMesh(renderer.ctx, texture);\n    projection.updateCamera(camera);\n    projection.updateControl(control);\n    this._mesh = newMesh;\n    this._emit(EVENTS.PROJECTION_CHANGE, {\n      projection\n    });\n  }\n  _loadTexture(projection) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const contentLoader = new TextureLoader();\n      const {\n        src,\n        video\n      } = projection;\n      this._emit(EVENTS.LOAD_START, {\n        src,\n        video\n      });\n      const texture = yield contentLoader.load(src, video);\n      this._emit(EVENTS.LOAD, {\n        src,\n        video\n      });\n      return texture;\n    });\n  }\n  _resizeComponents() {\n    const renderer = this._renderer;\n    const camera = this._camera;\n    const control = this._control;\n    renderer.resize();\n    camera.resize(renderer.width, renderer.height);\n    control.resize(renderer.width, renderer.height);\n  }\n  _addEventHandlers(events) {\n    // Bind option \"on\"\n    Object.keys(events).forEach(evtName => {\n      this.on(evtName, events[evtName]);\n    });\n  }\n  _bindComponentEvents() {\n    // Bind internal component events\n    const root = this._rootEl;\n    const control = this._control;\n    const animator = this._animator;\n    const renderer = this._renderer;\n    const vr = this._vr;\n    const controlEventsToPropagate = [CONTROL_EVENTS.STATIC_CLICK, CONTROL_EVENTS.INPUT_START, CONTROL_EVENTS.INPUT_END];\n    controlEventsToPropagate.forEach(evtName => {\n      control.rotate.on(evtName, evt => {\n        this._emit(evtName, evt);\n      });\n      control.zoom.on(evtName, evt => {\n        this._emit(evtName, evt);\n      });\n    });\n    vr.on(EVENTS.VR_START, evt => {\n      root.classList.add(DEFAULT_CLASS.IN_VR);\n      animator.changeContext(evt.session);\n      animator.start(this._renderVRFrame);\n      this._emit(EVENTS.VR_START);\n    });\n    vr.on(EVENTS.VR_END, () => {\n      root.classList.remove(DEFAULT_CLASS.IN_VR);\n      renderer.ctx.useDefaultFrameBuffer();\n      animator.changeContext(window);\n      animator.start(this._renderFrameOnDemand);\n      this.resize();\n      this._emit(EVENTS.VR_END);\n    });\n  }\n}\n/**\r\n * Current version string of the View360\r\n * @ko View360의 현재 버젼 문자열\r\n * @since 4.0.0\r\n * @readonly\r\n * @example\r\n * ```ts\r\n * // If the installed version of the View360 is v4.0.0, View360.VERSION is equal to \"4.0.0\"\r\n * console.log(View360.VERSION) // 4.0.0\r\n * ```\r\n */\nView360.VERSION = \"4.0.0-beta.7\";\n\n/*\r\n * Copyright (c) 2023-present NAVER Corp.\r\n * egjs projects are licensed under the MIT license\r\n */\n/**\r\n * Base class for 3D objects\r\n * @ko 3D 오브젝트의 베이스 클래스\r\n * @since 4.0.0\r\n * @internal\r\n */\nclass Object3D extends Component {\n  /**\r\n   * Create new instance.\r\n   * @ko 새로운 인스턴스를 생성합니다.\r\n   */\n  constructor() {\n    super();\n    this.matrix = mat4.create();\n    this.rotation = quat.create();\n    this.position = vec3.fromValues(0, 0, 0);\n    this.scale = vec3.fromValues(1, 1, 1);\n  }\n  /**\r\n   * Update local matrix of the object.\r\n   * @ko 오브젝트의 local matrix를 갱신합니다.\r\n   * @since 4.0.0\r\n   */\n  updateMatrix() {\n    mat4.fromRotationTranslationScale(this.matrix, this.rotation, this.position, this.scale);\n  }\n  update(ctx) {\n    this.trigger(OBJECT_3D_EVENTS.UPDATE, ctx);\n  }\n}\n\n/**\r\n * A plugin that displays loading spinner while loading the projection.\r\n * @ko 프로젝션 로딩중에 로딩 스피너를 보여주는 플러그인\r\n * @since 4.0.0\r\n * @category Plugin\r\n */\nclass LoadingSpinner {\n  /**\r\n   * Create a new instance of LoadingSpinner. {@ko LoadingSpinner의 새 인스턴스를 생성합니다.}\r\n   * @param options Options {@ko 옵션들}\r\n   */\n  constructor({\n    className = {}\n  } = {}) {\n    this._startLoading = ({\n      target: viewer\n    }) => {\n      viewer.rootEl.appendChild(this._container);\n      if (viewer.initialized) {\n        viewer.once(EVENTS.LOAD, this._detachElements);\n      } else {\n        viewer.once(EVENTS.READY, this._detachElements);\n      }\n    };\n    this._detachElements = ({\n      target: viewer\n    }) => {\n      const container = this._container;\n      if (!container) return;\n      if (container.parentElement === viewer.rootEl) {\n        viewer.rootEl.removeChild(container);\n      }\n    };\n    this.className = className;\n    this._container = this._createElements();\n  }\n  init(viewer) {\n    viewer.on(EVENTS.LOAD_START, this._startLoading);\n  }\n  destroy(viewer) {\n    viewer.off(EVENTS.LOAD_START, this._startLoading);\n    this._detachElements({\n      target: viewer\n    });\n  }\n  _createElements() {\n    const className = Object.assign(Object.assign({}, this.className), LoadingSpinner.DEFAULT_CLASS);\n    const container = createElement(className.CONTAINER);\n    const ring = createElement(className.RING);\n    container.appendChild(ring);\n    return container;\n  }\n}\n/**\r\n * Default class names that LoadingSpinner uses\r\n * @ko LoadingSpinner가 사용하는 디폴트 클래스 이름\r\n * @since 4.0.0\r\n */\nLoadingSpinner.DEFAULT_CLASS = {\n  /**\r\n   * A class name for the container element\r\n   * @ko 컨테이너 엘리먼트의 클래스 이름\r\n   * @since 4.0.0\r\n   */\n  CONTAINER: \"view360-spinner\",\n  /**\r\n   * A class name for the spinning ring element\r\n   * @ko 돌아가는 링 엘리먼트의 클래스 이름\r\n   * @since 4.0.0\r\n   */\n  RING: \"view360-spinner-ring\"\n};\n\n/**\r\n * Interface of the ControlBar items\r\n * @ko 컨트롤바 아이템의 인터페이스\r\n * @category Plugin\r\n * @group ControlBar\r\n * @since 4.0.0\r\n */\nclass ControlBarItem {\n  /**\r\n   * Create new instance of the ControlBarItem\r\n   * @ko ControlBarItem의 새로운 인스턴스를 생성합니다.\r\n   * @param options Options {@ko 옵션들}\r\n   */\n  constructor(options) {\n    this.position = options.position;\n    this.order = options.order;\n  }\n}\n\nconst CONTROL_BAR_DEFAULT_CLASS = {\n  CONTROLS_ROOT: \"view360-controls\",\n  CONTROLS_BG: \"view360-controls-background\",\n  CONTROLS_MAIN: \"view360-controls-main\",\n  CONTROLS_TOP: \"view360-controls-top\",\n  CONTROLS_BOTTOM: \"view360-controls-bottom\",\n  CONTROLS_MID: \"view360-controls-mid\",\n  CONTROLS_LEFT: \"view360-controls-left\",\n  CONTROLS_RIGHT: \"view360-controls-right\",\n  CONTROLS_FLOAT_LEFT: \"view360-controls-float-left\",\n  CONTROLS_FLOAT_RIGHT: \"view360-controls-float-right\",\n  CONTROLS_BUTTON: \"view360-controls-button\",\n  PROGRESS_ROOT: \"view360-controls-progress\",\n  VOLUME_ROOT: \"view360-controls-volume\",\n  RANGE_ROOT: \"view360-range\",\n  RANGE_TRACK: \"view360-range-track\",\n  RANGE_THUMB: \"view360-range-thumb\",\n  RANGE_FILLER: \"view360-range-filler\",\n  PLAY_BUTTON: \"view360-controls-play\",\n  PAUSE_BUTTON: \"view360-controls-pause\",\n  UNMUTED_BUTTON: \"view360-controls-unmuted\",\n  MUTED_BUTTON: \"view360-controls-muted\",\n  FULLSCREEN_BUTTON: \"view360-controls-fullscreen\",\n  FULLSCREEN_EXIT_BUTTON: \"view360-controls-fullscreen-exit\",\n  VR_BUTTON: \"view360-controls-vr\",\n  GYRO_ENABLED: \"view360-controls-gyro-enabled\",\n  GYRO_DISABLED: \"view360-controls-gyro-disabled\",\n  VIDEO_TIME_DISPLAY: \"view360-controls-time\",\n  PIEVIEW_ROOT: \"view360-controls-pie\",\n  FIXED: \"view360-controls-fixed\",\n  UNAVAILABLE: \"view360-controls-unavailable\",\n  HIDDEN: \"view360-controls-hidden\"\n};\nconst CONTROL_BAR_ITEM_POSITION = {\n  /**\r\n   * Place control bar item floating at top-left corner\r\n   * @ko 아이템을 왼쪽 위 구석에 표시합니다.\r\n   * @since 4.0.0\r\n   */\n  TOP_LEFT: \"top-left\",\n  /**\r\n   * Place control bar item floating at top-right corner\r\n   * @ko 아이템을 오른쪽 위 구석에 표시합니다.\r\n   * @since 4.0.0\r\n   */\n  TOP_RIGHT: \"top-right\",\n  /**\r\n   * Place control bar item at upper block inside the bottom control bar.\r\n   * @ko 아이템을 하단에 표시되는 컨트롤바 내에서 위쪽 블럭에 표시합니다.\r\n   * @since 4.0.0\r\n   */\n  MAIN_TOP: \"main-top\",\n  /**\r\n   * Place control bar item at lower block inside the bottom control bar.\r\n   * @ko 아이템을 하단에 표시되는 컨트롤바 내에서 하단 블럭에 표시합니다.\r\n   * @since 4.0.0\r\n   */\n  MAIN_BOTTOM: \"main-bottom\",\n  /**\r\n   * Place control bar item at center-left block inside the bottom control bar.\r\n   * @ko 아이템을 하단에 표시되는 컨트롤바 내에서 중간 왼쪽 블럭에 표시합니다.\r\n   * @since 4.0.0\r\n   */\n  MAIN_LEFT: \"main-left\",\n  /**\r\n   * Place control bar item at center-right block inside the bottom control bar.\r\n   * @ko 아이템을 하단에 표시되는 컨트롤바 내에서 중간 오른쪽 블럭에 표시합니다.\r\n   * @since 4.0.0\r\n   */\n  MAIN_RIGHT: \"main-right\"\n};\n\n/*\r\n * Copyright (c) 2023-present NAVER Corp.\r\n * egjs projects are licensed under the MIT license\r\n */\nclass RangeControl extends Component {\n  /**\r\n   *\r\n   */\n  constructor() {\n    super();\n    this._onHold = ({\n      srcEvent,\n      isTouch\n    }) => {\n      var _a;\n      const bbox = this._bbox;\n      if (!bbox) return;\n      const x = isTouch ? srcEvent.touches[0].pageX : srcEvent.pageX;\n      const elX = bbox.x + ((_a = window.scrollX) !== null && _a !== void 0 ? _a : window.pageXOffset);\n      const clamepdX = clamp(x, elX, elX + bbox.width);\n      const progress = (clamepdX - elX) / bbox.width;\n      this._motion.reset(clamepdX);\n      this.thumbEl.classList.add(this._fixedClass);\n      this.trigger(CONTROL_EVENTS.INPUT_START, progress);\n    };\n    this._onChange = ({\n      delta\n    }) => {\n      var _a;\n      const motion = this._motion;\n      const bbox = this._bbox;\n      if (!bbox) return;\n      motion.setNewEndByDelta(delta.x);\n      motion.update(1);\n      const elX = bbox.x + ((_a = window.scrollX) !== null && _a !== void 0 ? _a : window.pageXOffset);\n      const clampedX = clamp(motion.val, elX, elX + bbox.width);\n      const progress = (clampedX - elX) / bbox.width;\n      this.trigger(CONTROL_EVENTS.CHANGE, progress);\n    };\n    this._onRelease = () => {\n      const bbox = this._bbox;\n      if (!bbox) return;\n      this.thumbEl.classList.remove(this._fixedClass);\n      this.trigger(CONTROL_EVENTS.INPUT_END);\n    };\n    const root = document.createElement(EL_DIV);\n    const track = document.createElement(EL_DIV);\n    const thumb = document.createElement(EL_DIV);\n    const filler = document.createElement(EL_DIV);\n    root.draggable = false;\n    track.appendChild(filler);\n    track.appendChild(thumb);\n    root.appendChild(track);\n    this.rootEl = root;\n    this.trackEl = track;\n    this.thumbEl = thumb;\n    this.fillerEl = filler;\n    this._mouseInput = new MouseInput();\n    this._touchInput = new TouchInput();\n    this._motion = new Motion({\n      duration: 1,\n      range: INFINITE_RANGE,\n      easing: x => x\n    });\n    this._bbox = {\n      x: 0,\n      y: 0,\n      width: 0,\n      height: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      top: 0\n    };\n    this._fixedClass = CONTROL_BAR_DEFAULT_CLASS.FIXED;\n  }\n  init(className) {\n    const mouseInput = this._mouseInput;\n    const touchInput = this._touchInput;\n    this.rootEl.classList.add(className.RANGE_ROOT);\n    this.trackEl.classList.add(className.RANGE_TRACK);\n    this.thumbEl.classList.add(className.RANGE_THUMB);\n    this.fillerEl.classList.add(className.RANGE_FILLER);\n    this._fixedClass = className.FIXED;\n    mouseInput.on(CONTROL_EVENTS.INPUT_START, this._onHold);\n    touchInput.on(CONTROL_EVENTS.INPUT_START, this._onHold);\n    mouseInput.on(CONTROL_EVENTS.INPUT_END, this._onRelease);\n    touchInput.on(CONTROL_EVENTS.INPUT_END, this._onRelease);\n    mouseInput.on(CONTROL_EVENTS.CHANGE, this._onChange);\n    touchInput.on(CONTROL_EVENTS.CHANGE, this._onChange);\n    mouseInput.enable(this.rootEl);\n    touchInput.enable(this.rootEl);\n    this.resize();\n  }\n  destroy() {\n    const mouseInput = this._mouseInput;\n    const touchInput = this._touchInput;\n    this.rootEl.className = \"\";\n    this.trackEl.className = \"\";\n    this.thumbEl.className = \"\";\n    this.fillerEl.className = \"\";\n    mouseInput.off();\n    touchInput.off();\n    mouseInput.disable();\n    touchInput.disable();\n  }\n  resize() {\n    this._bbox = this.trackEl.getBoundingClientRect();\n  }\n  updateStyle(progress) {\n    const width = this._bbox.width;\n    const clampedProgress = clamp(progress, 0, 1);\n    this.fillerEl.style.width = `${clampedProgress * 100}%`;\n    this.thumbEl.style.transform = `translateX(${clampedProgress * width}px)`;\n  }\n}\n\n/**\r\n * Show video progress bar.\r\n * @ko 비디오의 프로그레스 바를 표시합니다.\r\n * @category Plugin\r\n * @group ControlBar\r\n * @since 4.0.0\r\n */\nclass ProgressBar extends ControlBarItem {\n  get element() {\n    return this._rangeControl.rootEl;\n  }\n  /**\r\n   * Create a new instance.\r\n   * @ko 새로운 인스턴스를 생성합니다.\r\n   * @param options - Options {@ko 옵션들}\r\n   */\n  constructor({\n    position = CONTROL_BAR_ITEM_POSITION.MAIN_TOP,\n    order = 9999\n  } = {}) {\n    super({\n      position,\n      order\n    });\n    this._onResize = () => {\n      this._rangeControl.resize();\n    };\n    this._onTimeUpdate = () => {\n      const video = this._video;\n      if (!video) return;\n      this._currentTime = video.source.currentTime;\n      this._rangeControl.updateStyle(this._currentTime / this._duration);\n    };\n    this._onDurationChange = () => {\n      const video = this._video;\n      if (!video) return;\n      this._duration = video.source.duration;\n      this._rangeControl.updateStyle(this._currentTime / this._duration);\n    };\n    this._onHold = progress => {\n      const video = this._video;\n      const controlBar = this._controlBar;\n      if (!video || !controlBar) return;\n      const paused = video.isPaused();\n      video.source.pause();\n      const time = video.source.duration * progress;\n      video.source.currentTime = time;\n      video.source.dispatchEvent(new CustomEvent(VIDEO_TIME_CHANGE_EVENT, {\n        detail: {\n          time\n        }\n      }));\n      controlBar.rootEl.classList.add(controlBar.className.FIXED);\n      this._wasPaused = !this._playPromise && paused;\n    };\n    this._onControl = progress => {\n      const video = this._video;\n      if (!video) return;\n      const time = video.source.duration * progress;\n      video.source.currentTime = time;\n      video.source.dispatchEvent(new CustomEvent(VIDEO_TIME_CHANGE_EVENT, {\n        detail: {\n          time\n        }\n      }));\n    };\n    this._onRelease = () => {\n      const video = this._video;\n      const controlBar = this._controlBar;\n      if (video && controlBar) {\n        if (!this._wasPaused && !this._playPromise) {\n          this._playPromise = video.source.play().catch(() => void 0);\n          // This should not be chained\n          this._playPromise.then(() => {\n            this._playPromise = null;\n          });\n          controlBar.rootEl.classList.remove(controlBar.className.FIXED);\n        }\n      }\n      this._wasPaused = false;\n    };\n    this.position = position;\n    this.order = order;\n    this._controlBar = null;\n    this._rangeControl = new RangeControl();\n    this._video = null;\n    this._wasPaused = false;\n    this._currentTime = 0;\n    this._duration = 0;\n    this._playPromise = null;\n  }\n  init(viewer, controlBar) {\n    var _a;\n    const video = (_a = viewer.mesh) === null || _a === void 0 ? void 0 : _a.getTexture();\n    const element = this.element;\n    const rangeControl = this._rangeControl;\n    const unavailableClass = controlBar.className.UNAVAILABLE;\n    if (!video || !video.isVideo()) {\n      element.classList.add(unavailableClass);\n      return;\n    }\n    element.classList.remove(unavailableClass);\n    element.classList.add(controlBar.className.PROGRESS_ROOT);\n    viewer.on(EVENTS.RESIZE, this._onResize);\n    video.source.addEventListener(EVENTS$1.VIDEO_TIME_UPDATE, this._onTimeUpdate);\n    video.source.addEventListener(EVENTS$1.VIDEO_DURATION_CHANGE, this._onDurationChange);\n    video.source.addEventListener(VIDEO_TIME_CHANGE_EVENT, this._onTimeUpdate);\n    rangeControl.init(controlBar.className);\n    rangeControl.on(CONTROL_EVENTS.INPUT_START, this._onHold);\n    rangeControl.on(CONTROL_EVENTS.CHANGE, this._onControl);\n    rangeControl.on(CONTROL_EVENTS.INPUT_END, this._onRelease);\n    this._video = video;\n    this._currentTime = video.source.currentTime;\n    this._duration = video.source.duration;\n    this._controlBar = controlBar;\n    rangeControl.updateStyle(this._currentTime / this._duration);\n  }\n  destroy(viewer) {\n    const video = this._video;\n    viewer.off(EVENTS.RESIZE, this._onResize);\n    if (video) {\n      video.source.removeEventListener(EVENTS$1.VIDEO_TIME_UPDATE, this._onTimeUpdate);\n      video.source.removeEventListener(EVENTS$1.VIDEO_DURATION_CHANGE, this._onDurationChange);\n      video.source.removeEventListener(VIDEO_TIME_CHANGE_EVENT, this._onTimeUpdate);\n    }\n    this._rangeControl.destroy();\n    this._video = null;\n    this._playPromise = null;\n  }\n}\n\n/**\r\n * Show video play / pause button.\r\n * @ko 비디오 재생 / 일시정지 버튼을 표시합니다.\r\n * @category Plugin\r\n * @group ControlBar\r\n * @since 4.0.0\r\n */\nclass PlayButton extends ControlBarItem {\n  /**\r\n   * Create a new instance.\r\n   * @ko 새로운 인스턴스를 생성합니다.\r\n   * @param options - Options {@ko 옵션들}\r\n   */\n  constructor({\n    position = CONTROL_BAR_ITEM_POSITION.MAIN_LEFT,\n    order = 9999\n  } = {}) {\n    super({\n      position,\n      order\n    });\n    this._onClick = () => {\n      const video = this._video;\n      if (!video) return;\n      if (this._paused) {\n        video.source.play();\n      } else {\n        video.source.pause();\n      }\n    };\n    this._onPlay = () => {\n      if (!this._controlBar) return;\n      const element = this.element;\n      const className = this._controlBar.className;\n      element.classList.add(className.PAUSE_BUTTON);\n      element.classList.remove(className.PLAY_BUTTON);\n      element.title = \"Pause Video\";\n      this._paused = false;\n    };\n    this._onPause = () => {\n      if (!this._controlBar) return;\n      const element = this.element;\n      const className = this._controlBar.className;\n      element.classList.add(className.PLAY_BUTTON);\n      element.classList.remove(className.PAUSE_BUTTON);\n      element.title = \"Play Video\";\n      this._paused = true;\n    };\n    this.element = document.createElement(EL_BUTTON);\n    this._video = null;\n    this._paused = true;\n    this._controlBar = null;\n  }\n  init(viewer, controlBar) {\n    var _a;\n    const element = this.element;\n    const video = (_a = viewer.mesh) === null || _a === void 0 ? void 0 : _a.getTexture();\n    const className = controlBar.className;\n    const unavailableClass = className.UNAVAILABLE;\n    if (!video || !video.isVideo()) {\n      element.classList.add(unavailableClass);\n      return;\n    }\n    element.classList.add(className.CONTROLS_BUTTON);\n    element.classList.remove(unavailableClass);\n    const paused = video.isPaused();\n    this._video = video;\n    this._paused = paused;\n    this._controlBar = controlBar;\n    if (paused) {\n      this._onPause();\n    } else {\n      this._onPlay();\n    }\n    element.addEventListener(EVENTS$1.CLICK, this._onClick);\n    video.source.addEventListener(EVENTS$1.VIDEO_PLAY, this._onPlay);\n    video.source.addEventListener(EVENTS$1.VIDEO_PAUSE, this._onPause);\n  }\n  destroy() {\n    const video = this._video;\n    const element = this.element;\n    if (!video) return;\n    element.className = \"\";\n    element.removeEventListener(EVENTS$1.CLICK, this._onClick);\n    video.source.removeEventListener(EVENTS$1.VIDEO_PLAY, this._onPlay);\n    video.source.removeEventListener(EVENTS$1.VIDEO_PAUSE, this._onPause);\n    this._video = null;\n    this._paused = true;\n    this._controlBar = null;\n  }\n}\n\n/**\r\n * Show video volume control.\r\n * @ko 비디오 볼륨 조절 버튼을 표시합니다.\r\n * @category Plugin\r\n * @group ControlBar\r\n * @since 4.0.0\r\n */\nclass VolumeControl extends ControlBarItem {\n  get element() {\n    return this._rootEl;\n  }\n  /**\r\n   * Create a new instance.\r\n   * @ko 새로운 인스턴스를 생성합니다.\r\n   * @param options - Options {@ko 옵션들}\r\n   */\n  constructor({\n    position = CONTROL_BAR_ITEM_POSITION.MAIN_RIGHT,\n    order = 9999\n  } = {}) {\n    super({\n      position,\n      order\n    });\n    this._onResize = () => {\n      this._rangeControl.resize();\n      this._updateDisplay();\n    };\n    this._onClick = () => {\n      const video = this._video;\n      if (!video || this._rootEl.disabled) return;\n      video.source.muted = !video.source.muted;\n    };\n    this._onVolumeChange = () => {\n      const button = this._buttonEl;\n      const video = this._video;\n      const controlBar = this._controlBar;\n      if (!video || !controlBar) return;\n      const className = controlBar.className;\n      if (video.source.muted || video.source.volume === 0) {\n        button.classList.add(className.MUTED_BUTTON);\n        button.classList.remove(className.UNMUTED_BUTTON);\n      } else {\n        button.classList.add(className.UNMUTED_BUTTON);\n        button.classList.remove(className.MUTED_BUTTON);\n      }\n      this._updateDisplay();\n    };\n    this._onHold = progress => {\n      const video = this._video;\n      const controlBar = this._controlBar;\n      if (!video || !controlBar) return;\n      const className = controlBar.className;\n      video.source.volume = progress;\n      this._rootEl.classList.add(className.FIXED);\n      controlBar.containerEl.classList.add(className.FIXED);\n      this._updateDisplay();\n    };\n    this._onChange = progress => {\n      const video = this._video;\n      if (!video) return;\n      video.source.volume = progress;\n      if (progress > 0) {\n        video.source.muted = false;\n      } else {\n        video.source.muted = true;\n      }\n      this._updateDisplay();\n    };\n    this._onRelease = () => {\n      const controlBar = this._controlBar;\n      if (!controlBar) return;\n      const className = controlBar.className;\n      this._rootEl.classList.remove(className.FIXED);\n      controlBar.containerEl.classList.remove(className.FIXED);\n    };\n    this._updateDisplay = () => {\n      const video = this._video;\n      const root = this._rootEl;\n      if (!video) return;\n      if (!video.hasAudio()) {\n        root.disabled = true;\n        return;\n      }\n      root.disabled = false;\n      const volume = video.source.muted ? 0 : video.source.volume;\n      this._rangeControl.updateStyle(volume);\n    };\n    this._controlBar = null;\n    this._rangeControl = new RangeControl();\n    this._createElements();\n    this._video = null;\n  }\n  init(viewer, controlBar) {\n    var _a;\n    const video = (_a = viewer.mesh) === null || _a === void 0 ? void 0 : _a.getTexture();\n    const root = this._rootEl;\n    const button = this._buttonEl;\n    const rangeControl = this._rangeControl;\n    const className = controlBar.className;\n    const unavailableClass = className.UNAVAILABLE;\n    if (!video || !video.isVideo()) {\n      root.classList.add(unavailableClass);\n      return;\n    }\n    root.classList.remove(unavailableClass);\n    root.classList.add(className.CONTROLS_BUTTON);\n    root.classList.add(className.VOLUME_ROOT);\n    button.classList.add(className.CONTROLS_BUTTON);\n    if (video.source.muted) {\n      button.classList.add(className.MUTED_BUTTON);\n    } else {\n      button.classList.add(className.UNMUTED_BUTTON);\n    }\n    viewer.on(EVENTS.RESIZE, this._onResize);\n    root.addEventListener(EVENTS$1.TRANSITION_END, this._onResize);\n    button.addEventListener(EVENTS$1.CLICK, this._onClick);\n    video.source.addEventListener(EVENTS$1.VIDEO_VOLUME_CHANGE, this._onVolumeChange);\n    video.source.addEventListener(EVENTS$1.VIDEO_LOADED_DATA, this._updateDisplay);\n    video.source.addEventListener(EVENTS$1.VIDEO_CAN_PLAYTHROUGH, this._updateDisplay);\n    rangeControl.init(className);\n    rangeControl.on(CONTROL_EVENTS.INPUT_START, this._onHold);\n    rangeControl.on(CONTROL_EVENTS.CHANGE, this._onChange);\n    rangeControl.on(CONTROL_EVENTS.INPUT_END, this._onRelease);\n    this._controlBar = controlBar;\n    this._video = video;\n    this._updateDisplay();\n  }\n  destroy(viewer) {\n    const video = this._video;\n    const button = this._buttonEl;\n    const root = this._rootEl;\n    root.className = \"\";\n    button.className = \"\";\n    viewer.off(EVENTS.RESIZE, this._onResize);\n    root.removeEventListener(EVENTS$1.TRANSITION_END, this._onResize);\n    button.removeEventListener(EVENTS$1.CLICK, this._onClick);\n    if (video) {\n      video.source.removeEventListener(EVENTS$1.VIDEO_VOLUME_CHANGE, this._onVolumeChange);\n      video.source.removeEventListener(EVENTS$1.VIDEO_LOADED_DATA, this._updateDisplay);\n      video.source.removeEventListener(EVENTS$1.VIDEO_CAN_PLAYTHROUGH, this._updateDisplay);\n    }\n    this._controlBar = null;\n    this._rangeControl.destroy();\n    this._video = null;\n  }\n  _createElements() {\n    const root = document.createElement(EL_BUTTON);\n    const buttonEl = document.createElement(EL_DIV);\n    root.appendChild(this._rangeControl.rootEl);\n    root.appendChild(buttonEl);\n    root.title = \"Toggle Mute\";\n    this._rootEl = root;\n    this._buttonEl = buttonEl;\n  }\n}\n\n/**\r\n * Show fullscreen enter / exit button.\r\n * @ko 풀스크린 진입 / 해제 버튼을 표시합니다.\r\n * @category Plugin\r\n * @group ControlBar\r\n * @since 4.0.0\r\n */\nclass FullscreenButton extends ControlBarItem {\n  /**\r\n   * Create a new instance.\r\n   * @ko 새로운 인스턴스를 생성합니다.\r\n   * @param options - Options {@ko 옵션들}\r\n   */\n  constructor({\n    position = CONTROL_BAR_ITEM_POSITION.MAIN_RIGHT,\n    order = 9999\n  } = {}) {\n    super({\n      position,\n      order\n    });\n    this._onClick = () => {\n      const target = this._targetEl;\n      if (!target) return;\n      if (isFullscreen()) {\n        this._exitFullscreen();\n      } else {\n        this._requestFullscreen(target);\n      }\n    };\n    this._onFullscreenChange = () => {\n      const element = this.element;\n      const controlBar = this._controlBar;\n      if (!controlBar) return;\n      const className = controlBar.className;\n      if (isFullscreen()) {\n        element.classList.add(className.FULLSCREEN_EXIT_BUTTON);\n        element.classList.remove(className.FULLSCREEN_BUTTON);\n      } else {\n        element.classList.add(className.FULLSCREEN_BUTTON);\n        element.classList.remove(className.FULLSCREEN_EXIT_BUTTON);\n      }\n    };\n    this.element = document.createElement(EL_BUTTON);\n    this.element.title = \"Toggle Fullscreen\";\n    this._controlBar = null;\n    this._targetEl = null;\n  }\n  init(viewer, controlBar) {\n    const element = this.element;\n    const className = controlBar.className;\n    if (!this._fullscreenAvailable()) {\n      element.classList.add(className.UNAVAILABLE);\n      return;\n    }\n    element.classList.add(className.CONTROLS_BUTTON);\n    element.classList.remove(className.UNAVAILABLE);\n    element.addEventListener(EVENTS$1.CLICK, this._onClick);\n    this._addFullscreenHandlers();\n    if (isFullscreen()) {\n      element.classList.add(className.FULLSCREEN_EXIT_BUTTON);\n    } else {\n      element.classList.add(className.FULLSCREEN_BUTTON);\n    }\n    this._controlBar = controlBar;\n    this._targetEl = viewer.rootEl;\n  }\n  destroy() {\n    const element = this.element;\n    element.className = \"\";\n    element.removeEventListener(EVENTS$1.CLICK, this._onClick);\n    this._removeFullscreenHandlers();\n    this._controlBar = null;\n    this._targetEl = null;\n  }\n  _fullscreenAvailable() {\n    return FULLSCREEN_REQUEST.some(key => !!document[key]);\n  }\n  _requestFullscreen(el) {\n    for (const key of FULLSCREEN_REQUEST) {\n      const request = el[key];\n      if (request) {\n        request.call(el);\n        return;\n      }\n    }\n  }\n  _exitFullscreen() {\n    for (const key of FULLSCREEN_EXIT) {\n      const exit = document[key];\n      if (exit) {\n        exit.call(document);\n        return;\n      }\n    }\n  }\n  _addFullscreenHandlers() {\n    FULLSCREEN_CHANGE.forEach(evtName => {\n      document.addEventListener(evtName, this._onFullscreenChange);\n    });\n  }\n  _removeFullscreenHandlers() {\n    FULLSCREEN_CHANGE.forEach(evtName => {\n      document.removeEventListener(evtName, this._onFullscreenChange);\n    });\n  }\n}\n\n/**\r\n * Show video current / total time.\r\n * @ko 비디오의 현재 / 총 재생시간을 표시합니다.\r\n * @category Plugin\r\n * @group ControlBar\r\n * @since 4.0.0\r\n */\nclass VideoTime extends ControlBarItem {\n  /**\r\n   * Create a new instance.\r\n   * @ko 새로운 인스턴스를 생성합니다.\r\n   * @param options - Options {@ko 옵션들}\r\n   */\n  constructor({\n    position = CONTROL_BAR_ITEM_POSITION.MAIN_LEFT,\n    order = 9999\n  } = {}) {\n    super({\n      position,\n      order\n    });\n    this._onTimeUpdate = () => {\n      const video = this._video;\n      if (!video) return;\n      this._currentTime = video.source.currentTime;\n      this._updateDisplay();\n    };\n    this._onDurationChange = () => {\n      const video = this._video;\n      if (!video) return;\n      this._duration = video.source.duration;\n      this._updateDisplay();\n    };\n    this._onCustomTimeChange = evt => {\n      this._currentTime = evt.detail.time;\n      this._updateDisplay();\n    };\n    this.element = document.createElement(EL_DIV);\n    this._video = null;\n    this._currentTime = 0;\n    this._duration = 0;\n  }\n  init(viewer, controlBar) {\n    var _a;\n    const video = (_a = viewer.mesh) === null || _a === void 0 ? void 0 : _a.getTexture();\n    const element = this.element;\n    const className = controlBar.className;\n    if (!video || !video.isVideo()) {\n      element.classList.add(className.UNAVAILABLE);\n      return;\n    }\n    element.classList.add(className.VIDEO_TIME_DISPLAY);\n    element.classList.remove(className.UNAVAILABLE);\n    video.source.addEventListener(EVENTS$1.VIDEO_TIME_UPDATE, this._onTimeUpdate);\n    video.source.addEventListener(EVENTS$1.VIDEO_DURATION_CHANGE, this._onDurationChange);\n    video.source.addEventListener(VIDEO_TIME_CHANGE_EVENT, this._onCustomTimeChange);\n    this._video = video;\n    this._currentTime = video.source.currentTime;\n    this._duration = video.source.duration;\n    this._updateDisplay();\n  }\n  destroy() {\n    const video = this._video;\n    if (!video) return;\n    this.element.className = \"\";\n    video.source.removeEventListener(EVENTS$1.VIDEO_TIME_UPDATE, this._onTimeUpdate);\n    video.source.removeEventListener(EVENTS$1.VIDEO_DURATION_CHANGE, this._onDurationChange);\n    video.source.removeEventListener(VIDEO_TIME_CHANGE_EVENT, this._onCustomTimeChange);\n    this._video = null;\n  }\n  _updateDisplay() {\n    const time = this._currentTime;\n    const timeMinute = Math.floor(time / 60);\n    const timeSeconds = Math.floor(time - timeMinute * 60);\n    const timeSecondsFormatted = timeSeconds < 10 ? `0${timeSeconds}` : timeSeconds;\n    const duration = this._duration;\n    const durationMinute = Math.floor(duration / 60);\n    const durationSeconds = Math.floor(duration - durationMinute * 60);\n    const durationSecondsFormatted = durationSeconds < 10 ? `0${durationSeconds}` : durationSeconds;\n    this.element.innerText = `${timeMinute}:${timeSecondsFormatted} / ${durationMinute}:${durationSecondsFormatted}`;\n  }\n}\n\n/**\r\n * Show camera direction/fov indicator.\r\n * @ko 카메라가 향하는 방향 및 FOV를 표시합니다.\r\n * @category Plugin\r\n * @group ControlBar\r\n * @since 4.0.0\r\n */\nclass PieView extends ControlBarItem {\n  /**\r\n   * Create a new instance.\r\n   * @ko 새로운 인스턴스를 생성합니다.\r\n   * @param options - Options {@ko 옵션들}\r\n   */\n  constructor({\n    resetCamera = true,\n    position = CONTROL_BAR_ITEM_POSITION.TOP_RIGHT,\n    order = 9999\n  } = {}) {\n    super({\n      position,\n      order\n    });\n    this._onClick = () => {\n      const viewer = this._viewer;\n      const resetCamera = this.resetCamera;\n      if (!viewer || !resetCamera) return;\n      const {\n        yaw = viewer.initialYaw,\n        pitch = viewer.initialPitch,\n        zoom = viewer.initialZoom,\n        duration = 500\n      } = getObjectOption(resetCamera);\n      viewer.camera.animateTo({\n        yaw,\n        pitch,\n        zoom,\n        duration\n      });\n    };\n    this._updatePie = ({\n      target: viewer\n    }) => {\n      const piePath = this._piePathEl;\n      const rangeCircle = this._rangeCircleEl;\n      const camera = viewer.camera;\n      const fov = camera.getHorizontalFov();\n      const yawRange = camera.getYawRange(camera.zoom);\n      const halfFov = fov * 0.5;\n      const pieRadius = 24 * Math.PI;\n      const pieDeg = pieRadius * fov / 360;\n      const pieOffset = pieRadius * (camera.yaw + halfFov + 90) / 360;\n      piePath.setAttribute(\"stroke-dasharray\", `${pieDeg} ${pieRadius - pieDeg}`);\n      piePath.setAttribute(\"stroke-dashoffset\", `${pieOffset}`);\n      if (isFinite(yawRange.min) && isFinite(yawRange.max)) {\n        const radius = 45 * Math.PI; // 2 * PI * r\n        const min = (circulate(yawRange.min, -180, 180) - halfFov) / 360;\n        const max = (circulate(yawRange.max, -180, 180) + halfFov) / 360;\n        const rangeDiff = radius * Math.abs(max - min);\n        const offset = -radius * (min - 0.25);\n        rangeCircle.setAttribute(\"stroke-dasharray\", `${rangeDiff} ${radius - rangeDiff}`);\n        rangeCircle.setAttribute(\"stroke-dashoffset\", `${offset}`);\n      } else {\n        rangeCircle.setAttribute(\"stroke-dasharray\", \"\");\n        rangeCircle.setAttribute(\"stroke-dashoffset\", \"\");\n      }\n    };\n    this.element = document.createElement(EL_DIV);\n    this.element.title = \"Reset view\";\n    this.resetCamera = resetCamera;\n    this._createPieElements();\n    this._viewer = null;\n  }\n  init(viewer, controlBar) {\n    const element = this.element;\n    if (!viewer.initialized) {\n      viewer.once(EVENTS.READY, this._updatePie);\n    } else {\n      this._updatePie({\n        target: viewer\n      });\n    }\n    const rootClass = controlBar.className.PIEVIEW_ROOT;\n    element.classList.add(rootClass);\n    if (this.resetCamera) {\n      element.addEventListener(EVENTS$1.CLICK, this._onClick);\n    }\n    viewer.on(EVENTS.VIEW_CHANGE, this._updatePie);\n    this._viewer = viewer;\n  }\n  destroy(viewer) {\n    const element = this.element;\n    element.removeEventListener(EVENTS$1.CLICK, this._onClick);\n    element.className = \"\";\n    viewer.off(EVENTS.READY, this._updatePie);\n    viewer.off(EVENTS.VIEW_CHANGE, this._updatePie);\n    this._viewer = null;\n  }\n  _createPieElements() {\n    const root = this.element;\n    const pieSVG = document.createElementNS(SVG_NAMESPACE, \"svg\");\n    pieSVG.setAttribute(\"viewBox\", \"0 0 48 48\");\n    pieSVG.setAttribute(\"width\", \"100%\");\n    pieSVG.setAttribute(\"height\", \"100%\");\n    const piePath = document.createElementNS(SVG_NAMESPACE, \"circle\");\n    piePath.setAttribute(\"stroke\", \"currentColor\");\n    piePath.setAttribute(\"fill\", \"transparent\");\n    piePath.setAttribute(\"cx\", \"24\");\n    piePath.setAttribute(\"cy\", \"24\");\n    piePath.setAttribute(\"r\", \"12\");\n    piePath.setAttribute(\"stroke-width\", \"24\");\n    pieSVG.appendChild(piePath);\n    const rangeCircle = document.createElementNS(SVG_NAMESPACE, \"circle\");\n    rangeCircle.setAttribute(\"stroke\", \"currentColor\");\n    rangeCircle.setAttribute(\"fill\", \"transparent\");\n    rangeCircle.setAttribute(\"cx\", \"24\");\n    rangeCircle.setAttribute(\"cy\", \"24\");\n    rangeCircle.setAttribute(\"r\", \"22.5\");\n    rangeCircle.setAttribute(\"stroke-width\", \"3\");\n    pieSVG.appendChild(rangeCircle);\n    root.appendChild(pieSVG);\n    this._piePathEl = piePath;\n    this._rangeCircleEl = rangeCircle;\n  }\n}\n\n/**\r\n * Show VR enter button.\r\n * @ko VR 진입 버튼을 표시합니다.\r\n * @category Plugin\r\n * @group ControlBar\r\n * @since 4.0.0\r\n */\nclass VRButton extends ControlBarItem {\n  /**\r\n   * Create a new instance.\r\n   * @ko 새로운 인스턴스를 생성합니다.\r\n   * @param options - Options {@ko 옵션들}\r\n   */\n  constructor({\n    position = CONTROL_BAR_ITEM_POSITION.MAIN_RIGHT,\n    order = 9999\n  } = {}) {\n    super({\n      position,\n      order\n    });\n    this._onClick = () => {\n      const viewer = this._viewer;\n      if (!viewer) return;\n      viewer.vr.enter();\n    };\n    this.element = document.createElement(EL_BUTTON);\n    this.element.title = \"Enter VR\";\n    this._viewer = null;\n  }\n  init(viewer, controlBar) {\n    const element = this.element;\n    const className = controlBar.className;\n    element.classList.add(className.UNAVAILABLE);\n    element.classList.add(className.VR_BUTTON);\n    element.classList.add(className.CONTROLS_BUTTON);\n    viewer.vr.isAvailable().then(available => {\n      if (available) {\n        element.classList.remove(className.UNAVAILABLE);\n      }\n    });\n    element.addEventListener(EVENTS$1.CLICK, this._onClick);\n    this._viewer = viewer;\n  }\n  destroy() {\n    const element = this.element;\n    element.className = \"\";\n    element.removeEventListener(EVENTS$1.CLICK, this._onClick);\n    this._viewer = null;\n  }\n}\n\n/**\r\n * Show gyroscope control enable / disable button\r\n * @ko 자이로스코프 컨트롤 활성화 / 비활성화 버튼을 표시합니다.\r\n * @category Plugin\r\n * @group ControlBar\r\n * @since 4.0.0\r\n */\nclass GyroButton extends ControlBarItem {\n  /**\r\n   * Create a new instance.\r\n   * @ko 새로운 인스턴스를 생성합니다.\r\n   * @param options - Options {@ko 옵션들}\r\n   */\n  constructor({\n    position = CONTROL_BAR_ITEM_POSITION.MAIN_RIGHT,\n    order = 9999\n  } = {}) {\n    super({\n      position,\n      order\n    });\n    this._onClick = () => {\n      const viewer = this._viewer;\n      const controlBar = this._controlBar;\n      if (!viewer || !controlBar) return;\n      const gyroControl = viewer.control.gyro;\n      if (gyroControl.enabled) {\n        gyroControl.disable();\n      } else {\n        GyroControl.requestSensorPermission().then(available => {\n          if (available) {\n            gyroControl.enable();\n          } else {\n            this.element.classList.add(controlBar.className.UNAVAILABLE);\n          }\n        });\n      }\n    };\n    this._updateStyle = () => {\n      const element = this.element;\n      const viewer = this._viewer;\n      const controlBar = this._controlBar;\n      if (!viewer || !controlBar) return;\n      const gyroControl = viewer.control.gyro;\n      const className = controlBar.className;\n      if (gyroControl.enabled) {\n        element.classList.add(className.GYRO_ENABLED);\n        element.classList.remove(className.GYRO_DISABLED);\n      } else {\n        element.classList.add(className.GYRO_DISABLED);\n        element.classList.remove(className.GYRO_ENABLED);\n      }\n    };\n    this.element = document.createElement(EL_DIV);\n    this.element.title = \"Toggle gyroscope control\";\n  }\n  init(viewer, controlBar) {\n    const element = this.element;\n    const className = controlBar.className;\n    element.addEventListener(EVENTS$1.CLICK, this._onClick);\n    element.classList.add(className.CONTROLS_BUTTON);\n    element.classList.add(className.UNAVAILABLE);\n    const enableButton = () => {\n      element.classList.remove(className.UNAVAILABLE);\n      viewer.control.gyro.on(CONTROL_EVENTS.ENABLE, this._updateStyle);\n      viewer.control.gyro.on(CONTROL_EVENTS.DISABLE, this._updateStyle);\n    };\n    if (sensorCanBeEnabledIOS()) {\n      enableButton();\n    } else {\n      GyroControl.isAvailable().then(available => {\n        if (!available) return;\n        enableButton();\n      });\n    }\n    this._controlBar = controlBar;\n    this._viewer = viewer;\n    this._updateStyle();\n  }\n  destroy(viewer) {\n    const element = this.element;\n    viewer.control.gyro.off(CONTROL_EVENTS.ENABLE, this._updateStyle);\n    viewer.control.gyro.off(CONTROL_EVENTS.DISABLE, this._updateStyle);\n    element.removeEventListener(EVENTS$1.CLICK, this._onClick);\n    element.className = \"\";\n    this._controlBar = null;\n    this._viewer = null;\n  }\n}\n\nclass AutoHide {\n  get enabled() {\n    return !!this._targetEl;\n  }\n  get hidden() {\n    return this._controlBar.containerEl.classList.contains(this._hiddenClass);\n  }\n  get _hiddenClass() {\n    return this._controlBar.className.HIDDEN;\n  }\n  get _fixedClass() {\n    return this._controlBar.className.FIXED;\n  }\n  constructor(controlBar, {\n    initialDelay = 3000,\n    delay = 0,\n    idleDelay: activationDelay = 3000\n  }) {\n    this._onMouseEnter = () => {\n      this._isCursorInside = true;\n      this.show();\n    };\n    this._onMouseLeave = () => {\n      this._isCursorInside = false;\n      this._hideAfterDelay();\n    };\n    this._onMouseMove = () => {\n      if (!this._isFullscreen) return;\n      this.showTemporaliy();\n    };\n    this._onHold = evt => {\n      this._isGrabbing = true;\n      if (evt.pointerType === \"mouse\") {\n        this._isCursorInside = true;\n      }\n      window.addEventListener(EVENTS$1.MOUSE_UP, this._onRelease);\n      this.show();\n    };\n    this._onRelease = () => {\n      this._isGrabbing = false;\n      window.removeEventListener(EVENTS$1.MOUSE_UP, this._onRelease);\n      this._hideAfterDelay();\n    };\n    this._onVideoPlay = () => {\n      const root = this._targetEl;\n      if (!root) return;\n      this._controlBar.containerEl.classList.remove(this._fixedClass);\n    };\n    this._onVideoPause = () => {\n      const root = this._targetEl;\n      if (!root) return;\n      this._controlBar.containerEl.classList.add(this._fixedClass);\n    };\n    this._onFullscreenChange = () => {\n      this._isFullscreen = isFullscreen();\n      if (this._isFullscreen) {\n        this._hideAfterDelay();\n      }\n    };\n    this._controlBar = controlBar;\n    this._initialDelay = initialDelay;\n    this._delay = delay;\n    this._idleDelay = activationDelay;\n    this._timer = -1;\n    this._isCursorInside = false;\n    this._isGrabbing = false;\n    this._isFullscreen = false;\n    this._video = null;\n    this._targetEl = null;\n  }\n  enable(viewer) {\n    var _a;\n    if (this._targetEl) {\n      this.disable(viewer);\n    }\n    const initialDelay = this._initialDelay;\n    const root = viewer.rootEl;\n    this._targetEl = viewer.rootEl;\n    this._timer = window.setTimeout(() => {\n      this.hide();\n    }, initialDelay);\n    root.addEventListener(EVENTS$1.MOUSE_DOWN, this._onHold);\n    root.addEventListener(EVENTS$1.MOUSE_ENTER, this._onMouseEnter);\n    root.addEventListener(EVENTS$1.MOUSE_MOVE, this._onMouseMove);\n    root.addEventListener(EVENTS$1.MOUSE_LEAVE, this._onMouseLeave);\n    this._addFullscreenHandlers();\n    const video = (_a = viewer.mesh) === null || _a === void 0 ? void 0 : _a.getTexture();\n    if (!video || !video.isVideo()) {\n      return;\n    }\n    if (video.isPaused()) {\n      this._controlBar.containerEl.classList.add(this._fixedClass);\n    }\n    video.source.addEventListener(EVENTS$1.VIDEO_PLAY, this._onVideoPlay);\n    video.source.addEventListener(EVENTS$1.VIDEO_PAUSE, this._onVideoPause);\n    this._video = video;\n  }\n  disable(viewer) {\n    if (!this._targetEl) return;\n    const controlBar = this._controlBar;\n    const root = viewer.rootEl;\n    const video = this._video;\n    root.removeEventListener(EVENTS$1.MOUSE_DOWN, this._onHold);\n    window.removeEventListener(EVENTS$1.MOUSE_UP, this._onRelease);\n    root.removeEventListener(EVENTS$1.MOUSE_ENTER, this._onMouseEnter);\n    root.removeEventListener(EVENTS$1.MOUSE_MOVE, this._onMouseMove);\n    root.removeEventListener(EVENTS$1.MOUSE_LEAVE, this._onMouseLeave);\n    this._removeFullscreenHandlers();\n    window.clearTimeout(this._timer);\n    controlBar.containerEl.classList.remove(this._fixedClass);\n    if (video) {\n      video.source.removeEventListener(EVENTS$1.VIDEO_PLAY, this._onVideoPlay);\n      video.source.removeEventListener(EVENTS$1.VIDEO_PAUSE, this._onVideoPause);\n    }\n    this._isCursorInside = false;\n    this._isGrabbing = false;\n    this._video = null;\n    this._targetEl = null;\n  }\n  show() {\n    this._clearHideTimer();\n    this._controlBar.containerEl.classList.remove(this._hiddenClass);\n  }\n  showTemporaliy() {\n    this.show();\n    this._hideAfterDelay(this._idleDelay);\n  }\n  hide() {\n    this._clearHideTimer();\n    this._controlBar.containerEl.classList.add(this._hiddenClass);\n  }\n  _clearHideTimer() {\n    if (this._timer) {\n      window.clearTimeout(this._timer);\n      this._timer = -1;\n    }\n  }\n  _hideAfterDelay(delay = this._delay) {\n    if (this._isGrabbing || !this._isFullscreen && this._isCursorInside) return;\n    this._clearHideTimer();\n    if (delay <= 0) {\n      this.hide();\n    } else {\n      this._timer = window.setTimeout(() => {\n        this.hide();\n      }, delay);\n    }\n  }\n  _addFullscreenHandlers() {\n    FULLSCREEN_CHANGE.forEach(evtName => {\n      document.addEventListener(evtName, this._onFullscreenChange);\n    });\n  }\n  _removeFullscreenHandlers() {\n    FULLSCREEN_CHANGE.forEach(evtName => {\n      document.removeEventListener(evtName, this._onFullscreenChange);\n    });\n  }\n}\n\nclass VideoControl {\n  constructor() {\n    this._onKeyDown = event => {\n      const video = this._video;\n      if (!video) return;\n      event.preventDefault();\n      event.stopPropagation();\n      const videoEl = video.source;\n      const keyPressed = event.keyCode != null ? DIRECTION_KEY_CODE[event.keyCode] : DIRECTION_KEY_NAME[event.key];\n      switch (keyPressed) {\n        case \"LEFT\":\n        case \"RIGHT\":\n          return this._changeVideoTime(videoEl, keyPressed === \"RIGHT\");\n        case \"UP\":\n        case \"DOWN\":\n          return this._changeVideoVolume(videoEl, keyPressed === \"UP\");\n      }\n      const spacePressed = event.keyCode === SPACE_KEY_CODE || event.key === SPACE_KEY_NAME;\n      if (spacePressed) {\n        this._toggleVideo(video);\n      }\n    };\n  }\n  enable(root, video) {\n    this._video = video;\n    // capture is needed for resolving conflict with keyboard control\n    root.addEventListener(EVENTS$1.KEY_DOWN, this._onKeyDown, true);\n  }\n  disable(root) {\n    this._video = null;\n    root.removeEventListener(EVENTS$1.KEY_DOWN, this._onKeyDown, true);\n  }\n  _changeVideoTime(video, forward) {\n    const delta = forward ? 5 : -5;\n    video.currentTime += delta;\n    video.dispatchEvent(new CustomEvent(VIDEO_TIME_CHANGE_EVENT, {\n      detail: {\n        time: video.currentTime\n      }\n    }));\n  }\n  _changeVideoVolume(video, increase) {\n    const delta = increase ? 0.1 : -0.1;\n    if (video.muted) {\n      video.volume = clamp(delta, 0, 1);\n    } else {\n      video.volume = clamp(video.volume + delta, 0, 1);\n    }\n    if (video.volume > 0) {\n      video.muted = false;\n    } else {\n      video.muted = true;\n    }\n  }\n  _toggleVideo(video) {\n    if (video.isPaused()) {\n      video.source.play();\n    } else {\n      video.source.pause();\n    }\n  }\n}\n\n/**\r\n * A plugin that displays extra buttons & controls that controls {@link View360}.\r\n * @ko {@link View360}에 부가적인 버튼과 컨트롤을 추가해주는 플러그인.\r\n * @category Plugin\r\n * @since 4.0.0\r\n */\nclass ControlBar {\n  /**\r\n   * Root element of the control bar\r\n   * @ko 컨트롤바의 루트 엘리먼트\r\n   * @since 4.0.0\r\n   */\n  get rootEl() {\n    return this._rootEl;\n  }\n  /**\r\n   * Container element of the control bar\r\n   * @ko 컨트롤바의 컨테이너 엘리먼트\r\n   * @since 4.0.0\r\n   */\n  get containerEl() {\n    return this._containerEl;\n  }\n  /**\r\n   * Background element of the control bar\r\n   * @ko 컨트롤바의 배경 엘리먼트\r\n   * @since 4.0.0\r\n   */\n  get backgroundEl() {\n    return this._bgEl;\n  }\n  /**\r\n   * Control bar's default items created by {@link ControlBarOptions}\r\n   * @ko 주어진 {@link ControlBarOptions}에 의해 생성된 디폴트 아이템들\r\n   * @since 4.0.0\r\n   */\n  get items() {\n    return this._items;\n  }\n  /**\r\n   * Custom control bar items\r\n   * @ko 커스텀 컨트롤바 아이템들을 추가합니다.\r\n   * @since 4.0.0\r\n   */\n  get customItems() {\n    return this._customItems;\n  }\n  /**\r\n   * Create new instance of ControlBar.\r\n   * @ko ControlBar의 새 인스턴스를 생성합니다.\r\n   * @param options - Options {@ko 옵션들}\r\n   */\n  constructor({\n    autoHide,\n    showBackground,\n    clickToPlay = true,\n    keyboardControls = true,\n    progressBar = true,\n    playButton = true,\n    volumeButton = true,\n    fullscreenButton = true,\n    videoTime = true,\n    pieView = true,\n    vrButton = true,\n    gyroButton = true,\n    className = {},\n    customItems = []\n  } = {}) {\n    var _a;\n    this._onStaticClick = ({\n      target: viewer,\n      isTouch\n    }) => {\n      var _a;\n      const autoHider = this._autoHider;\n      if (isTouch) {\n        if (!autoHider.enabled) return;\n        if (autoHider.hidden) {\n          autoHider.showTemporaliy();\n        } else {\n          autoHider.hide();\n        }\n      } else {\n        if (!this.clickToPlay) return;\n        const video = (_a = viewer.mesh) === null || _a === void 0 ? void 0 : _a.getTexture();\n        if (!video || !video.isVideo()) return;\n        if (video.isPaused()) {\n          video.source.play();\n        } else {\n          video.source.pause();\n        }\n      }\n    };\n    this._onNewSrcLoad = ({\n      target: viewer\n    }) => {\n      const items = this._items;\n      this._updateBackground(viewer);\n      this._updateAutoHide(viewer);\n      this._updateKeyboardHandler(viewer);\n      Object.keys(items).forEach(key => {\n        const category = items[key];\n        category.forEach(item => {\n          item.destroy(viewer, this);\n          item.init(viewer, this);\n        });\n      });\n    };\n    this.autoHide = autoHide;\n    this.showBackground = showBackground;\n    this.clickToPlay = clickToPlay;\n    this.keyboardControls = keyboardControls;\n    this.progressBar = progressBar;\n    this.playButton = playButton;\n    this.volumeButton = volumeButton;\n    this.fullscreenButton = fullscreenButton;\n    this.videoTime = videoTime;\n    this.pieView = pieView;\n    this.vrButton = vrButton;\n    this.gyroButton = gyroButton;\n    this.className = Object.assign(Object.assign({}, ControlBar.DEFAULT_CLASS), className);\n    const rootClass = (_a = className.CONTROLS_ROOT) !== null && _a !== void 0 ? _a : ControlBar.DEFAULT_CLASS.CONTROLS_ROOT;\n    this._rootEl = createElement(rootClass);\n    this._createPositionWrappers();\n    this._items = Object.keys(ControlBar.POSITION).reduce((items, key) => {\n      items[ControlBar.POSITION[key]] = [];\n      return items;\n    }, {});\n    this._customItems = customItems;\n    this._autoHider = new AutoHide(this, getObjectOption(autoHide));\n    this._videoControl = new VideoControl();\n    customItems.forEach(item => {\n      this._items[item.position].push(item);\n    });\n  }\n  init(viewer) {\n    const panoRoot = viewer.rootEl;\n    const controlsRoot = this._rootEl;\n    const defaultItems = this._createDefaultItems();\n    this._updateBackground(viewer);\n    this._updateAutoHide(viewer);\n    this._updateKeyboardHandler(viewer);\n    panoRoot.appendChild(controlsRoot);\n    this._addItem(viewer, defaultItems);\n    this._addItem(viewer, this._customItems);\n    viewer.on(EVENTS.PROJECTION_CHANGE, this._onNewSrcLoad);\n    viewer.on(EVENTS.STATIC_CLICK, this._onStaticClick);\n  }\n  destroy(viewer) {\n    // Remove controls root from pano root\n    const panoRoot = viewer.rootEl;\n    const controlsRoot = this._rootEl;\n    const items = this._items;\n    if (controlsRoot.parentElement === panoRoot) {\n      panoRoot.removeChild(controlsRoot);\n    }\n    Object.keys(items).forEach(key => {\n      const category = items[key];\n      category.forEach(item => {\n        item.destroy(viewer, this);\n      });\n      items[key] = [];\n    });\n    this._clearItemElements();\n    this._autoHider.disable(viewer);\n    this._videoControl.disable(panoRoot);\n    viewer.off(EVENTS.PROJECTION_CHANGE, this._onNewSrcLoad);\n    viewer.off(EVENTS.STATIC_CLICK, this._onStaticClick);\n  }\n  _addItem(viewer, items) {\n    for (const item of items) {\n      const category = this._items[item.position];\n      const wrapper = this._wrapperEl[item.position];\n      const nextSiblingIndex = findIndex(category, sibling => sibling.order > item.order);\n      if (nextSiblingIndex >= 0) {\n        const nextSibling = category[nextSiblingIndex].element;\n        category.splice(nextSiblingIndex, 0, item);\n        wrapper.insertBefore(item.element, nextSibling);\n      } else {\n        category.push(item);\n        wrapper.appendChild(item.element);\n      }\n      item.init(viewer, this);\n    }\n  }\n  _createPositionWrappers() {\n    const className = Object.assign(Object.assign({}, ControlBar.DEFAULT_CLASS), this.className);\n    const rootEl = this._rootEl;\n    // BG & FLOATING CONTROLS\n    const backgroundEl = createElement(className.CONTROLS_BG);\n    const floatLeftEl = createElement(className.CONTROLS_FLOAT_LEFT);\n    const floatRightEl = createElement(className.CONTROLS_FLOAT_RIGHT);\n    rootEl.appendChild(floatLeftEl);\n    rootEl.appendChild(floatRightEl);\n    // BOTTOM CONTROLS\n    const container = createElement(className.CONTROLS_MAIN);\n    const topWrapper = createElement(className.CONTROLS_TOP);\n    const bottomWrapper = createElement(className.CONTROLS_BOTTOM);\n    const midWrapper = createElement(className.CONTROLS_MID);\n    const leftControlsWrapper = createElement(className.CONTROLS_LEFT);\n    const rightControlsWrapper = createElement(className.CONTROLS_RIGHT);\n    midWrapper.appendChild(leftControlsWrapper);\n    midWrapper.appendChild(rightControlsWrapper);\n    container.appendChild(backgroundEl);\n    container.appendChild(topWrapper);\n    container.appendChild(midWrapper);\n    container.appendChild(bottomWrapper);\n    rootEl.appendChild(container);\n    this._bgEl = backgroundEl;\n    this._containerEl = container;\n    this._wrapperEl = {\n      [ControlBar.POSITION.MAIN_TOP]: topWrapper,\n      [ControlBar.POSITION.MAIN_LEFT]: leftControlsWrapper,\n      [ControlBar.POSITION.MAIN_RIGHT]: rightControlsWrapper,\n      [ControlBar.POSITION.MAIN_BOTTOM]: bottomWrapper,\n      [ControlBar.POSITION.TOP_LEFT]: floatLeftEl,\n      [ControlBar.POSITION.TOP_RIGHT]: floatRightEl\n    };\n  }\n  _clearItemElements() {\n    const wrappers = Object.keys(ControlBar.POSITION).map(key => ControlBar.POSITION[key]).map(pos => this._wrapperEl[pos]);\n    // Remove all elements inside wrappers\n    wrappers.forEach(wrapper => {\n      while (wrapper.firstChild) {\n        wrapper.removeChild(wrapper.firstChild);\n      }\n    });\n  }\n  _updateAutoHide(viewer) {\n    var _a;\n    const autoHide = this.autoHide;\n    const autoHider = this._autoHider;\n    if (autoHide != null) {\n      if (autoHide) {\n        autoHider.enable(viewer);\n      } else {\n        autoHider.disable(viewer);\n      }\n    } else {\n      // Automatically choose whether to show background by content type\n      const texture = (_a = viewer.mesh) === null || _a === void 0 ? void 0 : _a.getTexture();\n      if (texture && texture.isVideo()) {\n        // Enable auto hide when content type is video\n        autoHider.enable(viewer);\n      } else {\n        autoHider.disable(viewer);\n      }\n    }\n  }\n  _updateBackground(viewer) {\n    var _a, _b;\n    const background = this._bgEl;\n    const showBackground = this.showBackground;\n    const hiddenClass = (_a = this.className.HIDDEN) !== null && _a !== void 0 ? _a : ControlBar.DEFAULT_CLASS.HIDDEN;\n    if (showBackground != null) {\n      if (showBackground) {\n        background.classList.remove(hiddenClass);\n      } else {\n        background.classList.add(hiddenClass);\n      }\n    } else {\n      // Automatically choose whether to show background by content type\n      const texture = (_b = viewer.mesh) === null || _b === void 0 ? void 0 : _b.getTexture();\n      if (texture && texture.isVideo()) {\n        // Show bg when content type is video\n        background.classList.remove(hiddenClass);\n      } else {\n        background.classList.add(hiddenClass);\n      }\n    }\n  }\n  _updateKeyboardHandler(viewer) {\n    var _a;\n    const panoRoot = viewer.rootEl;\n    const videoControl = this._videoControl;\n    const texture = (_a = viewer.mesh) === null || _a === void 0 ? void 0 : _a.getTexture();\n    if (this.keyboardControls && texture && texture.isVideo()) {\n      videoControl.enable(panoRoot, texture);\n    } else {\n      videoControl.disable(panoRoot);\n    }\n  }\n  _createDefaultItems() {\n    const items = [];\n    if (this.progressBar) {\n      items.push(new ProgressBar(getObjectOption(this.progressBar)));\n    }\n    if (this.playButton) {\n      items.push(new PlayButton(getObjectOption(this.playButton)));\n    }\n    if (this.volumeButton) {\n      items.push(new VolumeControl(getObjectOption(this.volumeButton)));\n    }\n    if (this.gyroButton) {\n      items.push(new GyroButton(getObjectOption(this.gyroButton)));\n    }\n    if (this.vrButton) {\n      items.push(new VRButton(getObjectOption(this.vrButton)));\n    }\n    if (this.fullscreenButton) {\n      items.push(new FullscreenButton(getObjectOption(this.fullscreenButton)));\n    }\n    if (this.videoTime) {\n      items.push(new VideoTime(getObjectOption(this.videoTime)));\n    }\n    if (this.pieView) {\n      items.push(new PieView(getObjectOption(this.pieView)));\n    }\n    return items;\n  }\n}\n/**\r\n * Default class names that ControlBar uses\r\n * @ko ControlBar가 사용하는 디폴트 클래스 이름들\r\n * @since 4.0.0\r\n */\nControlBar.DEFAULT_CLASS = CONTROL_BAR_DEFAULT_CLASS;\n/**\r\n * Constants for {@link ControlBarItemOptions#position}\r\n * @ko {@link ControlBarItemOptions#position}에 사용 가능한 값들\r\n */\nControlBar.POSITION = CONTROL_BAR_ITEM_POSITION;\n\n/**\r\n * Base class for projections.\r\n * @ko 프로젝션 베이스 클래스.\r\n * @category Projection\r\n * @since 4.0.0\r\n */\nclass Projection {\n  /**\r\n   * Create new instance\r\n   * @ko 새로운 인스턴스를 생성합니다.\r\n   * @param options - Options {@ko 옵션들}\r\n   */\n  constructor({\n    src,\n    video = false\n  }) {\n    this.src = src;\n    this.video = video;\n  }\n  /**\r\n   * Update camera to match projection's settings.\r\n   * @ko 현재 프로젝션의 세팅으로 카메라를 업데이트합니다.\r\n   * @param camera - Instance of the camera to update {@ko 업데이트할 카메라의 인스턴스}\r\n   * @since 4.0.0\r\n   */\n  updateCamera(camera) {\n    // Use default mode & no view restriction\n    camera.resetRange();\n  }\n  /**\r\n   * Update control to match projection's settings.\r\n   * @ko 현재 프로젝션의 세팅으로 컨트롤을 업데이트합니다.\r\n   * @param control - Instance of the control to update {@ko 업데이트할 컨트롤의 인스턴스}\r\n   * @since 4.0.0\r\n   */\n  updateControl(control) {\n    control.ignoreZoomScale = false;\n  }\n}\n\n/*\r\n * Copyright (c) 2023-present NAVER Corp.\r\n * egjs projects are licensed under the MIT license\r\n */\nclass Uniform {\n  constructor() {\n    this.needsUpdate = true;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  destroy(gl) {\n    // DO_NOTHING\n  }\n}\n\nclass UniformTextureCube extends Uniform {\n  constructor(ctx, texture, cubemapOrder) {\n    super();\n    this.texture = texture;\n    this._webglTexture = ctx.createWebGLCubeTexture(texture, texture.width);\n    this._cubemapOrder = cubemapOrder;\n  }\n  destroy(gl) {\n    this.texture.destroy();\n    gl.deleteTexture(this._webglTexture);\n  }\n  update(gl, location, isWebGL2) {\n    const texture = this.texture;\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, texture.flipY);\n    gl.uniform1i(location, 0);\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_CUBE_MAP, this._webglTexture);\n    const sources = reorderCube(texture.sources, this._cubemapOrder);\n    sources.forEach((src, idx) => {\n      if (isWebGL2) {\n        gl.texSubImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X + idx, 0, 0, 0, gl.RGBA, gl.UNSIGNED_BYTE, src);\n      } else {\n        gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X + idx, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, src);\n      }\n    });\n    if (!texture.isVideo()) {\n      this.needsUpdate = false;\n    }\n  }\n}\n\n/** @hidden */\nclass CubeTexturePainter {\n  get size() {\n    return this._size;\n  }\n  constructor(texture, cubemapOrder) {\n    this.texture = texture;\n    this._renderingOrder = reorderCube(range(6), cubemapOrder);\n    const canvas = document.createElement(\"canvas\");\n    this._calcRenderingSize();\n    canvas.width = this._size;\n    canvas.height = this._size;\n    this._canvas = canvas;\n    this._ctx = canvas.getContext(\"2d\");\n  }\n  destroy() {\n    const canvas = this._canvas;\n    // release memories\n    canvas.width = 1;\n    canvas.height = 1;\n    this._canvas = null;\n  }\n  draw(gl, isWebGL2) {\n    const size = this._size;\n    const texture = this.texture;\n    let surfaceIdx = 0;\n    for (let row = 0; row < this._row; row++) {\n      for (let column = 0; column < this._column; column++) {\n        const x = size * column;\n        const y = size * row;\n        const renderingFace = this._renderingOrder[surfaceIdx];\n        this._ctx.drawImage(texture.source, x, y, size, size, 0, 0, size, size);\n        if (isWebGL2) {\n          gl.texSubImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X + renderingFace, 0, 0, 0, gl.RGBA, gl.UNSIGNED_BYTE, this._canvas);\n        } else {\n          gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X + renderingFace, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, this._canvas);\n        }\n        surfaceIdx++;\n      }\n    }\n  }\n  _calcRenderingSize() {\n    const {\n      width,\n      height\n    } = this.texture;\n    const aspect = width / height;\n    if (aspect === 1 / 6) {\n      this._size = width;\n      this._row = 6;\n      this._column = 1;\n    } else if (aspect === 6) {\n      this._size = height;\n      this._row = 1;\n      this._column = 6;\n    } else if (aspect === 2 / 3) {\n      this._size = width * 0.5;\n      this._row = 3;\n      this._column = 2;\n    } else {\n      this._size = width / 3;\n      this._row = 2;\n      this._column = 3;\n    }\n  }\n}\n\n/*\r\n * Copyright (c) 2023-present NAVER Corp.\r\n * egjs projects are licensed under the MIT license\r\n */\nclass UniformCanvasCube extends Uniform {\n  get texture() {\n    return this._painter.texture;\n  }\n  constructor(ctx, texture, cubemapOrder) {\n    super();\n    this._painter = new CubeTexturePainter(texture, cubemapOrder);\n    this._webglTexture = ctx.createWebGLCubeTexture(texture, this._painter.size);\n  }\n  destroy(gl) {\n    gl.deleteTexture(this._webglTexture);\n    this._painter.destroy();\n  }\n  update(gl, location, isWebGL2) {\n    const texture = this.texture;\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n    gl.uniform1i(location, 0);\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_CUBE_MAP, this._webglTexture);\n    this._painter.draw(gl, isWebGL2);\n    if (!texture.isVideo()) {\n      this.needsUpdate = false;\n    }\n  }\n}\n\n/*\r\n * Copyright (c) 2023-present NAVER Corp.\r\n * egjs projects are licensed under the MIT license\r\n */\n/**\r\n * @hidden\r\n */\nclass TriangleMesh extends Object3D {\n  constructor(vao, program) {\n    super();\n    this.vao = vao;\n    this.program = program;\n  }\n  destroy(ctx) {\n    ctx.releaseVAO(this.vao);\n    ctx.releaseShaderResources(this.program);\n  }\n  getTexture() {\n    return this.program.uniforms.uTexture.texture;\n  }\n}\n\nclass ShaderProgram {\n  constructor(ctx, vertexShader, fragmentShader, uniforms) {\n    this.program = ctx.createProgram(vertexShader, fragmentShader);\n    this.uniforms = uniforms;\n    this.uniformLocations = ctx.getUniformLocations(this.program, uniforms);\n  }\n}\n\n/**\r\n * @hidden\r\n */\nclass VertexData {\n  /** */\n  constructor(data, itemSize) {\n    this.data = data;\n    this.itemSize = itemSize;\n    this.count = data.length / itemSize;\n  }\n}\n\n/*\r\n * Copyright (c) 2023-present NAVER Corp.\r\n * egjs projects are licensed under the MIT license\r\n */\n/**\r\n * @hidden\r\n */\nclass Geometry {\n  /** */\n  constructor(vertices, indicies, uvs) {\n    this.vertices = new VertexData(new Float32Array(vertices), 3);\n    this.indicies = new VertexData(new Uint16Array(indicies), 1);\n    this.uvs = new VertexData(new Float32Array(uvs), 2);\n  }\n}\n\n/*\r\n * Copyright (c) 2023-present NAVER Corp.\r\n * egjs projects are licensed under the MIT license\r\n */\n/**\r\n * @hidden\r\n */\nclass CubeGeometry extends Geometry {\n  constructor({\n    order,\n    rotateUV\n  }) {\n    const vertices = [\n    // back\n    1, -1, 1, -1, -1, 1, -1, 1, 1, 1, 1, 1,\n    // front\n    -1, -1, -1, 1, -1, -1, 1, 1, -1, -1, 1, -1,\n    // up\n    -1, 1, -1, 1, 1, -1, 1, 1, 1, -1, 1, 1,\n    // down\n    -1, -1, 1, 1, -1, 1, 1, -1, -1, -1, -1, -1,\n    // right\n    1, -1, -1, 1, -1, 1, 1, 1, 1, 1, 1, -1,\n    // left\n    -1, -1, 1, -1, -1, -1, -1, 1, -1, -1, 1, 1];\n    const indicies = [0, 1, 2, 0, 2, 3, 4, 5, 6, 4, 6, 7, 8, 9, 10, 8, 10, 11, 12, 13, 14, 12, 14, 15, 16, 17, 18, 16, 18, 19, 20, 21, 22, 20, 22, 23];\n    const oneThird = 1 / 3;\n    const coords = [];\n    for (let r = 1; r >= 0; r--) {\n      for (let c = 0; c < 3; c++) {\n        const coord = [c * oneThird, r * 0.5, (c + 1) * oneThird, r * 0.5, (c + 1) * oneThird, (r + 1) * 0.5, c * oneThird, (r + 1) * 0.5];\n        coords.push(coord);\n      }\n    }\n    if (rotateUV) {\n      rotateUV.forEach((degree, idx) => {\n        if (degree === ROTATE.ZERO) return;\n        const coord = coords[idx];\n        let newOrder;\n        if (degree === ROTATE.CW_90) {\n          newOrder = [1, 2, 3, 0];\n        } else if (degree === ROTATE.CCW_90) {\n          newOrder = [3, 0, 1, 2];\n        } else {\n          newOrder = [2, 3, 0, 1];\n        }\n        const newCoords = Array(coord.length);\n        for (let uvIdx = 0; uvIdx < coord.length / 2; uvIdx++) {\n          newCoords[uvIdx * 2 + 0] = coord[newOrder[uvIdx] * 2 + 0];\n          newCoords[uvIdx * 2 + 1] = coord[newOrder[uvIdx] * 2 + 1];\n        }\n        coords[idx] = newCoords;\n      });\n    }\n    const uvs = reorderCube(coords, order, \"BFUDRL\").reduce((acc, val) => acc.concat(val), []);\n    super(vertices, indicies, uvs);\n  }\n}\n\nvar vs$3 = \"#define GLSLIFY 1\\nattribute vec3 position;attribute vec2 uv;uniform mat4 uMVMatrix;uniform mat4 uPMatrix;varying highp vec3 vPos;void main(){vPos=position;gl_Position=uPMatrix*uMVMatrix*vec4(position,1.0);}\"; // eslint-disable-line\n\nvar fs$3 = \"#define GLSLIFY 1\\nuniform samplerCube uTexture;varying highp vec3 vPos;void main(){gl_FragColor=textureCube(uTexture,vec3(vPos.x,vPos.y,-vPos.z));}\"; // eslint-disable-line\n\n/*\r\n * Copyright (c) 2023-present NAVER Corp.\r\n * egjs projects are licensed under the MIT license\r\n */\n/**\r\n * Projection based on cubemap images, accepts both multiple or single images.\r\n * @ko 큐브맵 이미지 기반의 프로젝션, 단일 혹은 여러 장의 이미지를 모두 사용 가능합니다.\r\n * @since 4.0.0\r\n * @category Projection\r\n */\nclass CubemapProjection extends Projection {\n  /**\r\n   * Create new instance.\r\n   * @ko 새 인스턴스를 생성합니다.\r\n   * @param options Options {@ko Options}\r\n   */\n  constructor(options) {\n    super(options);\n    const {\n      cubemapOrder = \"RLUDFB\",\n      cubemapFlipX = false\n    } = options;\n    this._cubemapOrder = cubemapOrder;\n    this._cubemapFlipX = cubemapFlipX;\n  }\n  createMesh(ctx, texture) {\n    const cubemapOrder = this._cubemapOrder;\n    const cubemapFlipX = this._cubemapFlipX;\n    const uniforms = {\n      uTexture: texture.isCube() ? new UniformTextureCube(ctx, texture, cubemapOrder) : new UniformCanvasCube(ctx, texture, cubemapOrder)\n    };\n    const geometry = new CubeGeometry({\n      order: cubemapOrder\n    });\n    const program = new ShaderProgram(ctx, vs$3, fs$3, uniforms);\n    const vao = ctx.createVAO(geometry, program);\n    const mesh = new TriangleMesh(vao, program);\n    if (cubemapFlipX) {\n      mesh.scale[0] = -1;\n    }\n    mesh.updateMatrix();\n    return mesh;\n  }\n}\n\nclass UniformTexture2D extends Uniform {\n  constructor(ctx, texture) {\n    super();\n    this.texture = texture;\n    this._webglTexture = ctx.createWebGLTexture(texture);\n  }\n  destroy(gl) {\n    this.texture.destroy();\n    gl.deleteTexture(this._webglTexture);\n  }\n  update(gl, location, isWebGL2) {\n    const texture = this.texture;\n    const isVideo = texture.isVideo();\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, texture.flipY);\n    gl.uniform1i(location, 0);\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, this._webglTexture);\n    if (!isVideo && isWebGL2) {\n      gl.texSubImage2D(gl.TEXTURE_2D, 0, 0, 0, gl.RGBA, gl.UNSIGNED_BYTE, texture.source);\n    } else {\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, texture.source);\n    }\n    if (!isVideo) {\n      this.needsUpdate = false;\n    }\n  }\n}\n\nvar vs$2 = \"#define GLSLIFY 1\\nattribute vec3 position;attribute vec2 uv;uniform mat4 uMVMatrix;uniform mat4 uPMatrix;varying highp vec2 vUV;void main(){vUV=uv;gl_Position=uPMatrix*uMVMatrix*vec4(position,1.0);}\"; // eslint-disable-line\n\nvar fs$2 = \"#define GLSLIFY 1\\nuniform sampler2D uTexture;varying highp vec2 vUV;void main(){gl_FragColor=texture2D(uTexture,vUV.st);}\"; // eslint-disable-line\n\n/*\r\n * Copyright (c) 2023-present NAVER Corp.\r\n * egjs projects are licensed under the MIT license\r\n */\n/**\r\n * Projection based on cubemap strip.\r\n * Slightly more efficient than {@link CubemapProjection} as it doesn't copy cubemap image to canvas while rendering.\r\n * Accepts only single image.\r\n * @ko 큐브맵 스트립 기반의 프로젝션.\r\n * {@link CubemapProjection}와 달리 렌더링하는 과정에 캔버스에 이미지를 복사하는 과정이 없기 때문에 살짝 더 효율적입니다.\r\n * 단일 이미지만 사용 가능합니다.\r\n * @since 4.0.0\r\n * @category Projection\r\n */\nclass CubestripProjection extends Projection {\n  /**\r\n   * Create new instance.\r\n   * @ko 새 인스턴스를 생성합니다.\r\n   * @param options Options {@ko Options}\r\n   */\n  constructor(options) {\n    super(options);\n    const {\n      cubemapOrder = \"RLUDFB\",\n      cubemapFlipX = false\n    } = options;\n    this._cubemapOrder = cubemapOrder;\n    this._cubemapFlipX = cubemapFlipX;\n  }\n  createMesh(ctx, texture) {\n    const cubemapOrder = this._cubemapOrder;\n    const cubemapFlipX = this._cubemapFlipX;\n    const uniforms = {\n      uTexture: new UniformTexture2D(ctx, texture)\n    };\n    const geometry = new CubeGeometry({\n      order: cubemapOrder\n    });\n    const program = new ShaderProgram(ctx, vs$2, fs$2, uniforms);\n    const vao = ctx.createVAO(geometry, program);\n    const mesh = new TriangleMesh(vao, program);\n    if (cubemapFlipX) {\n      mesh.scale[0] = -1;\n    }\n    mesh.updateMatrix();\n    return mesh;\n  }\n}\n\n/*\r\n * Copyright (c) 2023-present NAVER Corp.\r\n * egjs projects are licensed under the MIT license\r\n */\n/**\r\n * @hidden\r\n */\nclass CylinderGeometry extends Geometry {\n  constructor(maxTheta) {\n    const vertices = [];\n    const indicies = [];\n    const uvs = [];\n    const height = 1;\n    const radialSegments = 60;\n    const halfHeight = height * 0.5;\n    const heightSegments = [-halfHeight, halfHeight];\n    const invRadialSegments = 1 / radialSegments;\n    const angleConst = maxTheta * invRadialSegments;\n    for (let yIdx = 0; yIdx < 2; yIdx++) {\n      const y = heightSegments[yIdx];\n      for (let lngIdx = 0; lngIdx <= radialSegments; lngIdx++) {\n        const angle = lngIdx * angleConst + Math.PI - maxTheta * 0.5;\n        const x = Math.cos(angle);\n        const z = Math.sin(angle);\n        const u = lngIdx * invRadialSegments;\n        const v = yIdx;\n        uvs.push(u, v);\n        vertices.push(x, y, z);\n        if (yIdx === 0 && lngIdx < radialSegments) {\n          const a = lngIdx;\n          const b = a + radialSegments + 1;\n          indicies.push(a, b, a + 1, b, b + 1, a + 1);\n        }\n      }\n    }\n    super(vertices, indicies, uvs);\n  }\n}\n\n/*\r\n * Copyright (c) 2023-present NAVER Corp.\r\n * egjs projects are licensed under the MIT license\r\n*/\n/**\r\n * Projection based on cylindrical projection.\r\n * This can show panorama images taken from smartphones.\r\n * @ko 원통 투영법 기반의 프로젝션.\r\n * 일반적인 스마트폰 파노라마 사진을 표시하는데 사용될 수 있습니다.\r\n * @since 4.0.0\r\n * @category Projection\r\n */\nclass CylindricalProjection extends Projection {\n  /**\r\n   * Create new instance.\r\n   * @ko 새 인스턴스를 생성합니다.\r\n   * @param options Options {@ko Options}\r\n   */\n  constructor(options) {\n    super(options);\n    const {\n      partial = false\n    } = options;\n    this._partial = partial;\n    this._aspect = 1;\n    this._halfHeight = 0;\n    this._mesh = null;\n  }\n  createMesh(ctx, texture) {\n    if (this._mesh) return this._mesh;\n    const partial = this._partial;\n    const {\n      width,\n      height\n    } = texture;\n    const aspect = width / height;\n    const halfVFov = 180 / aspect;\n    const cylinderHeight = partial ? 1 : 2 * Math.tan(halfVFov * DEG_TO_RAD);\n    const cylinderTheta = partial ? aspect : 2 * Math.PI;\n    const geometry = new CylinderGeometry(cylinderTheta);\n    const program = new ShaderProgram(ctx, vs$2, fs$2, {\n      uTexture: new UniformTexture2D(ctx, texture)\n    });\n    const vao = ctx.createVAO(geometry, program);\n    const mesh = new TriangleMesh(vao, program);\n    mesh.scale[1] = cylinderHeight;\n    quat.identity(mesh.rotation);\n    quat.rotateY(mesh.rotation, mesh.rotation, -Math.PI / 2);\n    mesh.updateMatrix();\n    this._aspect = aspect;\n    this._halfHeight = cylinderHeight * 0.5;\n    this._mesh = mesh;\n    return mesh;\n  }\n  updateCamera(camera) {\n    super.updateCamera(camera);\n    const mesh = this._mesh;\n    const aspect = this._aspect;\n    const halfHeight = this._halfHeight;\n    if (!mesh) return;\n    if (this._partial) {\n      const restrictedYaw = 0.5 * aspect * RAD_TO_DEG;\n      camera.restrictYawRange(-restrictedYaw, restrictedYaw);\n    }\n    const restrictedPitch = Math.atan2(halfHeight, 1) * RAD_TO_DEG;\n    const minZoom = Math.tan(camera.fov * DEG_TO_RAD * 0.5) / (halfHeight * camera.aspect);\n    camera.restrictPitchRange(-restrictedPitch, restrictedPitch);\n    camera.restrictZoomRange(minZoom, Infinity);\n    camera.restrictRenderHeight(halfHeight * 2);\n  }\n}\n\nvar fs$1 = \"#define PI 3.14159265359\\nprecision mediump float;\\n#define GLSLIFY 1\\nuniform sampler2D uTexture;varying highp vec2 vUV;const vec2 OPERATE_COORDS_RANGE=vec2(-1.0,1.0);const vec2 TEXTURE_COORDS_RANGE=vec2(0.0,1.0);const float ONE_THIRD=1.0/3.0;const float EAC_CONST=2.0/PI;float scale(vec2 domainRange,vec2 targetRange,float val){float unit=1.0/(domainRange[1]-domainRange[0]);return targetRange[0]+(targetRange[1]-targetRange[0])*(val-domainRange[0])*unit;}void main(void){float transformedCoordX;float transformedCoordY;float texRangeXStart=floor(vUV.s*3.)*ONE_THIRD;float texRangeYStart=floor(vUV.t*2.)*0.5;vec2 orgTextureRangeX=vec2(texRangeXStart,texRangeXStart+ONE_THIRD);vec2 orgTextureRangeY=vec2(texRangeYStart,texRangeYStart+0.5);float px=scale(orgTextureRangeX,OPERATE_COORDS_RANGE,vUV.s);float py=scale(orgTextureRangeY,OPERATE_COORDS_RANGE,vUV.t);float qu=EAC_CONST*atan(px)+0.5;float qv=EAC_CONST*atan(py)+0.5;transformedCoordX=scale(TEXTURE_COORDS_RANGE,orgTextureRangeX,qu);transformedCoordY=scale(TEXTURE_COORDS_RANGE,orgTextureRangeY,qv);gl_FragColor=texture2D(uTexture,vec2(transformedCoordX,transformedCoordY));}\"; // eslint-disable-line\n\n/*\r\n * Copyright (c) 2023-present NAVER Corp.\r\n * egjs projects are licensed under the MIT license\r\n */\n/**\r\n * Equi-Angular Cubemap Projection.\r\n * This format is used by Youtube's 360 videos.\r\n * @ko Equi-Angular Cubemap 프로젝션.\r\n * 이 포맷은 주로 Youtube의 360 비디오에 사용됩니다.\r\n * @since 4.0.0\r\n * @category Projection\r\n */\nclass EquiangularProjection extends Projection {\n  createMesh(ctx, texture) {\n    const uniforms = {\n      uTexture: new UniformTexture2D(ctx, texture)\n    };\n    const geometry = new CubeGeometry({\n      order: \"LFRDBU\",\n      rotateUV: [ROTATE.ZERO, ROTATE.ZERO, ROTATE.ZERO, ROTATE.CW_90, ROTATE.CCW_90, ROTATE.CW_90]\n    });\n    const program = new ShaderProgram(ctx, vs$2, fs$1, uniforms);\n    const vao = ctx.createVAO(geometry, program);\n    const mesh = new TriangleMesh(vao, program);\n    return mesh;\n  }\n}\n\n/*\r\n * Copyright (c) 2023-present NAVER Corp.\r\n * egjs projects are licensed under the MIT license\r\n */\n/**\r\n * @hidden\r\n */\nclass SphereGeometry extends Geometry {\n  /** */\n  constructor() {\n    // const radius = 1;\n    const widthSegments = 60;\n    const heightSegments = 60;\n    const ANGLE_CORRECTION_FOR_CENTER_ALIGN = -0.5 * Math.PI;\n    const uvs = [];\n    const vertices = [];\n    const indicies = [];\n    let latIdx;\n    let lngIdx;\n    for (latIdx = 0; latIdx <= widthSegments; latIdx++) {\n      const theta = (latIdx / widthSegments - 0.5) * Math.PI;\n      const sinTheta = Math.sin(theta);\n      const cosTheta = Math.cos(theta);\n      for (lngIdx = 0; lngIdx <= heightSegments; lngIdx++) {\n        const phi = (lngIdx / heightSegments - 0.5) * 2 * Math.PI + ANGLE_CORRECTION_FOR_CENTER_ALIGN;\n        const sinPhi = Math.sin(phi);\n        const cosPhi = Math.cos(phi);\n        const x = cosPhi * cosTheta;\n        const y = sinTheta;\n        const z = sinPhi * cosTheta;\n        const u = lngIdx / heightSegments;\n        const v = latIdx / widthSegments;\n        uvs.push(u, v);\n        vertices.push(x, y, z);\n        if (lngIdx !== heightSegments && latIdx !== widthSegments) {\n          const a = latIdx * (heightSegments + 1) + lngIdx;\n          const b = a + heightSegments + 1;\n          indicies.push(a, a + 1, b, b, a + 1, b + 1);\n        }\n      }\n    }\n    super(vertices, indicies, uvs);\n  }\n}\n\n/*\r\n * Copyright (c) 2023-present NAVER Corp.\r\n * egjs projects are licensed under the MIT license\r\n */\n/**\r\n * Projection based on equirectangular projection.\r\n * @ko 등 장방형 도법(Equirectangular projection) 기반의 프로젝션\r\n * @since 4.0.0\r\n * @category Projection\r\n */\nclass EquirectProjection extends Projection {\n  /**\r\n   * Create new instance\r\n   * @ko 새로운 인스턴스를 생성합니다.\r\n   * @param options - Options {@ko 옵션들}\r\n   */\n  constructor(options) {\n    super(options);\n  }\n  createMesh(ctx, texture) {\n    const uniforms = {\n      uTexture: new UniformTexture2D(ctx, texture)\n    };\n    const geometry = new SphereGeometry();\n    const program = new ShaderProgram(ctx, vs$2, fs$2, uniforms);\n    const vao = ctx.createVAO(geometry, program);\n    const mesh = new TriangleMesh(vao, program);\n    return mesh;\n  }\n}\n\n/*\r\n * Copyright (c) 2023-present NAVER Corp.\r\n * egjs projects are licensed under the MIT license\r\n */\nclass UniformFloat extends Uniform {\n  constructor(val) {\n    super();\n    this.val = val;\n  }\n  update(gl, location) {\n    gl.uniform1f(location, this.val);\n    this.needsUpdate = false;\n  }\n}\n\n/*\r\n * Copyright (c) 2023-present NAVER Corp.\r\n * egjs projects are licensed under the MIT license\r\n */\n/**\r\n * @hidden\r\n */\nclass PlaneGeometry extends Geometry {\n  /** */\n  constructor(width = 2, height = 2, z = -1) {\n    const halfWidth = width * 0.5;\n    const halfHeight = height * 0.5;\n    const vertices = [-halfWidth, -halfHeight, z, halfWidth, -halfHeight, z, -halfWidth, halfHeight, z, halfWidth, halfHeight, z];\n    const indicies = [0, 1, 2, 2, 1, 3];\n    const uvs = [0, 0, 1, 0, 0, 1, 1, 1];\n    super(vertices, indicies, uvs);\n  }\n}\n\nvar vs$1 = \"#define GLSLIFY 1\\nattribute vec3 position;attribute vec2 uv;uniform mat4 uMVMatrix;uniform mat4 uPMatrix;varying highp vec2 vUV;void main(){vUV=uv;gl_Position=vec4(position,1.0);}\"; // eslint-disable-line\n\nvar fs = \"precision mediump float;\\n#define GLSLIFY 1\\nuniform sampler2D uTexture;uniform float uYaw;uniform float uPitch;uniform float uZoom;varying highp vec2 vUV;const float PI=3.1415926536;const float PI_2=PI*0.5;vec2 toStereographicUV(in vec2 uv,in vec2 center){float R=1.*uZoom;vec2 texLatLon=(uv*2.-1.)*vec2(PI,PI_2);vec2 central=(center*2.-1.)*vec2(PI,PI_2)+vec2(PI,0);float x=texLatLon.x;float y=texLatLon.y;float rou=sqrt(x*x+y*y);float c=2.0*atan(rou,R*0.5);float sin_c=sin(c);float cos_c=cos(c);float sin_cy=sin(central.y);float cos_cy=cos(central.y);float lat=asin(cos_c*sin_cy+(y*sin_c*cos_cy)/rou);float lon=central.x+atan(x*sin_c,rou*cos_cy*cos_c-y*sin_cy*sin_c);float u=(lon/PI+1.0)*0.5;float v=(lat/PI_2+1.0)*0.5;return vec2(u,v);}void main(){vec2 central=vec2(uYaw,uPitch);vec2 uv=toStereographicUV(vUV,central);gl_FragColor=texture2D(uTexture,uv);}\"; // eslint-disable-line\n\n/*\r\n * Copyright (c) 2023-present NAVER Corp.\r\n * egjs projects are licensed under the MIT license\r\n */\n/**\r\n * Projection based on so-called \"Little planet\" or \"Tiny planet\" effect.\r\n * @ko \"Little planet\" 혹은 \"Tiny planet\"로 불리는 이펙트 기반의 프로젝션\r\n * @since 4.0.0\r\n * @category Projection\r\n */\nclass LittlePlanetProjection extends Projection {\n  /**\r\n   * Create new instance\r\n   * @ko 새로운 인스턴스를 생성합니다.\r\n   * @param options - Options {@ko 옵션들}\r\n   */\n  constructor(options) {\n    super(options);\n  }\n  createMesh(ctx, texture) {\n    texture.wrapS = WebGLRenderingContext.REPEAT;\n    texture.wrapT = WebGLRenderingContext.REPEAT;\n    const uniforms = {\n      uTexture: new UniformTexture2D(ctx, texture),\n      uYaw: new UniformFloat(0),\n      uPitch: new UniformFloat(0.5),\n      uZoom: new UniformFloat(1)\n    };\n    const geometry = new PlaneGeometry();\n    const program = new ShaderProgram(ctx, vs$1, fs, uniforms);\n    const vao = ctx.createVAO(geometry, program);\n    const mesh = new TriangleMesh(vao, program);\n    mesh.on(OBJECT_3D_EVENTS.UPDATE, ({\n      camera\n    }) => {\n      const uniforms = mesh.program.uniforms;\n      uniforms.uYaw.val = camera.yaw / 360;\n      // Range from 0 ~ 1\n      uniforms.uPitch.val = camera.pitch / 180 + 0.5;\n      uniforms.uZoom.val = camera.zoom;\n      uniforms.uYaw.needsUpdate = true;\n      uniforms.uPitch.needsUpdate = true;\n      uniforms.uZoom.needsUpdate = true;\n    });\n    return mesh;\n  }\n  updateControl(control) {\n    control.ignoreZoomScale = true;\n  }\n}\n\n/*\r\n * Copyright (c) 2023-present NAVER Corp.\r\n * egjs projects are licensed under the MIT license\r\n */\nclass UniformVector4Array extends Uniform {\n  constructor(val) {\n    super();\n    this.val = val;\n  }\n  update(gl, location) {\n    gl.uniform4fv(location, this.val.reduce((arr, vector) => [...arr, ...vector], []));\n    this.needsUpdate = false;\n  }\n}\n\nvar vs = \"#define GLSLIFY 1\\nattribute vec3 position;attribute vec2 uv;uniform mat4 uMVMatrix;uniform mat4 uPMatrix;uniform vec4 uTexScaleOffset[2];uniform float uEye;varying highp vec2 vUV;void main(){vec4 scaleOffset=uTexScaleOffset[int(uEye)];vUV=uv.xy*scaleOffset.xy+scaleOffset.zw;gl_Position=uPMatrix*uMVMatrix*vec4(position,1.0);}\"; // eslint-disable-line\n\n/*\r\n * Copyright (c) 2023-present NAVER Corp.\r\n * egjs projects are licensed under the MIT license\r\n */\n/**\r\n * Projection based on stereo equirectangular images.\r\n * @ko Stereo equirectangular 이미지 기반의 프로젝션\r\n * @since 4.0.0\r\n * @category Projection\r\n */\nclass StereoEquiProjection extends Projection {\n  /**\r\n   * Create new instance\r\n   * @ko 새로운 인스턴스를 생성합니다.\r\n   * @param options - Options {@ko 옵션들}\r\n   */\n  constructor(options) {\n    super(options);\n    this._mode = options.mode;\n  }\n  createMesh(ctx, texture) {\n    let leftEye;\n    let rightEye;\n    switch (this._mode) {\n      case StereoEquiProjection.MODE.LEFT_RIGHT:\n        leftEye = [0.5, 1, 0, 0];\n        rightEye = [0.5, 1, 0.5, 0];\n        break;\n      default:\n        // Default, uses \"top_bottom\"\n        leftEye = [1, 0.5, 0, 0];\n        rightEye = [1, 0.5, 0, 0.5];\n    }\n    const uniforms = {\n      uTexture: new UniformTexture2D(ctx, texture),\n      uEye: new UniformFloat(0),\n      uTexScaleOffset: new UniformVector4Array([leftEye, rightEye])\n    };\n    const geometry = new SphereGeometry();\n    const program = new ShaderProgram(ctx, vs, fs$2, uniforms);\n    const vao = ctx.createVAO(geometry, program);\n    const mesh = new TriangleMesh(vao, program);\n    return mesh;\n  }\n}\n/**\r\n * Available stereoscopic modes\r\n * @ko 사용가능한 스테레오스코픽 모드들\r\n * @since 4.0.0\r\n */\nStereoEquiProjection.MODE = {\n  /**\r\n   * @ko 이미지가 왼쪽/오른쪽으로 구성되어있을 경우\r\n   * @since 4.0.0\r\n   */\n  LEFT_RIGHT: \"left_right\",\n  /**\r\n   * @ko 이미지가 위/아래로 구성되어있을 경우\r\n   * @since 4.0.0\r\n   */\n  TOP_BOTTOM: \"top_bottom\"\n};\n\n/**\r\n * @hidden\r\n */\nconst withMethods = (prototype, attr) => {\n  [Component.prototype, View360.prototype].forEach(proto => {\n    Object.getOwnPropertyNames(proto).filter(name => name.charAt(0) !== \"_\" && name !== \"constructor\").forEach(name => {\n      const descriptor = Object.getOwnPropertyDescriptor(proto, name);\n      if (descriptor.value) {\n        // Public Function\n        Object.defineProperty(prototype, name, {\n          value: function (...args) {\n            return descriptor.value.call(this[attr], ...args);\n          }\n        });\n      } else {\n        const getterDescriptor = {};\n        if (descriptor.get) {\n          getterDescriptor.get = function () {\n            var _a;\n            return this[attr] && ((_a = descriptor.get) === null || _a === void 0 ? void 0 : _a.call(this[attr]));\n          };\n        }\n        if (descriptor.set) {\n          getterDescriptor.set = function (...args) {\n            var _a;\n            return (_a = descriptor.set) === null || _a === void 0 ? void 0 : _a.call(this[attr], ...args);\n          };\n        }\n        Object.defineProperty(prototype, name, getterDescriptor);\n      }\n    });\n  });\n};\n\n/**\r\n * @hidden\r\n */\nconst getValidProps = propsObj => {\n  return Object.keys(propsObj).reduce((props, propName) => {\n    if (propsObj[propName] != null) {\n      props[propName] = propsObj[propName];\n    }\n    return props;\n  }, {});\n};\n\nconst VIEW360_METHODS = [\"destroy\", \"init\", \"load\", \"resize\", \"addPlugins\", \"removePlugins\", \"renderFrame\",\n// @egjs/component methods\n\"on\", \"hasOn\", \"once\", \"off\", \"trigger\"];\n\n/*\r\n * Copyright (c) 2023-present NAVER Corp.\r\n * egjs projects are licensed under the MIT license\r\n */\n\nexport { AutoResizer, Autoplay, Camera, CameraAnimation, ControlBar, ControlBarItem, CubemapProjection, CubestripProjection, CylindricalProjection, DEFAULT_CLASS, EASING, ERROR_CODES, EVENTS, EquiangularProjection, EquirectProjection, FullscreenButton, GyroControl, Hotspot, HotspotRenderer, LittlePlanetProjection, LoadingSpinner, Motion, Object3D, PanoControl, PieView, PlayButton, ProgressBar, Projection, RotateControl, StereoEquiProjection, VIEW360_METHODS, VideoTime, View360Error, VolumeControl, WebGLRenderer, XRManager, ZoomControl, View360 as default, getValidProps, withMethods };\n\n", "import View360__default, { withMethods, DEFAULT_CLASS, EVENTS } from '@egjs/view360';\nexport * from '@egjs/view360';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, PLATFORM_ID, Component, Inject, Input, Output, ViewChild, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { isPlatformServer, CommonModule } from '@angular/common';\nimport { Subject, fromEvent } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { __decorate, __metadata } from 'tslib';\nconst _c0 = [\"canvas\"];\nconst _c1 = [\"*\"];\nclass View360Interface {}\n__decorate([withMethods, __metadata(\"design:type\", View360__default)], View360Interface.prototype, \"_view360\", void 0);\nconst optionNames = Object.getOwnPropertyNames(View360__default.prototype).filter(name => {\n  const descriptor = Object.getOwnPropertyDescriptor(View360__default.prototype, name);\n  if (name.startsWith(\"_\")) return false;\n  if (name === \"constructor\") return false;\n  if (descriptor?.value) return false;\n  return true;\n});\nconst setterNames = optionNames.filter(name => {\n  const descriptor = Object.getOwnPropertyDescriptor(View360__default.prototype, name);\n  return !!descriptor.set;\n});\n\n/**\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n/* eslint-disable @typescript-eslint/no-unused-vars */\nclass NgxView360Component extends View360Interface {\n  constructor(_elRef, _platformId, _ngZone) {\n    super();\n    this._elRef = _elRef;\n    this._platformId = _platformId;\n    this._ngZone = _ngZone;\n    this.readyEmitter = new EventEmitter();\n    this.loadStartEmitter = new EventEmitter();\n    this.loadEmitter = new EventEmitter();\n    this.projectionChangeEmitter = new EventEmitter();\n    this.resizeEmitter = new EventEmitter();\n    this.beforeRenderEmitter = new EventEmitter();\n    this.renderEmitter = new EventEmitter();\n    this.inputStartEmitter = new EventEmitter();\n    this.inputEndEmitter = new EventEmitter();\n    this.viewChangeEmitter = new EventEmitter();\n    this.staticClickEmitter = new EventEmitter();\n    this.vrStartEmitter = new EventEmitter();\n    this.vrEndEmitter = new EventEmitter();\n    this._destroy$ = new Subject();\n    this._view360 = null;\n  }\n  get element() {\n    return this._elRef.nativeElement;\n  }\n  get _canvasElClass() {\n    return `${DEFAULT_CLASS.CANVAS} ${this.canvasClass ?? \"\"}`.trim();\n  }\n  ngAfterViewInit() {\n    if (isPlatformServer(this._platformId)) return;\n    const container = this._elRef.nativeElement;\n    const options = this.options ?? {};\n    this._view360 = this._ngZone.runOutsideAngular(() => new View360__default(container, options));\n    this._bindEvents();\n  }\n  ngOnDestroy() {\n    this._destroy$.next();\n    this._view360?.destroy();\n  }\n  ngOnChanges(changes) {\n    const view360 = this._view360;\n    if (!view360) return;\n    const changed = changes.options;\n    if (!changed) return;\n    const prev = changed.previousValue;\n    const current = changed.currentValue;\n    setterNames.forEach(name => {\n      const oldProp = prev[name];\n      const newProp = current[name];\n      if (newProp !== oldProp) {\n        view360[name] = newProp;\n      }\n    });\n  }\n  _bindEvents() {\n    const view360 = this._view360;\n    Object.keys(EVENTS).forEach(evtKey => {\n      const evtName = EVENTS[evtKey];\n      fromEvent(view360, evtName).pipe(takeUntil(this._destroy$)).subscribe(event => {\n        const emitter = this[`${evtName}Emitter`];\n        if (emitter && emitter.observers.length > 0) {\n          this._ngZone.run(() => emitter.emit(event));\n        }\n      });\n    });\n  }\n}\nNgxView360Component.ɵfac = function NgxView360Component_Factory(t) {\n  return new (t || NgxView360Component)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(PLATFORM_ID), i0.ɵɵdirectiveInject(i0.NgZone));\n};\nNgxView360Component.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NgxView360Component,\n  selectors: [[\"ngx-view360\"], [\"\", \"NgxView360\", \"\"]],\n  viewQuery: function NgxView360Component_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.canvas = _t.first);\n    }\n  },\n  hostAttrs: [1, \"view360-container\", 2, \"display\", \"block\"],\n  inputs: {\n    options: \"options\",\n    canvasClass: \"canvasClass\"\n  },\n  outputs: {\n    readyEmitter: \"ready\",\n    loadStartEmitter: \"loadStart\",\n    loadEmitter: \"load\",\n    projectionChangeEmitter: \"projectionChange\",\n    resizeEmitter: \"resize\",\n    beforeRenderEmitter: \"beforeRender\",\n    renderEmitter: \"render\",\n    inputStartEmitter: \"inputStart\",\n    inputEndEmitter: \"inputEnd\",\n    viewChangeEmitter: \"viewChange\",\n    staticClickEmitter: \"staticClick\",\n    vrStartEmitter: \"vrStart\",\n    vrEndEmitter: \"vrEnd\"\n  },\n  features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c1,\n  decls: 3,\n  vars: 1,\n  consts: [[\"canvas\", \"\"], [3, \"ngClass\"]],\n  template: function NgxView360Component_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelement(0, \"canvas\", 1, 0);\n      i0.ɵɵprojection(2);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngClass\", ctx._canvasElClass);\n    }\n  },\n  dependencies: [i1.NgClass],\n  encapsulation: 2\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxView360Component, [{\n    type: Component,\n    args: [{\n      selector: \"ngx-view360, [NgxView360]\",\n      template: `\n    <canvas #canvas [ngClass]=\"_canvasElClass\"></canvas>\n    <ng-content></ng-content>\n  `,\n      host: {\n        style: \"display: block;\",\n        class: \"view360-container\"\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    options: [{\n      type: Input\n    }],\n    canvasClass: [{\n      type: Input\n    }],\n    readyEmitter: [{\n      type: Output,\n      args: [\"ready\"]\n    }],\n    loadStartEmitter: [{\n      type: Output,\n      args: [\"loadStart\"]\n    }],\n    loadEmitter: [{\n      type: Output,\n      args: [\"load\"]\n    }],\n    projectionChangeEmitter: [{\n      type: Output,\n      args: [\"projectionChange\"]\n    }],\n    resizeEmitter: [{\n      type: Output,\n      args: [\"resize\"]\n    }],\n    beforeRenderEmitter: [{\n      type: Output,\n      args: [\"beforeRender\"]\n    }],\n    renderEmitter: [{\n      type: Output,\n      args: [\"render\"]\n    }],\n    inputStartEmitter: [{\n      type: Output,\n      args: [\"inputStart\"]\n    }],\n    inputEndEmitter: [{\n      type: Output,\n      args: [\"inputEnd\"]\n    }],\n    viewChangeEmitter: [{\n      type: Output,\n      args: [\"viewChange\"]\n    }],\n    staticClickEmitter: [{\n      type: Output,\n      args: [\"staticClick\"]\n    }],\n    vrStartEmitter: [{\n      type: Output,\n      args: [\"vrStart\"]\n    }],\n    vrEndEmitter: [{\n      type: Output,\n      args: [\"vrEnd\"]\n    }],\n    canvas: [{\n      type: ViewChild,\n      args: [\"canvas\"]\n    }]\n  });\n})();\n\n/**\n * Copyright (c) 2023-present NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nclass NgxView360Module {}\nNgxView360Module.ɵfac = function NgxView360Module_Factory(t) {\n  return new (t || NgxView360Module)();\n};\nNgxView360Module.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NgxView360Module,\n  declarations: [NgxView360Component],\n  imports: [CommonModule],\n  exports: [NgxView360Component]\n});\nNgxView360Module.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [CommonModule]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxView360Module, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgxView360Component],\n      imports: [CommonModule],\n      exports: [NgxView360Component]\n    }]\n  }], null, null);\n})();\n\n/*\n * Public API Surface of ngx-view360\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NgxView360Component, NgxView360Module };\n"],
  "mappings": "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AE,KAAc,UAAU,KAAK,IAAI,GAAK,KAAK,IAAI,EAAE,GAAG,KAAK,IAAI,EAAE,CAAC,KAAK,KAAK,IAAI,KAAK,EAAE,KAAc,UAAU,KAAK,IAAI,GAAK,KAAK,IAAI,EAAE,GAAG,KAAK,IAAI,EAAE,CAAC,KAAK,KAAK,IAAI,KAAK,EAAE,KAAc,UAAU,KAAK,IAAI,GAAK,KAAK,IAAI,EAAE,GAAG,KAAK,IAAI,EAAE,CAAC,KAAK,KAAK,IAAI,KAAK,EAAE,KAAc,UAAU,KAAK,IAAI,GAAK,KAAK,IAAI,EAAE,GAAG,KAAK,IAAI,EAAE,CAAC,KAAK,KAAK,IAAI,KAAK,EAAE,KAAc,UAAU,KAAK,IAAI,GAAK,KAAK,IAAI,EAAE,GAAG,KAAK,IAAI,EAAE,CAAC,KAAK,KAAK,IAAI,KAAK,EAAE,KAAc,UAAU,KAAK,IAAI,GAAK,KAAK,IAAI,EAAE,GAAG,KAAK,IAAI,EAAE,CAAC,KAAK,KAAK,IAAI,KAAK,EAAE,KAAc,UAAU,KAAK,IAAI,GAAK,KAAK,IAAI,EAAE,GAAG,KAAK,IAAI,EAAE,CAAC,KAAK,KAAK,IAAI,KAAK,EAAE,KAAc,UAAU,KAAK,IAAI,GAAK,KAAK,IAAI,EAAE,GAAG,KAAK,IAAI,EAAE,CAAC,KAAK,KAAK,IAAI,KAAK,EAAE,KAAc,UAAU,KAAK,IAAI,GAAK,KAAK,IAAI,EAAE,GAAG,KAAK,IAAI,EAAE,CAAC,KAAK,KAAK,IAAI,KAAK,EAAE,KAAc,UAAU,KAAK,IAAI,GAAK,KAAK,IAAI,EAAE,GAAG,KAAK,IAAI,EAAE,CAAC,KAAK,KAAK,IAAI,MAAM,GAAG,KAAc,UAAU,KAAK,IAAI,GAAK,KAAK,IAAI,GAAG,GAAG,KAAK,IAAI,GAAG,CAAC,KAAK,KAAK,IAAI,MAAM,GAAG,KAAc,UAAU,KAAK,IAAI,GAAK,KAAK,IAAI,GAAG,GAAG,KAAK,IAAI,GAAG,CAAC,KAAK,KAAK,IAAI,MAAM,GAAG,KAAc,UAAU,KAAK,IAAI,GAAK,KAAK,IAAI,GAAG,GAAG,KAAK,IAAI,GAAG,CAAC,KAAK,KAAK,IAAI,MAAM,GAAG,KAAc,UAAU,KAAK,IAAI,GAAK,KA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",
  "names": ["ComponentEvent", "_a", "Component", "length", "create", "create", "len", "scale", "add", "clone", "copy", "create", "dot", "equals", "exactEquals", "fromValues", "identity", "invert", "len", "length", "lerp", "mul", "multiply", "normalize", "random", "rotateX", "rotateY", "rotateZ", "scale", "set", "sqrLen", "squaredLength", "str", "add", "clone", "copy", "create", "equals", "exactEquals", "fromValues", "mul", "multiply", "rotateX", "rotateY", "rotateZ", "scale", "set", "str", "sub", "subtract", "create", "clone", "fromValues", "copy", "set", "add", "subtract", "multiply", "scale", "len", "rotateX", "rotateY", "rotateZ", "str", "exactEquals", "equals", "sub", "mul", "create", "clone", "fromValues", "copy", "set", "add", "scale", "length", "squaredLength", "normalize", "len", "dot", "lerp", "exactEquals", "equals", "forEach", "create", "create", "identity", "dot", "multiply", "rotateX", "rotateY", "rotateZ", "scale", "random", "invert", "str", "clone", "fromValues", "copy", "set", "add", "mul", "lerp", "length", "len", "squaredLength", "sqrLen", "normalize", "exactEquals", "equals", "add", "angle", "ceil", "clone", "copy", "create", "cross", "dist", "distance", "div", "divide", "dot", "equals", "exactEquals", "floor", "forEach", "fromValues", "inverse", "len", "length", "lerp", "max", "min", "mul", "multiply", "negate", "normalize", "random", "rotate", "round", "scale", "scaleAndAdd", "set", "sqrDist", "sqrLen", "squaredDistance", "squaredLength", "str", "sub", "subtract", "transformMat3", "transformMat4", "zero", "create", "clone", "fromValues", "copy", "set", "add", "subtract", "multiply", "divide", "ceil", "floor", "min", "max", "round", "scale", "scaleAndAdd", "distance", "squaredDistance", "length", "squaredLength", "negate", "inverse", "normalize", "len", "dot", "cross", "lerp", "random", "transformMat3", "transformMat4", "rotate", "angle", "zero", "str", "exactEquals", "equals", "sub", "mul", "div", "dist", "sqrDist", "sqrLen", "forEach", "d", "b", "Observer", "ComputedObserver", "extendStatics", "d", "b", "__extends", "__assign", "__extends", "Loader", "ElementLoader", "ImReadyManager", "elements", "_a", "length", "ImageLoader", "VideoLoader", "ImReady", "MOUSE_BUTTON", "DIRECTION_KEY_CODE", "ROTATE", "EPSILON", "isString", "min", "max", "lerp", "range", "_a", "keyboardScale", "pointerScale", "scale", "distance", "screen", "rotate", "canvas", "vs", "fs", "hotspot", "autoplay", "resetCamera", "degree", "angle", "uniforms"]
}
